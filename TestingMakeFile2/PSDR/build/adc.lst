ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	MX_ADC1_Init:
  26              	.LFB138:
  27              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   * This notice applies to any and all portions of this file
   8:Src/adc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/adc.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/adc.c     ****   * inserted by the user or by software development tools
  11:Src/adc.c     ****   * are owned by their respective copyright owners.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/adc.c     ****   * All rights reserved.
  15:Src/adc.c     ****   *
  16:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/adc.c     ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/adc.c     ****   *
  19:Src/adc.c     ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/adc.c     ****   *    this list of conditions and the following disclaimer.
  21:Src/adc.c     ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/adc.c     ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/adc.c     ****   *    and/or other materials provided with the distribution.
  24:Src/adc.c     ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/adc.c     ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/adc.c     ****   *    derived from this software without specific written permission.
  27:Src/adc.c     ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/adc.c     ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/adc.c     ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/adc.c     ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/adc.c     ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 2


  32:Src/adc.c     ****   *    this license. 
  33:Src/adc.c     ****   *
  34:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/adc.c     ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/adc.c     ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/adc.c     ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/adc.c     ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/adc.c     ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/adc.c     ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/adc.c     ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/adc.c     ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/adc.c     ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/adc.c     ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/adc.c     ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/adc.c     ****   *
  47:Src/adc.c     ****   ******************************************************************************
  48:Src/adc.c     ****   */
  49:Src/adc.c     **** 
  50:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  51:Src/adc.c     **** #include "adc.h"
  52:Src/adc.c     **** 
  53:Src/adc.c     **** #include "gpio.h"
  54:Src/adc.c     **** #include "dma.h"
  55:Src/adc.c     **** 
  56:Src/adc.c     **** /* USER CODE BEGIN 0 */
  57:Src/adc.c     **** 
  58:Src/adc.c     **** /* USER CODE END 0 */
  59:Src/adc.c     **** 
  60:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  61:Src/adc.c     **** ADC_HandleTypeDef hadc2;
  62:Src/adc.c     **** ADC_HandleTypeDef hadc3;
  63:Src/adc.c     **** DMA_HandleTypeDef hdma_adc1;
  64:Src/adc.c     **** 
  65:Src/adc.c     **** /* ADC1 init function */
  66:Src/adc.c     **** void MX_ADC1_Init(void)
  67:Src/adc.c     **** {
  28              		.loc 1 67 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  68:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
  69:Src/adc.c     **** 
  70:Src/adc.c     ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
  71:Src/adc.c     ****     */
  72:Src/adc.c     ****   hadc1.Instance = ADC1;
  39              		.loc 1 72 0
  40 0004 1648     		ldr	r0, .L7
  41 0006 174B     		ldr	r3, .L7+4
  42 0008 0360     		str	r3, [r0]
  73:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 3


  43              		.loc 1 73 0
  44 000a 4FF48033 		mov	r3, #65536
  45 000e 4360     		str	r3, [r0, #4]
  74:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  46              		.loc 1 74 0
  47 0010 0023     		movs	r3, #0
  48 0012 8360     		str	r3, [r0, #8]
  75:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
  49              		.loc 1 75 0
  50 0014 0361     		str	r3, [r0, #16]
  76:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  51              		.loc 1 76 0
  52 0016 8361     		str	r3, [r0, #24]
  77:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  53              		.loc 1 77 0
  54 0018 0362     		str	r3, [r0, #32]
  78:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  55              		.loc 1 78 0
  56 001a C362     		str	r3, [r0, #44]
  79:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  57              		.loc 1 79 0
  58 001c 124A     		ldr	r2, .L7+8
  59 001e 8262     		str	r2, [r0, #40]
  80:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  60              		.loc 1 80 0
  61 0020 C360     		str	r3, [r0, #12]
  81:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
  62              		.loc 1 81 0
  63 0022 0122     		movs	r2, #1
  64 0024 C261     		str	r2, [r0, #28]
  82:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = DISABLE;
  65              		.loc 1 82 0
  66 0026 0363     		str	r3, [r0, #48]
  83:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  67              		.loc 1 83 0
  68 0028 4261     		str	r2, [r0, #20]
  84:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  69              		.loc 1 84 0
  70 002a FFF7FEFF 		bl	HAL_ADC_Init
  71              	.LVL0:
  72 002e 68B9     		cbnz	r0, .L5
  73              	.L2:
  85:Src/adc.c     ****   {
  86:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  87:Src/adc.c     ****   }
  88:Src/adc.c     **** 
  89:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
  90:Src/adc.c     ****     */
  91:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_10;
  74              		.loc 1 91 0
  75 0030 0A23     		movs	r3, #10
  76 0032 0093     		str	r3, [sp]
  92:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
  77              		.loc 1 92 0
  78 0034 0123     		movs	r3, #1
  79 0036 0193     		str	r3, [sp, #4]
  93:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 4


  80              		.loc 1 93 0
  81 0038 0023     		movs	r3, #0
  82 003a 0293     		str	r3, [sp, #8]
  94:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  83              		.loc 1 94 0
  84 003c 6946     		mov	r1, sp
  85 003e 0848     		ldr	r0, .L7
  86 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  87              	.LVL1:
  88 0044 38B9     		cbnz	r0, .L6
  89              	.L1:
  95:Src/adc.c     ****   {
  96:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  97:Src/adc.c     ****   }
  98:Src/adc.c     **** 
  99:Src/adc.c     **** }
  90              		.loc 1 99 0
  91 0046 05B0     		add	sp, sp, #20
  92              	.LCFI2:
  93              		.cfi_remember_state
  94              		.cfi_def_cfa_offset 4
  95              		@ sp needed
  96 0048 5DF804FB 		ldr	pc, [sp], #4
  97              	.L5:
  98              	.LCFI3:
  99              		.cfi_restore_state
  86:Src/adc.c     ****   }
 100              		.loc 1 86 0
 101 004c 5621     		movs	r1, #86
 102 004e 0748     		ldr	r0, .L7+12
 103 0050 FFF7FEFF 		bl	_Error_Handler
 104              	.LVL2:
 105 0054 ECE7     		b	.L2
 106              	.L6:
  96:Src/adc.c     ****   }
 107              		.loc 1 96 0
 108 0056 6021     		movs	r1, #96
 109 0058 0448     		ldr	r0, .L7+12
 110 005a FFF7FEFF 		bl	_Error_Handler
 111              	.LVL3:
 112              		.loc 1 99 0
 113 005e F2E7     		b	.L1
 114              	.L8:
 115              		.align	2
 116              	.L7:
 117 0060 00000000 		.word	hadc1
 118 0064 00200140 		.word	1073815552
 119 0068 0100000F 		.word	251658241
 120 006c 00000000 		.word	.LC0
 121              		.cfi_endproc
 122              	.LFE138:
 124              		.section	.text.MX_ADC2_Init,"ax",%progbits
 125              		.align	1
 126              		.global	MX_ADC2_Init
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 5


 130              		.fpu fpv5-sp-d16
 132              	MX_ADC2_Init:
 133              	.LFB139:
 100:Src/adc.c     **** /* ADC2 init function */
 101:Src/adc.c     **** void MX_ADC2_Init(void)
 102:Src/adc.c     **** {
 134              		.loc 1 102 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 16
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138 0000 00B5     		push	{lr}
 139              	.LCFI4:
 140              		.cfi_def_cfa_offset 4
 141              		.cfi_offset 14, -4
 142 0002 85B0     		sub	sp, sp, #20
 143              	.LCFI5:
 144              		.cfi_def_cfa_offset 24
 103:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 104:Src/adc.c     **** 
 105:Src/adc.c     ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 106:Src/adc.c     ****     */
 107:Src/adc.c     ****   hadc2.Instance = ADC2;
 145              		.loc 1 107 0
 146 0004 1648     		ldr	r0, .L15
 147 0006 174B     		ldr	r3, .L15+4
 148 0008 0360     		str	r3, [r0]
 108:Src/adc.c     ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 149              		.loc 1 108 0
 150 000a 4FF48033 		mov	r3, #65536
 151 000e 4360     		str	r3, [r0, #4]
 109:Src/adc.c     ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 152              		.loc 1 109 0
 153 0010 0023     		movs	r3, #0
 154 0012 8360     		str	r3, [r0, #8]
 110:Src/adc.c     ****   hadc2.Init.ScanConvMode = ADC_SCAN_DISABLE;
 155              		.loc 1 110 0
 156 0014 0361     		str	r3, [r0, #16]
 111:Src/adc.c     ****   hadc2.Init.ContinuousConvMode = DISABLE;
 157              		.loc 1 111 0
 158 0016 8361     		str	r3, [r0, #24]
 112:Src/adc.c     ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 159              		.loc 1 112 0
 160 0018 0362     		str	r3, [r0, #32]
 113:Src/adc.c     ****   hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 161              		.loc 1 113 0
 162 001a C362     		str	r3, [r0, #44]
 114:Src/adc.c     ****   hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 163              		.loc 1 114 0
 164 001c 124A     		ldr	r2, .L15+8
 165 001e 8262     		str	r2, [r0, #40]
 115:Src/adc.c     ****   hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 166              		.loc 1 115 0
 167 0020 C360     		str	r3, [r0, #12]
 116:Src/adc.c     ****   hadc2.Init.NbrOfConversion = 1;
 168              		.loc 1 116 0
 169 0022 0122     		movs	r2, #1
 170 0024 C261     		str	r2, [r0, #28]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 6


 117:Src/adc.c     ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 171              		.loc 1 117 0
 172 0026 0363     		str	r3, [r0, #48]
 118:Src/adc.c     ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 173              		.loc 1 118 0
 174 0028 4261     		str	r2, [r0, #20]
 119:Src/adc.c     ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 175              		.loc 1 119 0
 176 002a FFF7FEFF 		bl	HAL_ADC_Init
 177              	.LVL4:
 178 002e 68B9     		cbnz	r0, .L13
 179              	.L10:
 120:Src/adc.c     ****   {
 121:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 122:Src/adc.c     ****   }
 123:Src/adc.c     **** 
 124:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 125:Src/adc.c     ****     */
 126:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_15;
 180              		.loc 1 126 0
 181 0030 0F23     		movs	r3, #15
 182 0032 0093     		str	r3, [sp]
 127:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 183              		.loc 1 127 0
 184 0034 0123     		movs	r3, #1
 185 0036 0193     		str	r3, [sp, #4]
 128:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 186              		.loc 1 128 0
 187 0038 0023     		movs	r3, #0
 188 003a 0293     		str	r3, [sp, #8]
 129:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 189              		.loc 1 129 0
 190 003c 6946     		mov	r1, sp
 191 003e 0848     		ldr	r0, .L15
 192 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 193              	.LVL5:
 194 0044 38B9     		cbnz	r0, .L14
 195              	.L9:
 130:Src/adc.c     ****   {
 131:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 132:Src/adc.c     ****   }
 133:Src/adc.c     **** 
 134:Src/adc.c     **** }
 196              		.loc 1 134 0
 197 0046 05B0     		add	sp, sp, #20
 198              	.LCFI6:
 199              		.cfi_remember_state
 200              		.cfi_def_cfa_offset 4
 201              		@ sp needed
 202 0048 5DF804FB 		ldr	pc, [sp], #4
 203              	.L13:
 204              	.LCFI7:
 205              		.cfi_restore_state
 121:Src/adc.c     ****   }
 206              		.loc 1 121 0
 207 004c 7921     		movs	r1, #121
 208 004e 0748     		ldr	r0, .L15+12
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 7


 209 0050 FFF7FEFF 		bl	_Error_Handler
 210              	.LVL6:
 211 0054 ECE7     		b	.L10
 212              	.L14:
 131:Src/adc.c     ****   }
 213              		.loc 1 131 0
 214 0056 8321     		movs	r1, #131
 215 0058 0448     		ldr	r0, .L15+12
 216 005a FFF7FEFF 		bl	_Error_Handler
 217              	.LVL7:
 218              		.loc 1 134 0
 219 005e F2E7     		b	.L9
 220              	.L16:
 221              		.align	2
 222              	.L15:
 223 0060 00000000 		.word	hadc2
 224 0064 00210140 		.word	1073815808
 225 0068 0100000F 		.word	251658241
 226 006c 00000000 		.word	.LC0
 227              		.cfi_endproc
 228              	.LFE139:
 230              		.section	.text.MX_ADC3_Init,"ax",%progbits
 231              		.align	1
 232              		.global	MX_ADC3_Init
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu fpv5-sp-d16
 238              	MX_ADC3_Init:
 239              	.LFB140:
 135:Src/adc.c     **** /* ADC3 init function */
 136:Src/adc.c     **** void MX_ADC3_Init(void)
 137:Src/adc.c     **** {
 240              		.loc 1 137 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 16
 243              		@ frame_needed = 0, uses_anonymous_args = 0
 244 0000 00B5     		push	{lr}
 245              	.LCFI8:
 246              		.cfi_def_cfa_offset 4
 247              		.cfi_offset 14, -4
 248 0002 85B0     		sub	sp, sp, #20
 249              	.LCFI9:
 250              		.cfi_def_cfa_offset 24
 138:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
 139:Src/adc.c     **** 
 140:Src/adc.c     ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
 141:Src/adc.c     ****     */
 142:Src/adc.c     ****   hadc3.Instance = ADC3;
 251              		.loc 1 142 0
 252 0004 1648     		ldr	r0, .L23
 253 0006 174B     		ldr	r3, .L23+4
 254 0008 0360     		str	r3, [r0]
 143:Src/adc.c     ****   hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 255              		.loc 1 143 0
 256 000a 4FF48033 		mov	r3, #65536
 257 000e 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 8


 144:Src/adc.c     ****   hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 258              		.loc 1 144 0
 259 0010 0023     		movs	r3, #0
 260 0012 8360     		str	r3, [r0, #8]
 145:Src/adc.c     ****   hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 261              		.loc 1 145 0
 262 0014 0361     		str	r3, [r0, #16]
 146:Src/adc.c     ****   hadc3.Init.ContinuousConvMode = DISABLE;
 263              		.loc 1 146 0
 264 0016 8361     		str	r3, [r0, #24]
 147:Src/adc.c     ****   hadc3.Init.DiscontinuousConvMode = DISABLE;
 265              		.loc 1 147 0
 266 0018 0362     		str	r3, [r0, #32]
 148:Src/adc.c     ****   hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 267              		.loc 1 148 0
 268 001a C362     		str	r3, [r0, #44]
 149:Src/adc.c     ****   hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 269              		.loc 1 149 0
 270 001c 124A     		ldr	r2, .L23+8
 271 001e 8262     		str	r2, [r0, #40]
 150:Src/adc.c     ****   hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 272              		.loc 1 150 0
 273 0020 C360     		str	r3, [r0, #12]
 151:Src/adc.c     ****   hadc3.Init.NbrOfConversion = 1;
 274              		.loc 1 151 0
 275 0022 0122     		movs	r2, #1
 276 0024 C261     		str	r2, [r0, #28]
 152:Src/adc.c     ****   hadc3.Init.DMAContinuousRequests = DISABLE;
 277              		.loc 1 152 0
 278 0026 0363     		str	r3, [r0, #48]
 153:Src/adc.c     ****   hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 279              		.loc 1 153 0
 280 0028 4261     		str	r2, [r0, #20]
 154:Src/adc.c     ****   if (HAL_ADC_Init(&hadc3) != HAL_OK)
 281              		.loc 1 154 0
 282 002a FFF7FEFF 		bl	HAL_ADC_Init
 283              	.LVL8:
 284 002e 68B9     		cbnz	r0, .L21
 285              	.L18:
 155:Src/adc.c     ****   {
 156:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 157:Src/adc.c     ****   }
 158:Src/adc.c     **** 
 159:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
 160:Src/adc.c     ****     */
 161:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_10;
 286              		.loc 1 161 0
 287 0030 0A23     		movs	r3, #10
 288 0032 0093     		str	r3, [sp]
 162:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 289              		.loc 1 162 0
 290 0034 0123     		movs	r3, #1
 291 0036 0193     		str	r3, [sp, #4]
 163:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 292              		.loc 1 163 0
 293 0038 0023     		movs	r3, #0
 294 003a 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 9


 164:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 295              		.loc 1 164 0
 296 003c 6946     		mov	r1, sp
 297 003e 0848     		ldr	r0, .L23
 298 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 299              	.LVL9:
 300 0044 38B9     		cbnz	r0, .L22
 301              	.L17:
 165:Src/adc.c     ****   {
 166:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
 167:Src/adc.c     ****   }
 168:Src/adc.c     **** 
 169:Src/adc.c     **** }
 302              		.loc 1 169 0
 303 0046 05B0     		add	sp, sp, #20
 304              	.LCFI10:
 305              		.cfi_remember_state
 306              		.cfi_def_cfa_offset 4
 307              		@ sp needed
 308 0048 5DF804FB 		ldr	pc, [sp], #4
 309              	.L21:
 310              	.LCFI11:
 311              		.cfi_restore_state
 156:Src/adc.c     ****   }
 312              		.loc 1 156 0
 313 004c 9C21     		movs	r1, #156
 314 004e 0748     		ldr	r0, .L23+12
 315 0050 FFF7FEFF 		bl	_Error_Handler
 316              	.LVL10:
 317 0054 ECE7     		b	.L18
 318              	.L22:
 166:Src/adc.c     ****   }
 319              		.loc 1 166 0
 320 0056 A621     		movs	r1, #166
 321 0058 0448     		ldr	r0, .L23+12
 322 005a FFF7FEFF 		bl	_Error_Handler
 323              	.LVL11:
 324              		.loc 1 169 0
 325 005e F2E7     		b	.L17
 326              	.L24:
 327              		.align	2
 328              	.L23:
 329 0060 00000000 		.word	hadc3
 330 0064 00220140 		.word	1073816064
 331 0068 0100000F 		.word	251658241
 332 006c 00000000 		.word	.LC0
 333              		.cfi_endproc
 334              	.LFE140:
 336              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 337              		.align	1
 338              		.global	HAL_ADC_MspInit
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu fpv5-sp-d16
 344              	HAL_ADC_MspInit:
 345              	.LFB141:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 10


 170:Src/adc.c     **** 
 171:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 172:Src/adc.c     **** {
 346              		.loc 1 172 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 32
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              	.LVL12:
 351 0000 70B5     		push	{r4, r5, r6, lr}
 352              	.LCFI12:
 353              		.cfi_def_cfa_offset 16
 354              		.cfi_offset 4, -16
 355              		.cfi_offset 5, -12
 356              		.cfi_offset 6, -8
 357              		.cfi_offset 14, -4
 358 0002 88B0     		sub	sp, sp, #32
 359              	.LCFI13:
 360              		.cfi_def_cfa_offset 48
 173:Src/adc.c     **** 
 174:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 175:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 361              		.loc 1 175 0
 362 0004 0368     		ldr	r3, [r0]
 363 0006 404A     		ldr	r2, .L35
 364 0008 9342     		cmp	r3, r2
 365 000a 07D0     		beq	.L31
 176:Src/adc.c     ****   {
 177:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 178:Src/adc.c     **** 
 179:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 180:Src/adc.c     ****     /* ADC1 clock enable */
 181:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_ENABLE();
 182:Src/adc.c     ****   
 183:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 184:Src/adc.c     ****     PC0     ------> ADC1_IN10
 185:Src/adc.c     ****     PC4     ------> ADC1_IN14
 186:Src/adc.c     ****     PB0     ------> ADC1_IN8
 187:Src/adc.c     ****     PB1     ------> ADC1_IN9 
 188:Src/adc.c     ****     */
 189:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_4;
 190:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 191:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 192:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 193:Src/adc.c     **** 
 194:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 195:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 196:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 197:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 198:Src/adc.c     **** 
 199:Src/adc.c     ****     /* ADC1 DMA Init */
 200:Src/adc.c     ****     /* ADC1 Init */
 201:Src/adc.c     ****     hdma_adc1.Instance = DMA2_Stream0;
 202:Src/adc.c     ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 203:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 204:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 205:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 206:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 11


 207:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 208:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_NORMAL;
 209:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 210:Src/adc.c     ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 211:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 212:Src/adc.c     ****     {
 213:Src/adc.c     ****       _Error_Handler(__FILE__, __LINE__);
 214:Src/adc.c     ****     }
 215:Src/adc.c     **** 
 216:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 217:Src/adc.c     **** 
 218:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 219:Src/adc.c     **** 
 220:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 221:Src/adc.c     ****   }
 222:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 366              		.loc 1 222 0
 367 000c 3F4A     		ldr	r2, .L35+4
 368 000e 9342     		cmp	r3, r2
 369 0010 40D0     		beq	.L32
 223:Src/adc.c     ****   {
 224:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 0 */
 225:Src/adc.c     **** 
 226:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 0 */
 227:Src/adc.c     ****     /* ADC2 clock enable */
 228:Src/adc.c     ****     __HAL_RCC_ADC2_CLK_ENABLE();
 229:Src/adc.c     ****   
 230:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 231:Src/adc.c     ****     PA3     ------> ADC2_IN3
 232:Src/adc.c     ****     PC5     ------> ADC2_IN15 
 233:Src/adc.c     ****     */
 234:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_3;
 235:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 236:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 237:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 238:Src/adc.c     **** 
 239:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_5;
 240:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 241:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 242:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 243:Src/adc.c     **** 
 244:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 245:Src/adc.c     **** 
 246:Src/adc.c     ****   /* USER CODE END ADC2_MspInit 1 */
 247:Src/adc.c     ****   }
 248:Src/adc.c     ****   else if(adcHandle->Instance==ADC3)
 370              		.loc 1 248 0
 371 0012 3F4A     		ldr	r2, .L35+8
 372 0014 9342     		cmp	r3, r2
 373 0016 5AD0     		beq	.L33
 374              	.LVL13:
 375              	.L25:
 249:Src/adc.c     ****   {
 250:Src/adc.c     ****   /* USER CODE BEGIN ADC3_MspInit 0 */
 251:Src/adc.c     **** 
 252:Src/adc.c     ****   /* USER CODE END ADC3_MspInit 0 */
 253:Src/adc.c     ****     /* ADC3 clock enable */
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 12


 254:Src/adc.c     ****     __HAL_RCC_ADC3_CLK_ENABLE();
 255:Src/adc.c     ****   
 256:Src/adc.c     ****     /**ADC3 GPIO Configuration    
 257:Src/adc.c     ****     PC0     ------> ADC3_IN10
 258:Src/adc.c     ****     PA2     ------> ADC3_IN2 
 259:Src/adc.c     ****     */
 260:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 261:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 262:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 263:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 264:Src/adc.c     **** 
 265:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_2;
 266:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 267:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 268:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 269:Src/adc.c     **** 
 270:Src/adc.c     ****   /* USER CODE BEGIN ADC3_MspInit 1 */
 271:Src/adc.c     **** 
 272:Src/adc.c     ****   /* USER CODE END ADC3_MspInit 1 */
 273:Src/adc.c     ****   }
 274:Src/adc.c     **** }
 376              		.loc 1 274 0
 377 0018 08B0     		add	sp, sp, #32
 378              	.LCFI14:
 379              		.cfi_remember_state
 380              		.cfi_def_cfa_offset 16
 381              		@ sp needed
 382 001a 70BD     		pop	{r4, r5, r6, pc}
 383              	.LVL14:
 384              	.L31:
 385              	.LCFI15:
 386              		.cfi_restore_state
 387 001c 0446     		mov	r4, r0
 388              	.LBB2:
 181:Src/adc.c     ****   
 389              		.loc 1 181 0
 390 001e 3D4B     		ldr	r3, .L35+12
 391 0020 5A6C     		ldr	r2, [r3, #68]
 392 0022 42F48072 		orr	r2, r2, #256
 393 0026 5A64     		str	r2, [r3, #68]
 394 0028 5B6C     		ldr	r3, [r3, #68]
 395 002a 03F48073 		and	r3, r3, #256
 396 002e 0093     		str	r3, [sp]
 397 0030 009B     		ldr	r3, [sp]
 398              	.LBE2:
 189:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 399              		.loc 1 189 0
 400 0032 1123     		movs	r3, #17
 401 0034 0393     		str	r3, [sp, #12]
 190:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 402              		.loc 1 190 0
 403 0036 0326     		movs	r6, #3
 404 0038 0496     		str	r6, [sp, #16]
 191:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 405              		.loc 1 191 0
 406 003a 0025     		movs	r5, #0
 407 003c 0595     		str	r5, [sp, #20]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 13


 192:Src/adc.c     **** 
 408              		.loc 1 192 0
 409 003e 03A9     		add	r1, sp, #12
 410 0040 3548     		ldr	r0, .L35+16
 411              	.LVL15:
 412 0042 FFF7FEFF 		bl	HAL_GPIO_Init
 413              	.LVL16:
 194:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 414              		.loc 1 194 0
 415 0046 0396     		str	r6, [sp, #12]
 195:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 416              		.loc 1 195 0
 417 0048 0496     		str	r6, [sp, #16]
 196:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 418              		.loc 1 196 0
 419 004a 0595     		str	r5, [sp, #20]
 197:Src/adc.c     **** 
 420              		.loc 1 197 0
 421 004c 03A9     		add	r1, sp, #12
 422 004e 3348     		ldr	r0, .L35+20
 423 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 424              	.LVL17:
 201:Src/adc.c     ****     hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 425              		.loc 1 201 0
 426 0054 3248     		ldr	r0, .L35+24
 427 0056 334B     		ldr	r3, .L35+28
 428 0058 0360     		str	r3, [r0]
 202:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 429              		.loc 1 202 0
 430 005a 4560     		str	r5, [r0, #4]
 203:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 431              		.loc 1 203 0
 432 005c 8560     		str	r5, [r0, #8]
 204:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 433              		.loc 1 204 0
 434 005e C560     		str	r5, [r0, #12]
 205:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 435              		.loc 1 205 0
 436 0060 4FF48063 		mov	r3, #1024
 437 0064 0361     		str	r3, [r0, #16]
 206:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 438              		.loc 1 206 0
 439 0066 4FF48053 		mov	r3, #4096
 440 006a 4361     		str	r3, [r0, #20]
 207:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_NORMAL;
 441              		.loc 1 207 0
 442 006c 4FF48043 		mov	r3, #16384
 443 0070 8361     		str	r3, [r0, #24]
 208:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 444              		.loc 1 208 0
 445 0072 C561     		str	r5, [r0, #28]
 209:Src/adc.c     ****     hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 446              		.loc 1 209 0
 447 0074 4FF44033 		mov	r3, #196608
 448 0078 0362     		str	r3, [r0, #32]
 210:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 449              		.loc 1 210 0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 14


 450 007a 4562     		str	r5, [r0, #36]
 211:Src/adc.c     ****     {
 451              		.loc 1 211 0
 452 007c FFF7FEFF 		bl	HAL_DMA_Init
 453              	.LVL18:
 454 0080 18B9     		cbnz	r0, .L34
 455              	.L27:
 216:Src/adc.c     **** 
 456              		.loc 1 216 0
 457 0082 274B     		ldr	r3, .L35+24
 458 0084 A363     		str	r3, [r4, #56]
 459 0086 9C63     		str	r4, [r3, #56]
 460 0088 C6E7     		b	.L25
 461              	.L34:
 213:Src/adc.c     ****     }
 462              		.loc 1 213 0
 463 008a D521     		movs	r1, #213
 464 008c 2648     		ldr	r0, .L35+32
 465 008e FFF7FEFF 		bl	_Error_Handler
 466              	.LVL19:
 467 0092 F6E7     		b	.L27
 468              	.LVL20:
 469              	.L32:
 470              	.LBB3:
 228:Src/adc.c     ****   
 471              		.loc 1 228 0
 472 0094 1F4B     		ldr	r3, .L35+12
 473 0096 5A6C     		ldr	r2, [r3, #68]
 474 0098 42F40072 		orr	r2, r2, #512
 475 009c 5A64     		str	r2, [r3, #68]
 476 009e 5B6C     		ldr	r3, [r3, #68]
 477 00a0 03F40073 		and	r3, r3, #512
 478 00a4 0193     		str	r3, [sp, #4]
 479 00a6 019B     		ldr	r3, [sp, #4]
 480              	.LBE3:
 234:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 481              		.loc 1 234 0
 482 00a8 0823     		movs	r3, #8
 483 00aa 0393     		str	r3, [sp, #12]
 235:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 484              		.loc 1 235 0
 485 00ac 0325     		movs	r5, #3
 486 00ae 0495     		str	r5, [sp, #16]
 236:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 487              		.loc 1 236 0
 488 00b0 0024     		movs	r4, #0
 489 00b2 0594     		str	r4, [sp, #20]
 237:Src/adc.c     **** 
 490              		.loc 1 237 0
 491 00b4 03A9     		add	r1, sp, #12
 492 00b6 1D48     		ldr	r0, .L35+36
 493              	.LVL21:
 494 00b8 FFF7FEFF 		bl	HAL_GPIO_Init
 495              	.LVL22:
 239:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 496              		.loc 1 239 0
 497 00bc 2023     		movs	r3, #32
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 15


 498 00be 0393     		str	r3, [sp, #12]
 240:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 499              		.loc 1 240 0
 500 00c0 0495     		str	r5, [sp, #16]
 241:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 501              		.loc 1 241 0
 502 00c2 0594     		str	r4, [sp, #20]
 242:Src/adc.c     **** 
 503              		.loc 1 242 0
 504 00c4 03A9     		add	r1, sp, #12
 505 00c6 1448     		ldr	r0, .L35+16
 506 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 507              	.LVL23:
 508 00cc A4E7     		b	.L25
 509              	.LVL24:
 510              	.L33:
 511              	.LBB4:
 254:Src/adc.c     ****   
 512              		.loc 1 254 0
 513 00ce 114B     		ldr	r3, .L35+12
 514 00d0 5A6C     		ldr	r2, [r3, #68]
 515 00d2 42F48062 		orr	r2, r2, #1024
 516 00d6 5A64     		str	r2, [r3, #68]
 517 00d8 5B6C     		ldr	r3, [r3, #68]
 518 00da 03F48063 		and	r3, r3, #1024
 519 00de 0293     		str	r3, [sp, #8]
 520 00e0 029B     		ldr	r3, [sp, #8]
 521              	.LBE4:
 260:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 522              		.loc 1 260 0
 523 00e2 0123     		movs	r3, #1
 524 00e4 0393     		str	r3, [sp, #12]
 261:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 525              		.loc 1 261 0
 526 00e6 0325     		movs	r5, #3
 527 00e8 0495     		str	r5, [sp, #16]
 262:Src/adc.c     ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 528              		.loc 1 262 0
 529 00ea 0024     		movs	r4, #0
 530 00ec 0594     		str	r4, [sp, #20]
 263:Src/adc.c     **** 
 531              		.loc 1 263 0
 532 00ee 03A9     		add	r1, sp, #12
 533 00f0 0948     		ldr	r0, .L35+16
 534              	.LVL25:
 535 00f2 FFF7FEFF 		bl	HAL_GPIO_Init
 536              	.LVL26:
 265:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 537              		.loc 1 265 0
 538 00f6 0423     		movs	r3, #4
 539 00f8 0393     		str	r3, [sp, #12]
 266:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 540              		.loc 1 266 0
 541 00fa 0495     		str	r5, [sp, #16]
 267:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 542              		.loc 1 267 0
 543 00fc 0594     		str	r4, [sp, #20]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 16


 268:Src/adc.c     **** 
 544              		.loc 1 268 0
 545 00fe 03A9     		add	r1, sp, #12
 546 0100 0A48     		ldr	r0, .L35+36
 547 0102 FFF7FEFF 		bl	HAL_GPIO_Init
 548              	.LVL27:
 549              		.loc 1 274 0
 550 0106 87E7     		b	.L25
 551              	.L36:
 552              		.align	2
 553              	.L35:
 554 0108 00200140 		.word	1073815552
 555 010c 00210140 		.word	1073815808
 556 0110 00220140 		.word	1073816064
 557 0114 00380240 		.word	1073887232
 558 0118 00080240 		.word	1073874944
 559 011c 00040240 		.word	1073873920
 560 0120 00000000 		.word	hdma_adc1
 561 0124 10640240 		.word	1073898512
 562 0128 00000000 		.word	.LC0
 563 012c 00000240 		.word	1073872896
 564              		.cfi_endproc
 565              	.LFE141:
 567              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 568              		.align	1
 569              		.global	HAL_ADC_MspDeInit
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu fpv5-sp-d16
 575              	HAL_ADC_MspDeInit:
 576              	.LFB142:
 275:Src/adc.c     **** 
 276:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 277:Src/adc.c     **** {
 577              		.loc 1 277 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              	.LVL28:
 582 0000 10B5     		push	{r4, lr}
 583              	.LCFI16:
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 4, -8
 586              		.cfi_offset 14, -4
 278:Src/adc.c     **** 
 279:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 587              		.loc 1 279 0
 588 0002 0368     		ldr	r3, [r0]
 589 0004 1C4A     		ldr	r2, .L45
 590 0006 9342     		cmp	r3, r2
 591 0008 06D0     		beq	.L42
 280:Src/adc.c     ****   {
 281:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 282:Src/adc.c     **** 
 283:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 284:Src/adc.c     ****     /* Peripheral clock disable */
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 17


 285:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_DISABLE();
 286:Src/adc.c     ****   
 287:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 288:Src/adc.c     ****     PC0     ------> ADC1_IN10
 289:Src/adc.c     ****     PC4     ------> ADC1_IN14
 290:Src/adc.c     ****     PB0     ------> ADC1_IN8
 291:Src/adc.c     ****     PB1     ------> ADC1_IN9 
 292:Src/adc.c     ****     */
 293:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0|GPIO_PIN_4);
 294:Src/adc.c     **** 
 295:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_0|GPIO_PIN_1);
 296:Src/adc.c     **** 
 297:Src/adc.c     ****     /* ADC1 DMA DeInit */
 298:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 299:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 300:Src/adc.c     **** 
 301:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 302:Src/adc.c     ****   }
 303:Src/adc.c     ****   else if(adcHandle->Instance==ADC2)
 592              		.loc 1 303 0
 593 000a 1C4A     		ldr	r2, .L45+4
 594 000c 9342     		cmp	r3, r2
 595 000e 16D0     		beq	.L43
 304:Src/adc.c     ****   {
 305:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 306:Src/adc.c     **** 
 307:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 0 */
 308:Src/adc.c     ****     /* Peripheral clock disable */
 309:Src/adc.c     ****     __HAL_RCC_ADC2_CLK_DISABLE();
 310:Src/adc.c     ****   
 311:Src/adc.c     ****     /**ADC2 GPIO Configuration    
 312:Src/adc.c     ****     PA3     ------> ADC2_IN3
 313:Src/adc.c     ****     PC5     ------> ADC2_IN15 
 314:Src/adc.c     ****     */
 315:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_3);
 316:Src/adc.c     **** 
 317:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_5);
 318:Src/adc.c     **** 
 319:Src/adc.c     ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 320:Src/adc.c     **** 
 321:Src/adc.c     ****   /* USER CODE END ADC2_MspDeInit 1 */
 322:Src/adc.c     ****   }
 323:Src/adc.c     ****   else if(adcHandle->Instance==ADC3)
 596              		.loc 1 323 0
 597 0010 1B4A     		ldr	r2, .L45+8
 598 0012 9342     		cmp	r3, r2
 599 0014 21D0     		beq	.L44
 600              	.LVL29:
 601              	.L37:
 324:Src/adc.c     ****   {
 325:Src/adc.c     ****   /* USER CODE BEGIN ADC3_MspDeInit 0 */
 326:Src/adc.c     **** 
 327:Src/adc.c     ****   /* USER CODE END ADC3_MspDeInit 0 */
 328:Src/adc.c     ****     /* Peripheral clock disable */
 329:Src/adc.c     ****     __HAL_RCC_ADC3_CLK_DISABLE();
 330:Src/adc.c     ****   
 331:Src/adc.c     ****     /**ADC3 GPIO Configuration    
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 18


 332:Src/adc.c     ****     PC0     ------> ADC3_IN10
 333:Src/adc.c     ****     PA2     ------> ADC3_IN2 
 334:Src/adc.c     ****     */
 335:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_0);
 336:Src/adc.c     **** 
 337:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2);
 338:Src/adc.c     **** 
 339:Src/adc.c     ****   /* USER CODE BEGIN ADC3_MspDeInit 1 */
 340:Src/adc.c     **** 
 341:Src/adc.c     ****   /* USER CODE END ADC3_MspDeInit 1 */
 342:Src/adc.c     ****   }
 343:Src/adc.c     **** } 
 602              		.loc 1 343 0
 603 0016 10BD     		pop	{r4, pc}
 604              	.LVL30:
 605              	.L42:
 606 0018 0446     		mov	r4, r0
 285:Src/adc.c     ****   
 607              		.loc 1 285 0
 608 001a 02F58C32 		add	r2, r2, #71680
 609 001e 536C     		ldr	r3, [r2, #68]
 610 0020 23F48073 		bic	r3, r3, #256
 611 0024 5364     		str	r3, [r2, #68]
 293:Src/adc.c     **** 
 612              		.loc 1 293 0
 613 0026 1121     		movs	r1, #17
 614 0028 1648     		ldr	r0, .L45+12
 615              	.LVL31:
 616 002a FFF7FEFF 		bl	HAL_GPIO_DeInit
 617              	.LVL32:
 295:Src/adc.c     **** 
 618              		.loc 1 295 0
 619 002e 0321     		movs	r1, #3
 620 0030 1548     		ldr	r0, .L45+16
 621 0032 FFF7FEFF 		bl	HAL_GPIO_DeInit
 622              	.LVL33:
 298:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 623              		.loc 1 298 0
 624 0036 A06B     		ldr	r0, [r4, #56]
 625 0038 FFF7FEFF 		bl	HAL_DMA_DeInit
 626              	.LVL34:
 627 003c EBE7     		b	.L37
 628              	.LVL35:
 629              	.L43:
 309:Src/adc.c     ****   
 630              		.loc 1 309 0
 631 003e 134A     		ldr	r2, .L45+20
 632 0040 536C     		ldr	r3, [r2, #68]
 633 0042 23F40073 		bic	r3, r3, #512
 634 0046 5364     		str	r3, [r2, #68]
 315:Src/adc.c     **** 
 635              		.loc 1 315 0
 636 0048 0821     		movs	r1, #8
 637 004a 1148     		ldr	r0, .L45+24
 638              	.LVL36:
 639 004c FFF7FEFF 		bl	HAL_GPIO_DeInit
 640              	.LVL37:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 19


 317:Src/adc.c     **** 
 641              		.loc 1 317 0
 642 0050 2021     		movs	r1, #32
 643 0052 0C48     		ldr	r0, .L45+12
 644 0054 FFF7FEFF 		bl	HAL_GPIO_DeInit
 645              	.LVL38:
 646 0058 DDE7     		b	.L37
 647              	.LVL39:
 648              	.L44:
 329:Src/adc.c     ****   
 649              		.loc 1 329 0
 650 005a 02F58B32 		add	r2, r2, #71168
 651 005e 536C     		ldr	r3, [r2, #68]
 652 0060 23F48063 		bic	r3, r3, #1024
 653 0064 5364     		str	r3, [r2, #68]
 335:Src/adc.c     **** 
 654              		.loc 1 335 0
 655 0066 0121     		movs	r1, #1
 656 0068 0648     		ldr	r0, .L45+12
 657              	.LVL40:
 658 006a FFF7FEFF 		bl	HAL_GPIO_DeInit
 659              	.LVL41:
 337:Src/adc.c     **** 
 660              		.loc 1 337 0
 661 006e 0421     		movs	r1, #4
 662 0070 0748     		ldr	r0, .L45+24
 663 0072 FFF7FEFF 		bl	HAL_GPIO_DeInit
 664              	.LVL42:
 665              		.loc 1 343 0
 666 0076 CEE7     		b	.L37
 667              	.L46:
 668              		.align	2
 669              	.L45:
 670 0078 00200140 		.word	1073815552
 671 007c 00210140 		.word	1073815808
 672 0080 00220140 		.word	1073816064
 673 0084 00080240 		.word	1073874944
 674 0088 00040240 		.word	1073873920
 675 008c 00380240 		.word	1073887232
 676 0090 00000240 		.word	1073872896
 677              		.cfi_endproc
 678              	.LFE142:
 680              		.comm	hdma_adc1,96,4
 681              		.comm	hadc3,72,4
 682              		.comm	hadc2,72,4
 683              		.comm	hadc1,72,4
 684              		.section	.rodata.MX_ADC1_Init.str1.4,"aMS",%progbits,1
 685              		.align	2
 686              	.LC0:
 687 0000 5372632F 		.ascii	"Src/adc.c\000"
 687      6164632E 
 687      6300
 688              		.text
 689              	.Letext0:
 690              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 691              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 692              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 20


 693              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 694              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 695              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 696              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 697              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 698              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 699              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 700              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 701              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 702              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 703              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_adc.h"
 704              		.file 16 "Inc/adc.h"
 705              		.file 17 "Inc/dma.h"
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccZmchy8.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:18     .text.MX_ADC1_Init:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:25     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:117    .text.MX_ADC1_Init:00000060 $d
                            *COM*:00000048 hadc1
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:125    .text.MX_ADC2_Init:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:132    .text.MX_ADC2_Init:00000000 MX_ADC2_Init
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:223    .text.MX_ADC2_Init:00000060 $d
                            *COM*:00000048 hadc2
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:231    .text.MX_ADC3_Init:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:238    .text.MX_ADC3_Init:00000000 MX_ADC3_Init
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:329    .text.MX_ADC3_Init:00000060 $d
                            *COM*:00000048 hadc3
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:337    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:344    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:554    .text.HAL_ADC_MspInit:00000108 $d
                            *COM*:00000060 hdma_adc1
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:568    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:575    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:670    .text.HAL_ADC_MspDeInit:00000078 $d
C:\Users\micha\AppData\Local\Temp\ccZmchy8.s:685    .rodata.MX_ADC1_Init.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
_Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
