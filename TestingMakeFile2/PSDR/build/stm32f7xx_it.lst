ARM GAS  C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	NMI_Handler:
  26              	.LFB143:
  27              		.file 1 "Src/stm32f7xx_it.c"
   1:Src/stm32f7xx_it.c **** /**
   2:Src/stm32f7xx_it.c ****   ******************************************************************************
   3:Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   4:Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f7xx_it.c ****   ******************************************************************************
   6:Src/stm32f7xx_it.c ****   *
   7:Src/stm32f7xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   8:Src/stm32f7xx_it.c ****   *
   9:Src/stm32f7xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f7xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f7xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f7xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f7xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f7xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f7xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f7xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f7xx_it.c ****   *
  20:Src/stm32f7xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f7xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f7xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f7xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f7xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f7xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f7xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f7xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f7xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f7xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f7xx_it.c ****   *
  31:Src/stm32f7xx_it.c ****   ******************************************************************************
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s 			page 2


  32:Src/stm32f7xx_it.c ****   */
  33:Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f7xx_it.c **** #include "stm32f7xx_hal.h"
  35:Src/stm32f7xx_it.c **** #include "stm32f7xx.h"
  36:Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  37:Src/stm32f7xx_it.c **** #include "cmsis_os.h"
  38:Src/stm32f7xx_it.c **** 
  39:Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  40:Src/stm32f7xx_it.c **** 
  41:Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  42:Src/stm32f7xx_it.c **** 
  43:Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  44:Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  45:Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_dac1;
  46:Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_spi1_tx;
  47:Src/stm32f7xx_it.c **** 
  48:Src/stm32f7xx_it.c **** extern TIM_HandleTypeDef htim2;
  49:Src/stm32f7xx_it.c **** 
  50:Src/stm32f7xx_it.c **** /******************************************************************************/
  51:Src/stm32f7xx_it.c **** /*            Cortex-M7 Processor Interruption and Exception Handlers         */ 
  52:Src/stm32f7xx_it.c **** /******************************************************************************/
  53:Src/stm32f7xx_it.c **** 
  54:Src/stm32f7xx_it.c **** /**
  55:Src/stm32f7xx_it.c **** * @brief This function handles Non maskable interrupt.
  56:Src/stm32f7xx_it.c **** */
  57:Src/stm32f7xx_it.c **** void NMI_Handler(void)
  58:Src/stm32f7xx_it.c **** {
  28              		.loc 1 58 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  59:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  60:Src/stm32f7xx_it.c **** 
  61:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  62:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  63:Src/stm32f7xx_it.c **** 
  64:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  65:Src/stm32f7xx_it.c **** }
  33              		.loc 1 65 0
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE143:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv5-sp-d16
  46              	HardFault_Handler:
  47              	.LFB144:
  66:Src/stm32f7xx_it.c **** 
  67:Src/stm32f7xx_it.c **** /**
  68:Src/stm32f7xx_it.c **** * @brief This function handles Hard fault interrupt.
  69:Src/stm32f7xx_it.c **** */
  70:Src/stm32f7xx_it.c **** void HardFault_Handler(void)
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s 			page 3


  71:Src/stm32f7xx_it.c **** {
  48              		.loc 1 71 0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
  55 0000 FEE7     		b	.L3
  56              		.cfi_endproc
  57              	.LFE144:
  59              		.section	.text.MemManage_Handler,"ax",%progbits
  60              		.align	1
  61              		.global	MemManage_Handler
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu fpv5-sp-d16
  67              	MemManage_Handler:
  68              	.LFB145:
  72:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  73:Src/stm32f7xx_it.c **** 
  74:Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  75:Src/stm32f7xx_it.c ****   while (1)
  76:Src/stm32f7xx_it.c ****   {
  77:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  78:Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  79:Src/stm32f7xx_it.c ****   }
  80:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  81:Src/stm32f7xx_it.c **** 
  82:Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  83:Src/stm32f7xx_it.c **** }
  84:Src/stm32f7xx_it.c **** 
  85:Src/stm32f7xx_it.c **** /**
  86:Src/stm32f7xx_it.c **** * @brief This function handles Memory management fault.
  87:Src/stm32f7xx_it.c **** */
  88:Src/stm32f7xx_it.c **** void MemManage_Handler(void)
  89:Src/stm32f7xx_it.c **** {
  69              		.loc 1 89 0
  70              		.cfi_startproc
  71              		@ Volatile: function does not return.
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75              	.L5:
  76 0000 FEE7     		b	.L5
  77              		.cfi_endproc
  78              	.LFE145:
  80              		.section	.text.BusFault_Handler,"ax",%progbits
  81              		.align	1
  82              		.global	BusFault_Handler
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  86              		.fpu fpv5-sp-d16
  88              	BusFault_Handler:
  89              	.LFB146:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s 			page 4


  90:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  91:Src/stm32f7xx_it.c **** 
  92:Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
  93:Src/stm32f7xx_it.c ****   while (1)
  94:Src/stm32f7xx_it.c ****   {
  95:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
  96:Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
  97:Src/stm32f7xx_it.c ****   }
  98:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 1 */
  99:Src/stm32f7xx_it.c **** 
 100:Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 1 */
 101:Src/stm32f7xx_it.c **** }
 102:Src/stm32f7xx_it.c **** 
 103:Src/stm32f7xx_it.c **** /**
 104:Src/stm32f7xx_it.c **** * @brief This function handles Pre-fetch fault, memory access fault.
 105:Src/stm32f7xx_it.c **** */
 106:Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 107:Src/stm32f7xx_it.c **** {
  90              		.loc 1 107 0
  91              		.cfi_startproc
  92              		@ Volatile: function does not return.
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96              	.L7:
  97 0000 FEE7     		b	.L7
  98              		.cfi_endproc
  99              	.LFE146:
 101              		.section	.text.UsageFault_Handler,"ax",%progbits
 102              		.align	1
 103              		.global	UsageFault_Handler
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv5-sp-d16
 109              	UsageFault_Handler:
 110              	.LFB147:
 108:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 109:Src/stm32f7xx_it.c **** 
 110:Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 111:Src/stm32f7xx_it.c ****   while (1)
 112:Src/stm32f7xx_it.c ****   {
 113:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 114:Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 115:Src/stm32f7xx_it.c ****   }
 116:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 1 */
 117:Src/stm32f7xx_it.c **** 
 118:Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 1 */
 119:Src/stm32f7xx_it.c **** }
 120:Src/stm32f7xx_it.c **** 
 121:Src/stm32f7xx_it.c **** /**
 122:Src/stm32f7xx_it.c **** * @brief This function handles Undefined instruction or illegal state.
 123:Src/stm32f7xx_it.c **** */
 124:Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 125:Src/stm32f7xx_it.c **** {
 111              		.loc 1 125 0
 112              		.cfi_startproc
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s 			page 5


 113              		@ Volatile: function does not return.
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.L9:
 118 0000 FEE7     		b	.L9
 119              		.cfi_endproc
 120              	.LFE147:
 122              		.section	.text.DebugMon_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	DebugMon_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv5-sp-d16
 130              	DebugMon_Handler:
 131              	.LFB148:
 126:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 127:Src/stm32f7xx_it.c **** 
 128:Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 129:Src/stm32f7xx_it.c ****   while (1)
 130:Src/stm32f7xx_it.c ****   {
 131:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 132:Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 133:Src/stm32f7xx_it.c ****   }
 134:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 1 */
 135:Src/stm32f7xx_it.c **** 
 136:Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 1 */
 137:Src/stm32f7xx_it.c **** }
 138:Src/stm32f7xx_it.c **** 
 139:Src/stm32f7xx_it.c **** /**
 140:Src/stm32f7xx_it.c **** * @brief This function handles Debug monitor.
 141:Src/stm32f7xx_it.c **** */
 142:Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 143:Src/stm32f7xx_it.c **** {
 132              		.loc 1 143 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 144:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 145:Src/stm32f7xx_it.c **** 
 146:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 147:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 148:Src/stm32f7xx_it.c **** 
 149:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 150:Src/stm32f7xx_it.c **** }
 137              		.loc 1 150 0
 138 0000 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE148:
 142              		.section	.text.SysTick_Handler,"ax",%progbits
 143              		.align	1
 144              		.global	SysTick_Handler
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s 			page 6


 148              		.fpu fpv5-sp-d16
 150              	SysTick_Handler:
 151              	.LFB149:
 151:Src/stm32f7xx_it.c **** 
 152:Src/stm32f7xx_it.c **** /**
 153:Src/stm32f7xx_it.c **** * @brief This function handles System tick timer.
 154:Src/stm32f7xx_it.c **** */
 155:Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 156:Src/stm32f7xx_it.c **** {
 152              		.loc 1 156 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156 0000 08B5     		push	{r3, lr}
 157              	.LCFI0:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 3, -8
 160              		.cfi_offset 14, -4
 157:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 158:Src/stm32f7xx_it.c **** 
 159:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 160:Src/stm32f7xx_it.c ****   osSystickHandler();
 161              		.loc 1 160 0
 162 0002 FFF7FEFF 		bl	osSystickHandler
 163              	.LVL0:
 161:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 162:Src/stm32f7xx_it.c **** 
 163:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 164:Src/stm32f7xx_it.c **** }
 164              		.loc 1 164 0
 165 0006 08BD     		pop	{r3, pc}
 166              		.cfi_endproc
 167              	.LFE149:
 169              		.section	.text.DMA1_Stream5_IRQHandler,"ax",%progbits
 170              		.align	1
 171              		.global	DMA1_Stream5_IRQHandler
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv5-sp-d16
 177              	DMA1_Stream5_IRQHandler:
 178              	.LFB150:
 165:Src/stm32f7xx_it.c **** 
 166:Src/stm32f7xx_it.c **** /******************************************************************************/
 167:Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 168:Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 169:Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 170:Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 171:Src/stm32f7xx_it.c **** /******************************************************************************/
 172:Src/stm32f7xx_it.c **** 
 173:Src/stm32f7xx_it.c **** /**
 174:Src/stm32f7xx_it.c **** * @brief This function handles DMA1 stream5 global interrupt.
 175:Src/stm32f7xx_it.c **** */
 176:Src/stm32f7xx_it.c **** void DMA1_Stream5_IRQHandler(void)
 177:Src/stm32f7xx_it.c **** {
 179              		.loc 1 177 0
 180              		.cfi_startproc
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s 			page 7


 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 08B5     		push	{r3, lr}
 184              	.LCFI1:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 3, -8
 187              		.cfi_offset 14, -4
 178:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */
 179:Src/stm32f7xx_it.c **** 
 180:Src/stm32f7xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 0 */
 181:Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_dac1);
 188              		.loc 1 181 0
 189 0002 0248     		ldr	r0, .L15
 190 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 191              	.LVL1:
 182:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */
 183:Src/stm32f7xx_it.c **** 
 184:Src/stm32f7xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 1 */
 185:Src/stm32f7xx_it.c **** }
 192              		.loc 1 185 0
 193 0008 08BD     		pop	{r3, pc}
 194              	.L16:
 195 000a 00BF     		.align	2
 196              	.L15:
 197 000c 00000000 		.word	hdma_dac1
 198              		.cfi_endproc
 199              	.LFE150:
 201              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 202              		.align	1
 203              		.global	TIM2_IRQHandler
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv5-sp-d16
 209              	TIM2_IRQHandler:
 210              	.LFB151:
 186:Src/stm32f7xx_it.c **** 
 187:Src/stm32f7xx_it.c **** /**
 188:Src/stm32f7xx_it.c **** * @brief This function handles TIM2 global interrupt.
 189:Src/stm32f7xx_it.c **** */
 190:Src/stm32f7xx_it.c **** void TIM2_IRQHandler(void)
 191:Src/stm32f7xx_it.c **** {
 211              		.loc 1 191 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215 0000 08B5     		push	{r3, lr}
 216              	.LCFI2:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 3, -8
 219              		.cfi_offset 14, -4
 192:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 193:Src/stm32f7xx_it.c **** 
 194:Src/stm32f7xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 195:Src/stm32f7xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 220              		.loc 1 195 0
 221 0002 0248     		ldr	r0, .L19
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s 			page 8


 222 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 223              	.LVL2:
 196:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 197:Src/stm32f7xx_it.c **** 
 198:Src/stm32f7xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 199:Src/stm32f7xx_it.c **** }
 224              		.loc 1 199 0
 225 0008 08BD     		pop	{r3, pc}
 226              	.L20:
 227 000a 00BF     		.align	2
 228              	.L19:
 229 000c 00000000 		.word	htim2
 230              		.cfi_endproc
 231              	.LFE151:
 233              		.section	.text.DMA2_Stream0_IRQHandler,"ax",%progbits
 234              		.align	1
 235              		.global	DMA2_Stream0_IRQHandler
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 239              		.fpu fpv5-sp-d16
 241              	DMA2_Stream0_IRQHandler:
 242              	.LFB152:
 200:Src/stm32f7xx_it.c **** 
 201:Src/stm32f7xx_it.c **** /**
 202:Src/stm32f7xx_it.c **** * @brief This function handles DMA2 stream0 global interrupt.
 203:Src/stm32f7xx_it.c **** */
 204:Src/stm32f7xx_it.c **** void DMA2_Stream0_IRQHandler(void)
 205:Src/stm32f7xx_it.c **** {
 243              		.loc 1 205 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247 0000 08B5     		push	{r3, lr}
 248              	.LCFI3:
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 3, -8
 251              		.cfi_offset 14, -4
 206:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */
 207:Src/stm32f7xx_it.c **** 
 208:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 0 */
 209:Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 252              		.loc 1 209 0
 253 0002 0248     		ldr	r0, .L23
 254 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 255              	.LVL3:
 210:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */
 211:Src/stm32f7xx_it.c **** 
 212:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream0_IRQn 1 */
 213:Src/stm32f7xx_it.c **** }
 256              		.loc 1 213 0
 257 0008 08BD     		pop	{r3, pc}
 258              	.L24:
 259 000a 00BF     		.align	2
 260              	.L23:
 261 000c 00000000 		.word	hdma_adc1
 262              		.cfi_endproc
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s 			page 9


 263              	.LFE152:
 265              		.section	.text.DMA2_Stream3_IRQHandler,"ax",%progbits
 266              		.align	1
 267              		.global	DMA2_Stream3_IRQHandler
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 271              		.fpu fpv5-sp-d16
 273              	DMA2_Stream3_IRQHandler:
 274              	.LFB153:
 214:Src/stm32f7xx_it.c **** 
 215:Src/stm32f7xx_it.c **** /**
 216:Src/stm32f7xx_it.c **** * @brief This function handles DMA2 stream3 global interrupt.
 217:Src/stm32f7xx_it.c **** */
 218:Src/stm32f7xx_it.c **** void DMA2_Stream3_IRQHandler(void)
 219:Src/stm32f7xx_it.c **** {
 275              		.loc 1 219 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279 0000 08B5     		push	{r3, lr}
 280              	.LCFI4:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 3, -8
 283              		.cfi_offset 14, -4
 220:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream3_IRQn 0 */
 221:Src/stm32f7xx_it.c **** 
 222:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream3_IRQn 0 */
 223:Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi1_tx);
 284              		.loc 1 223 0
 285 0002 0248     		ldr	r0, .L27
 286 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 287              	.LVL4:
 224:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA2_Stream3_IRQn 1 */
 225:Src/stm32f7xx_it.c **** 
 226:Src/stm32f7xx_it.c ****   /* USER CODE END DMA2_Stream3_IRQn 1 */
 227:Src/stm32f7xx_it.c **** }
 288              		.loc 1 227 0
 289 0008 08BD     		pop	{r3, pc}
 290              	.L28:
 291 000a 00BF     		.align	2
 292              	.L27:
 293 000c 00000000 		.word	hdma_spi1_tx
 294              		.cfi_endproc
 295              	.LFE153:
 297              		.text
 298              	.Letext0:
 299              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 300              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 301              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 302              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 303              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 304              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 305              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 306              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 307              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 308              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s 			page 10


 309              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 310              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 311              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_it.c
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:18     .text.NMI_Handler:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:39     .text.HardFault_Handler:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:46     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:60     .text.MemManage_Handler:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:67     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:81     .text.BusFault_Handler:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:88     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:102    .text.UsageFault_Handler:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:109    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:123    .text.DebugMon_Handler:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:130    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:143    .text.SysTick_Handler:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:150    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:170    .text.DMA1_Stream5_IRQHandler:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:177    .text.DMA1_Stream5_IRQHandler:00000000 DMA1_Stream5_IRQHandler
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:197    .text.DMA1_Stream5_IRQHandler:0000000c $d
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:202    .text.TIM2_IRQHandler:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:209    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:229    .text.TIM2_IRQHandler:0000000c $d
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:234    .text.DMA2_Stream0_IRQHandler:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:241    .text.DMA2_Stream0_IRQHandler:00000000 DMA2_Stream0_IRQHandler
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:261    .text.DMA2_Stream0_IRQHandler:0000000c $d
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:266    .text.DMA2_Stream3_IRQHandler:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:273    .text.DMA2_Stream3_IRQHandler:00000000 DMA2_Stream3_IRQHandler
C:\Users\micha\AppData\Local\Temp\ccE8JoVh.s:293    .text.DMA2_Stream3_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
osSystickHandler
HAL_DMA_IRQHandler
hdma_dac1
HAL_TIM_IRQHandler
htim2
hdma_adc1
hdma_spi1_tx
