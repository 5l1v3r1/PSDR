ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_hal_mmc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MMC_DMATransmitCplt,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	MMC_DMATransmitCplt:
  25              	.LFB164:
  26              		.file 1 "Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c"
   1:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
   2:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ******************************************************************************
   3:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @file    stm32f7xx_hal_mmc.c
   4:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief   MMC card HAL module driver.
   6:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *          functionalities of the Secure Digital (MMC) peripheral:
   8:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *           + IO operation functions
  10:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *           + Peripheral Control functions 
  11:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *           + MMC card Control functions
  12:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         
  13:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   @verbatim
  14:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ==============================================================================
  15:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ==============================================================================
  17:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   [..]
  18:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     This driver implements a high level communication layer for read and write from/to 
  19:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     this memory. The needed STM32 hardware resources (SDMMC and GPIO) are performed by 
  20:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     the user in HAL_MMC_MspInit() function (MSP layer).                             
  21:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     Basically, the MSP layer configuration should be the same as we provide in the 
  22:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     examples.
  23:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     You can easily tailor this configuration according to hardware resources.
  24:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
  25:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   [..]
  26:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     This driver is a generic layered driver for SDMMC memories which uses the HAL 
  27:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC driver functions to interface with MMC and eMMC cards devices. 
  28:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     It is used as follows:
  29:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  
  30:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (#)Initialize the SDMMC low level resources by implement the HAL_MMC_MspInit() API:
  31:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         (##) Enable the SDMMC interface clock using __HAL_RCC_SDMMC_CLK_ENABLE(); 
  32:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         (##) SDMMC pins configuration for MMC card
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 2


  33:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             (+++) Enable the clock for the SDMMC GPIOs using the functions __HAL_RCC_GPIOx_CLK_ENAB
  34:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             (+++) Configure these SDMMC pins as alternate function pull-up using HAL_GPIO_Init()
  35:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                   and according to your pin assignment;
  36:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         (##) DMA Configuration if you need to use DMA process (HAL_MMC_ReadBlocks_DMA()
  37:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****              and HAL_MMC_WriteBlocks_DMA() APIs).
  38:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             (+++) Enable the DMAx interface clock using __HAL_RCC_DMAx_CLK_ENABLE(); 
  39:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             (+++) Configure the DMA using the function HAL_DMA_Init() with predeclared and filled. 
  40:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         (##) NVIC configuration if you need to use interrupt process when using DMA transfer.
  41:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             (+++) Configure the SDMMC and DMA interrupt priorities using functions
  42:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                   HAL_NVIC_SetPriority(); DMA priority is superior to SDMMC's priority
  43:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             (+++) Enable the NVIC DMA and SDMMC IRQs using function HAL_NVIC_EnableIRQ()
  44:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             (+++) SDMMC interrupts are managed using the macros __HAL_MMC_ENABLE_IT() 
  45:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                   and __HAL_MMC_DISABLE_IT() inside the communication process.
  46:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             (+++) SDMMC interrupts pending bits are managed using the macros __HAL_MMC_GET_IT()
  47:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                   and __HAL_MMC_CLEAR_IT()
  48:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_MMC_ReadBlocks_IT()
  49:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****              and HAL_MMC_WriteBlocks_IT() APIs).
  50:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             (+++) Configure the SDMMC interrupt priorities using function
  51:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                   HAL_NVIC_SetPriority();
  52:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             (+++) Enable the NVIC SDMMC IRQs using function HAL_NVIC_EnableIRQ()
  53:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             (+++) SDMMC interrupts are managed using the macros __HAL_MMC_ENABLE_IT() 
  54:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                   and __HAL_MMC_DISABLE_IT() inside the communication process.
  55:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             (+++) SDMMC interrupts pending bits are managed using the macros __HAL_MMC_GET_IT()
  56:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                   and __HAL_MMC_CLEAR_IT()
  57:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (#) At this stage, you can perform MMC read/write/erase operations after MMC card initializatio
  58:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
  59:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****          
  60:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *** MMC Card Initialization and configuration ***
  61:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ================================================    
  62:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   [..]
  63:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     To initialize the MMC Card, use the HAL_MMC_Init() function. It Initializes 
  64:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC IP (STM32 side) and the MMC Card, and put it into StandBy State (Ready for data transfer)
  65:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     This function provide the following operations:
  66:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
  67:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (#) Initialize the SDMMC peripheral interface with defaullt configuration.
  68:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         The initialization process is done at 400KHz. You can change or adapt 
  69:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         this frequency by adjusting the "ClockDiv" field. 
  70:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         The MMC Card frequency (SDMMC_CK) is computed as follows:
  71:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
  72:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****            SDMMC_CK = SDMMCCLK / (ClockDiv + 2)
  73:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
  74:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         In initialization mode and according to the MMC Card standard, 
  75:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         make sure that the SDMMC_CK frequency doesn't exceed 400KHz.
  76:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
  77:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         This phase of initialization is done through SDMMC_Init() and 
  78:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         SDMMC_PowerState_ON() SDMMC low level APIs.
  79:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
  80:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (#) Initialize the MMC card. The API used is HAL_MMC_InitCard().
  81:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         This phase allows the card initialization and identification 
  82:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         and check the MMC Card type (Standard Capacity or High Capacity)
  83:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         The initialization flow is compatible with MMC standard.
  84:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
  85:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         This API (HAL_MMC_InitCard()) could be used also to reinitialize the card in case 
  86:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         of plug-off plug-in.
  87:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
  88:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (#) Configure the MMC Card Data transfer frequency. By Default, the card transfer 
  89:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         frequency is set to 24MHz. You can change or adapt this frequency by adjusting 
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 3


  90:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         the "ClockDiv" field.
  91:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         In transfer mode and according to the MMC Card standard, make sure that the 
  92:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         SDMMC_CK frequency doesn't exceed 25MHz and 50MHz in High-speed mode switch.
  93:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         To be able to use a frequency higher than 24MHz, you should use the SDMMC 
  94:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         peripheral in bypass mode. Refer to the corresponding reference manual 
  95:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         for more details.
  96:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
  97:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (#) Select the corresponding MMC Card according to the address read with the step 2.
  98:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
  99:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (#) Configure the MMC Card in wide bus mode: 4-bits data.
 100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *** MMC Card Read operation ***
 102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ==============================
 103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   [..] 
 104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) You can read from MMC card in polling mode by using function HAL_MMC_ReadBlocks(). 
 105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         This function allows the read of 512 bytes blocks.
 106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         You can choose either one block read operation or multiple block read operation 
 107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         by adjusting the "NumberOfBlocks" parameter.
 108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         After this, you have to ensure that the transfer is done correctly. The check is done
 109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         through HAL_MMC_GetCardState() function for MMC card state.
 110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) You can read from MMC card in DMA mode by using function HAL_MMC_ReadBlocks_DMA().
 112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         This function allows the read of 512 bytes blocks.
 113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         You can choose either one block read operation or multiple block read operation 
 114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         by adjusting the "NumberOfBlocks" parameter.
 115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         After this, you have to ensure that the transfer is done correctly. The check is done
 116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         through HAL_MMC_GetCardState() function for MMC card state.
 117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         You could also check the DMA transfer process through the MMC Rx interrupt event.
 118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) You can read from MMC card in Interrupt mode by using function HAL_MMC_ReadBlocks_IT().
 120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         This function allows the read of 512 bytes blocks.
 121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         You can choose either one block read operation or multiple block read operation 
 122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         by adjusting the "NumberOfBlocks" parameter.
 123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         After this, you have to ensure that the transfer is done correctly. The check is done
 124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         through HAL_MMC_GetCardState() function for MMC card state.
 125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         You could also check the IT transfer process through the MMC Rx interrupt event.
 126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *** MMC Card Write operation ***
 128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   =============================== 
 129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   [..] 
 130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) You can write to MMC card in polling mode by using function HAL_MMC_WriteBlocks(). 
 131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         This function allows the read of 512 bytes blocks.
 132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         You can choose either one block read operation or multiple block read operation 
 133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         by adjusting the "NumberOfBlocks" parameter.
 134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         After this, you have to ensure that the transfer is done correctly. The check is done
 135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         through HAL_MMC_GetCardState() function for MMC card state.
 136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) You can write to MMC card in DMA mode by using function HAL_MMC_WriteBlocks_DMA().
 138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         This function allows the read of 512 bytes blocks.
 139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         You can choose either one block read operation or multiple block read operation 
 140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         by adjusting the "NumberOfBlocks" parameter.
 141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         After this, you have to ensure that the transfer is done correctly. The check is done
 142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         through HAL_MMC_GetCardState() function for MMC card state.
 143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         You could also check the DMA transfer process through the MMC Tx interrupt event.  
 144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) You can write to MMC card in Interrupt mode by using function HAL_MMC_WriteBlocks_IT().
 146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         This function allows the read of 512 bytes blocks.
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 4


 147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         You can choose either one block read operation or multiple block read operation 
 148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         by adjusting the "NumberOfBlocks" parameter.
 149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         After this, you have to ensure that the transfer is done correctly. The check is done
 150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         through HAL_MMC_GetCardState() function for MMC card state.
 151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         You could also check the IT transfer process through the MMC Tx interrupt event.
 152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *** MMC card information ***
 154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   =========================== 
 155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   [..]
 156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) To get MMC card information, you can use the function HAL_MMC_GetCardInfo().
 157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         It returns useful information about the MMC card such as block size, card type,
 158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         block number ...
 159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *** MMC card CSD register ***
 161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ============================
 162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   [..]
 163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) The HAL_MMC_GetCardCSD() API allows to get the parameters of the CSD register.
 164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         Some of the CSD parameters are useful for card initialization and identification.
 165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *** MMC card CID register ***
 167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ============================
 168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   [..]
 169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) The HAL_MMC_GetCardCID() API allows to get the parameters of the CID register.
 170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         Some of the CID parameters are useful for card initialization and identification.
 171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *** MMC HAL driver macros list ***
 173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ==================================
 174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   [..]
 175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     Below the list of most used macros in MMC HAL driver.
 176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****        
 177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) __HAL_MMC_ENABLE : Enable the MMC device
 178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) __HAL_MMC_DISABLE : Disable the MMC device
 179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) __HAL_MMC_DMA_ENABLE: Enable the SDMMC DMA transfer
 180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) __HAL_MMC_DMA_DISABLE: Disable the SDMMC DMA transfer
 181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) __HAL_MMC_ENABLE_IT: Enable the MMC device interrupt
 182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) __HAL_MMC_DISABLE_IT: Disable the MMC device interrupt
 183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) __HAL_MMC_GET_FLAG:Check whether the specified MMC flag is set or not
 184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (+) __HAL_MMC_CLEAR_FLAG: Clear the MMC's pending flags
 185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   [..]
 187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     (@) You can refer to the MMC HAL driver header file for more useful macros 
 188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   @endverbatim
 190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ******************************************************************************
 191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @attention
 192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *
 193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2017 STMicroelectronics</center></h2>
 194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *
 195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * are permitted provided that the following conditions are met:
 197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *      this list of conditions and the following disclaimer.
 199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *      this list of conditions and the following disclaimer in the documentation
 201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *      and/or other materials provided with the distribution.
 202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *      may be used to endorse or promote products derived from this software
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 5


 204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *      without specific prior written permission.
 205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *
 206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *
 217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ******************************************************************************
 218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */ 
 219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /* Includes ------------------------------------------------------------------*/
 221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** #include "stm32f7xx_hal.h"
 222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /** @addtogroup STM32F7xx_HAL_Driver
 224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @{
 225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /** @defgroup MMC MMC
 228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief MMC HAL module driver
 229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @{
 230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** #ifdef HAL_MMC_MODULE_ENABLED
 233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /* Private typedef -----------------------------------------------------------*/
 235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /* Private define ------------------------------------------------------------*/
 236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /** @addtogroup MMC_Private_Defines
 237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @{
 238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
 241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @}
 242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /* Private macro -------------------------------------------------------------*/
 245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /* Private variables ---------------------------------------------------------*/
 246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /* Private function prototypes -----------------------------------------------*/
 247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /* Private functions ---------------------------------------------------------*/
 248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /** @defgroup MMC_Private_Functions MMC Private Functions
 249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @{
 250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static uint32_t MMC_InitCard(MMC_HandleTypeDef *hmmc);
 252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static uint32_t MMC_PowerON(MMC_HandleTypeDef *hmmc);
 253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static uint32_t MMC_SendStatus(MMC_HandleTypeDef *hmmc, uint32_t *pCardStatus);
 254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static HAL_StatusTypeDef MMC_PowerOFF(MMC_HandleTypeDef *hmmc);
 255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static HAL_StatusTypeDef MMC_Write_IT(MMC_HandleTypeDef *hmmc);
 256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static HAL_StatusTypeDef MMC_Read_IT(MMC_HandleTypeDef *hmmc);
 257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static void MMC_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static void MMC_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static void MMC_DMAError(DMA_HandleTypeDef *hdma);
 260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static void MMC_DMATxAbort(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 6


 261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static void MMC_DMARxAbort(DMA_HandleTypeDef *hdma);
 262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
 263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @}
 264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /* Exported functions --------------------------------------------------------*/
 267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /** @addtogroup MMC_Exported_Functions
 268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @{
 269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /** @addtogroup MMC_Exported_Functions_Group1
 272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  *  @brief   Initialization and de-initialization functions 
 273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  *
 274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** @verbatim    
 275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ==============================================================================
 276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****           ##### Initialization and de-initialization functions #####
 277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ==============================================================================
 278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   [..]  
 279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     This section provides functions allowing to initialize/de-initialize the MMC
 280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     card device to be ready for use.
 281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** @endverbatim
 283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @{
 284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
 287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Initializes the MMC according to the specified parameters in the 
 288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             MMC_HandleTypeDef and create the associated handle.
 289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to the MMC handle  
 290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
 291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_Init(MMC_HandleTypeDef *hmmc)
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
 294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Check the MMC handle allocation */
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc == NULL)
 296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Check the parameters */
 301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   assert_param(IS_SDMMC_ALL_INSTANCE(hmmc->Instance));
 302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   assert_param(IS_SDMMC_CLOCK_EDGE(hmmc->Init.ClockEdge));
 303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   assert_param(IS_SDMMC_CLOCK_BYPASS(hmmc->Init.ClockBypass));
 304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   assert_param(IS_SDMMC_CLOCK_POWER_SAVE(hmmc->Init.ClockPowerSave));
 305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   assert_param(IS_SDMMC_BUS_WIDE(hmmc->Init.BusWide));
 306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   assert_param(IS_SDMMC_HARDWARE_FLOW_CONTROL(hmmc->Init.HardwareFlowControl));
 307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   assert_param(IS_SDMMC_CLKDIV(hmmc->Init.ClockDiv));
 308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->State == HAL_MMC_STATE_RESET)
 310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Allocate lock resource and initialize it */
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->Lock = HAL_UNLOCKED;
 313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     HAL_MMC_MspInit(hmmc);
 315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->State = HAL_MMC_STATE_BUSY;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 7


 318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Initialize the Card parameters */
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_InitCard(hmmc);
 321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Initialize the error code */
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->ErrorCode = HAL_DMA_ERROR_NONE;
 324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Initialize the MMC operation */
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->Context = MMC_CONTEXT_NONE;
 327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                                                                                      
 328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Initialize the MMC state */
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->State = HAL_MMC_STATE_READY;
 330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_OK;
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
 335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Initializes the MMC Card.
 336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
 337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @note   This function initializes the MMC card. It could be used when a card 
 338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             re-initialization is needed.
 339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
 340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_InitCard(MMC_HandleTypeDef *hmmc)
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
 343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
 344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   MMC_InitTypeDef Init;
 345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Default SDMMC peripheral configuration for MMC card initialization */
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockEdge           = SDMMC_CLOCK_EDGE_RISING;
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockBypass         = SDMMC_CLOCK_BYPASS_DISABLE;
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockPowerSave      = SDMMC_CLOCK_POWER_SAVE_DISABLE;
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.BusWide             = SDMMC_BUS_WIDE_1B;
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockDiv            = SDMMC_INIT_CLK_DIV;
 353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Initialize SDMMC peripheral interface with default configuration */
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_Init(hmmc->Instance, Init);
 356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Disable SDMMC Clock */
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   __HAL_MMC_DISABLE(hmmc); 
 359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Set Power State to ON */
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_PowerState_ON(hmmc->Instance);
 362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Enable MMC Clock */
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   __HAL_MMC_ENABLE(hmmc);
 365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Required power up waiting time before starting the SD initialization sequence */
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_Delay(2);
 368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Identify card operating voltage */
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   errorstate = MMC_PowerON(hmmc);
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_MMC_ERROR_NONE)
 372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_READY;
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= errorstate;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 8


 375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Card initialization */
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   errorstate = MMC_InitCard(hmmc);
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_MMC_ERROR_NONE)
 381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_READY;
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= errorstate;
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_OK;
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
 391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  De-Initializes the MMC card.
 392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
 393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
 394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_DeInit(MMC_HandleTypeDef *hmmc)
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
 397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Check the MMC handle allocation */
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc == NULL)
 399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Check the parameters */
 404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   assert_param(IS_SDMMC_ALL_INSTANCE(hmmc->Instance));
 405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->State = HAL_MMC_STATE_BUSY;
 407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Set MMC power state to off */ 
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   MMC_PowerOFF(hmmc);
 410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* De-Initialize the MSP layer */
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_MspDeInit(hmmc);
 413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->ErrorCode = HAL_MMC_ERROR_NONE;
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->State = HAL_MMC_STATE_RESET;
 416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_OK;
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
 422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Initializes the MMC MSP.
 423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
 424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval None
 425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** __weak void HAL_MMC_MspInit(MMC_HandleTypeDef *hmmc)
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
 428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Prevent unused argument(s) compilation warning */
 429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   UNUSED(hmmc);
 430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  
 431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 9


 432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             the HAL_MMC_MspInit could be implemented in the user file
 433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****    */
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
 437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  De-Initialize MMC MSP.
 438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
 439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval None
 440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** __weak void HAL_MMC_MspDeInit(MMC_HandleTypeDef *hmmc)
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
 443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Prevent unused argument(s) compilation warning */
 444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   UNUSED(hmmc);
 445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  
 446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             the HAL_MMC_MspDeInit could be implemented in the user file
 448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****    */
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
 452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @}
 453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /** @addtogroup MMC_Exported_Functions_Group2
 456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  *  @brief   Data transfer functions 
 457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  *
 458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** @verbatim   
 459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ==============================================================================
 460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                         ##### IO operation functions #####
 461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ==============================================================================  
 462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   [..]
 463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     This subsection provides a set of functions allowing to manage the data 
 464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     transfer from/to MMC card.
 465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** @endverbatim
 467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @{
 468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
 471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Reads block(s) from a specified address in a card. The Data transfer 
 472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         is managed by polling mode.
 473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @note   This API should be followed by a check on the card state through
 474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         HAL_MMC_GetCardState().
 475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
 476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  pData pointer to the buffer that will contain the received data
 477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  BlockAdd Block Address from where data is to be read 
 478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  NumberOfBlocks Number of MMC blocks to read
 479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  Timeout Specify timeout value
 480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
 481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_ReadBlocks(MMC_HandleTypeDef *hmmc, uint8_t *pData, uint32_t BlockAdd, ui
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
 484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_DataInitTypeDef config;
 485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t tickstart = HAL_GetTick();
 487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t count = 0, *tempbuff = (uint32_t *)pData;
 488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 10


 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(NULL == pData)
 490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= HAL_MMC_ERROR_PARAM;
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->State == HAL_MMC_STATE_READY)
 496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode = HAL_DMA_ERROR_NONE;
 498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((BlockAdd + NumberOfBlocks) > (hmmc->MmcCard.LogBlockNbr))
 500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_ADDR_OUT_OF_RANGE;
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_BUSY;
 506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Initialize data control register */
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->Instance->DCTRL = 0;
 509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Check the Card capacity in term of Logical number of blocks */
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if ((hmmc->MmcCard.LogBlockNbr) < CAPACITY)
 512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       BlockAdd *= 512;
 514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Set Block Size for Card */
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdBlockLength(hmmc->Instance, BLOCKSIZE);
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);      
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Configure the MMC DPSM (Data Path State Machine) */
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataTimeOut   = SDMMC_DATATIMEOUT;
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataLength    = NumberOfBlocks * BLOCKSIZE;
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataBlockSize = SDMMC_DATABLOCK_SIZE_512B;
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferDir   = SDMMC_TRANSFER_DIR_TO_SDMMC;
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferMode  = SDMMC_TRANSFER_MODE_BLOCK;
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DPSM          = SDMMC_DPSM_ENABLE;
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_ConfigData(hmmc->Instance, &config);
 535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Read block(s) in polling mode */
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(NumberOfBlocks > 1)
 538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->Context = MMC_CONTEXT_READ_MULTIPLE_BLOCK;
 540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Read Multi Block command */ 
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdReadMultiBlock(hmmc->Instance, BlockAdd);
 543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     else
 545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 11


 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->Context = MMC_CONTEXT_READ_SINGLE_BLOCK;
 547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Read Single Block command */
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdReadSingleBlock(hmmc->Instance, BlockAdd);
 550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Poll on SDMMC flags */
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     while(!__HAL_MMC_GET_FLAG(hmmc, SDMMC_FLAG_RXOVERR | SDMMC_FLAG_DCRCFAIL | SDMMC_FLAG_DTIMEOUT 
 562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_FLAG_RXFIFOHF))
 564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Read data from SDMMC Rx FIFO */
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         for(count = 0U; count < 8U; count++)
 567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****           *(tempbuff + count) = SDMMC_ReadFIFO(hmmc->Instance);
 569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         }
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         tempbuff += 8U;
 571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if((Timeout == 0U)||((HAL_GetTick()-tickstart) >=  Timeout))
 574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Clear all the static flags */
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->ErrorCode |= HAL_MMC_ERROR_TIMEOUT;
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->State= HAL_MMC_STATE_READY;
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         return HAL_TIMEOUT;
 580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Send stop transmission command in case of multiblock read */
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_FLAG_DATAEND) && (NumberOfBlocks > 1U))
 585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Send stop transmission command */
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdStopTransfer(hmmc->Instance);
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(errorstate != HAL_MMC_ERROR_NONE)
 589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Clear all the static flags */
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->ErrorCode |= errorstate;
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->State = HAL_MMC_STATE_READY;
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         return HAL_ERROR;
 595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Get error state */
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_FLAG_DTIMEOUT))
 600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 12


 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_DATA_TIMEOUT;
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     else if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_FLAG_DCRCFAIL))
 608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_DATA_CRC_FAIL;
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     else if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_FLAG_RXOVERR))
 616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_RX_OVERRUN;
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Empty FIFO if there is still any data */
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     while ((__HAL_MMC_GET_FLAG(hmmc, SDMMC_FLAG_RXDAVL)))
 626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       *tempbuff = SDMMC_ReadFIFO(hmmc->Instance);
 628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       tempbuff++;
 629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if((Timeout == 0U)||((HAL_GetTick()-tickstart) >=  Timeout))
 631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Clear all the static flags */
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);        
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->ErrorCode |= HAL_MMC_ERROR_TIMEOUT;
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->State= HAL_MMC_STATE_READY;
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         return HAL_ERROR;
 637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Clear all the static flags */
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
 642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_READY;
 644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_OK;
 646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else
 648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= HAL_MMC_ERROR_BUSY;
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
 655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Allows to write block(s) to a specified address in a card. The Data
 656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         transfer is managed by polling mode.
 657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @note   This API should be followed by a check on the card state through
 658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         HAL_MMC_GetCardState().
 659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 13


 660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  pData pointer to the buffer that will contain the data to transmit
 661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  BlockAdd Block Address where data will be written  
 662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  NumberOfBlocks Number of MMC blocks to write
 663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  Timeout Specify timeout value
 664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
 665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_WriteBlocks(MMC_HandleTypeDef *hmmc, uint8_t *pData, uint32_t BlockAdd, u
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
 668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_DataInitTypeDef config;
 669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t tickstart = HAL_GetTick();
 671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t count = 0;
 672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t *tempbuff = (uint32_t *)pData;
 673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(NULL == pData)
 675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= HAL_MMC_ERROR_PARAM;
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->State == HAL_MMC_STATE_READY)
 681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode = HAL_DMA_ERROR_NONE;
 683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((BlockAdd + NumberOfBlocks) > (hmmc->MmcCard.LogBlockNbr))
 685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_ADDR_OUT_OF_RANGE;
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_BUSY;
 691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Initialize data control register */
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->Instance->DCTRL = 0;
 694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****      
 695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Check the Card capacity in term of Logical number of blocks */
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if ((hmmc->MmcCard.LogBlockNbr) < CAPACITY)
 697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       BlockAdd *= 512;
 699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Set Block Size for Card */ 
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdBlockLength(hmmc->Instance, BLOCKSIZE);
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);  
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Write Blocks in Polling mode */
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(NumberOfBlocks > 1U)
 714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->Context = MMC_CONTEXT_WRITE_MULTIPLE_BLOCK;
 716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 14


 717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Write Multi Block command */ 
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdWriteMultiBlock(hmmc->Instance, BlockAdd);
 719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     else
 721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->Context = MMC_CONTEXT_WRITE_SINGLE_BLOCK;
 723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Write Single Block command */
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdWriteSingleBlock(hmmc->Instance, BlockAdd);
 726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);  
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Configure the MMC DPSM (Data Path State Machine) */ 
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataTimeOut   = SDMMC_DATATIMEOUT;
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataLength    = NumberOfBlocks * BLOCKSIZE;
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataBlockSize = SDMMC_DATABLOCK_SIZE_512B;
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferDir   = SDMMC_TRANSFER_DIR_TO_CARD;
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferMode  = SDMMC_TRANSFER_MODE_BLOCK;
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DPSM          = SDMMC_DPSM_ENABLE;
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_ConfigData(hmmc->Instance, &config);
 744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Write block(s) in polling mode */
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     while(!__HAL_MMC_GET_FLAG(hmmc, SDMMC_FLAG_TXUNDERR | SDMMC_FLAG_DCRCFAIL | SDMMC_FLAG_DTIMEOUT
 747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_FLAG_TXFIFOHE))
 749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Write data to SDMMC Tx FIFO */
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         for(count = 0U; count < 8U; count++)
 752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****           SDMMC_WriteFIFO(hmmc->Instance, (tempbuff + count));
 754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         }
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         tempbuff += 8U;
 756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if((Timeout == 0U)||((HAL_GetTick()-tickstart) >=  Timeout))
 759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Clear all the static flags */
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);  
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->ErrorCode |= errorstate;
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->State = HAL_MMC_STATE_READY;
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         return HAL_TIMEOUT;
 765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Send stop transmission command in case of multiblock write */
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_FLAG_DATAEND) && (NumberOfBlocks > 1U))
 770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     { 
 771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Send stop transmission command */
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdStopTransfer(hmmc->Instance);
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(errorstate != HAL_MMC_ERROR_NONE)
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 15


 774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Clear all the static flags */
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);  
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->ErrorCode |= errorstate;
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->State = HAL_MMC_STATE_READY;
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         return HAL_ERROR;
 780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Get error state */
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_FLAG_DTIMEOUT))
 785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_DATA_TIMEOUT;
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     else if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_FLAG_DCRCFAIL))
 793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_DATA_CRC_FAIL;      
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     else if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_FLAG_TXUNDERR))
 801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_TX_UNDERRUN;
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Clear all the static flags */
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
 811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_READY;
 813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_OK;
 815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else
 817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= HAL_MMC_ERROR_BUSY;
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
 824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Reads block(s) from a specified address in a card. The Data transfer 
 825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         is managed in interrupt mode. 
 826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @note   This API should be followed by a check on the card state through
 827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         HAL_MMC_GetCardState().
 828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @note   You could also check the IT transfer process through the MMC Rx 
 829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         interrupt event.
 830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle                 
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 16


 831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  pData Pointer to the buffer that will contain the received data
 832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  BlockAdd Block Address from where data is to be read 
 833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  NumberOfBlocks Number of blocks to read.
 834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
 835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_ReadBlocks_IT(MMC_HandleTypeDef *hmmc, uint8_t *pData, uint32_t BlockAdd,
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
 838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_DataInitTypeDef config;
 839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
 840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(NULL == pData)
 842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= HAL_MMC_ERROR_PARAM;
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->State == HAL_MMC_STATE_READY)
 848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode = HAL_DMA_ERROR_NONE;
 850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((BlockAdd + NumberOfBlocks) > (hmmc->MmcCard.LogBlockNbr))
 852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_ADDR_OUT_OF_RANGE;
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_BUSY;
 858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Initialize data control register */
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->Instance->DCTRL = 0U;
 861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->pRxBuffPtr = (uint32_t *)pData;
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->RxXferSize = BLOCKSIZE * NumberOfBlocks;
 864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_ENABLE_IT(hmmc, (SDMMC_IT_DCRCFAIL | SDMMC_IT_DTIMEOUT | SDMMC_IT_RXOVERR | SDMMC_IT_
 866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Check the Card capacity in term of Logical number of blocks */
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if ((hmmc->MmcCard.LogBlockNbr) < CAPACITY)
 869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       BlockAdd *= 512;
 871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Configure the MMC DPSM (Data Path State Machine) */ 
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataTimeOut   = SDMMC_DATATIMEOUT;
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataLength    = BLOCKSIZE * NumberOfBlocks;
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataBlockSize = SDMMC_DATABLOCK_SIZE_512B;
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferDir   = SDMMC_TRANSFER_DIR_TO_SDMMC;
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferMode  = SDMMC_TRANSFER_MODE_BLOCK;
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DPSM          = SDMMC_DPSM_ENABLE;
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_ConfigData(hmmc->Instance, &config);
 881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Set Block Size for Card */ 
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdBlockLength(hmmc->Instance, BLOCKSIZE);
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS); 
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 17


 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Read Blocks in IT mode */
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(NumberOfBlocks > 1U)
 895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->Context = (MMC_CONTEXT_READ_MULTIPLE_BLOCK | MMC_CONTEXT_IT);
 897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Read Multi Block command */
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdReadMultiBlock(hmmc->Instance, BlockAdd);
 900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     else
 902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->Context = (MMC_CONTEXT_READ_SINGLE_BLOCK | MMC_CONTEXT_IT);
 904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Read Single Block command */
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdReadSingleBlock(hmmc->Instance, BlockAdd);
 907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS); 
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_OK;
 918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else
 920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_BUSY;
 922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
 926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Writes block(s) to a specified address in a card. The Data transfer 
 927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         is managed in interrupt mode. 
 928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @note   This API should be followed by a check on the card state through
 929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         HAL_MMC_GetCardState().
 930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @note   You could also check the IT transfer process through the MMC Tx 
 931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         interrupt event. 
 932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
 933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  pData Pointer to the buffer that will contain the data to transmit
 934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  BlockAdd Block Address where data will be written    
 935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  NumberOfBlocks Number of blocks to write
 936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
 937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
 938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_WriteBlocks_IT(MMC_HandleTypeDef *hmmc, uint8_t *pData, uint32_t BlockAdd
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
 940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_DataInitTypeDef config;
 941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
 942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(NULL == pData)
 944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 18


 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= HAL_MMC_ERROR_PARAM;
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->State == HAL_MMC_STATE_READY)
 950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode = HAL_DMA_ERROR_NONE;
 952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((BlockAdd + NumberOfBlocks) > (hmmc->MmcCard.LogBlockNbr))
 954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_ADDR_OUT_OF_RANGE;
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_BUSY;
 960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Initialize data control register */
 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->Instance->DCTRL = 0U;
 963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->pTxBuffPtr = (uint32_t *)pData;
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->TxXferSize = BLOCKSIZE * NumberOfBlocks;
 966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Enable transfer interrupts */
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_ENABLE_IT(hmmc, (SDMMC_IT_DCRCFAIL | SDMMC_IT_DTIMEOUT | SDMMC_IT_TXUNDERR | SDMMC_IT
 969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Check the Card capacity in term of Logical number of blocks */
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if ((hmmc->MmcCard.LogBlockNbr) < CAPACITY)
 972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       BlockAdd *= 512;
 974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Set Block Size for Card */ 
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdBlockLength(hmmc->Instance, BLOCKSIZE);
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS); 
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Write Blocks in Polling mode */
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(NumberOfBlocks > 1U)
 989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->Context = (MMC_CONTEXT_WRITE_MULTIPLE_BLOCK| MMC_CONTEXT_IT);
 991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Write Multi Block command */ 
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdWriteMultiBlock(hmmc->Instance, BlockAdd);
 994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     else
 996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->Context = (MMC_CONTEXT_WRITE_SINGLE_BLOCK | MMC_CONTEXT_IT);
 998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Write Single Block command */ 
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdWriteSingleBlock(hmmc->Instance, BlockAdd);
1001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 19


1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
1003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS); 
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Configure the MMC DPSM (Data Path State Machine) */ 
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataTimeOut   = SDMMC_DATATIMEOUT;
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataLength    = BLOCKSIZE * NumberOfBlocks;
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataBlockSize = SDMMC_DATABLOCK_SIZE_512B;
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferDir   = SDMMC_TRANSFER_DIR_TO_CARD;
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferMode  = SDMMC_TRANSFER_MODE_BLOCK;
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DPSM          = SDMMC_DPSM_ENABLE;
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_ConfigData(hmmc->Instance, &config);
1019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_OK;
1021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else
1023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_BUSY;
1025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Reads block(s) from a specified address in a card. The Data transfer 
1030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         is managed by DMA mode. 
1031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @note   This API should be followed by a check on the card state through
1032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         HAL_MMC_GetCardState().
1033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @note   You could also check the DMA transfer process through the MMC Rx 
1034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         interrupt event.
1035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer MMC handle                 
1036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  pData Pointer to the buffer that will contain the received data
1037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  BlockAdd Block Address from where data is to be read  
1038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  NumberOfBlocks Number of blocks to read.
1039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
1040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_ReadBlocks_DMA(MMC_HandleTypeDef *hmmc, uint8_t *pData, uint32_t BlockAdd
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_DataInitTypeDef config;
1044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
1045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(NULL == pData)
1047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= HAL_MMC_ERROR_PARAM;
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
1050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->State == HAL_MMC_STATE_READY)
1053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode = HAL_DMA_ERROR_NONE;
1055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((BlockAdd + NumberOfBlocks) > (hmmc->MmcCard.LogBlockNbr))
1057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_ADDR_OUT_OF_RANGE;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 20


1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_BUSY;
1063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Initialize data control register */
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->Instance->DCTRL = 0U;
1066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_ENABLE_IT(hmmc, (SDMMC_IT_DCRCFAIL | SDMMC_IT_DTIMEOUT | SDMMC_IT_RXOVERR | SDMMC_IT_
1068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Set the DMA transfer complete callback */
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->hdmarx->XferCpltCallback = MMC_DMAReceiveCplt;
1071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Set the DMA error callback */
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->hdmarx->XferErrorCallback = MMC_DMAError;
1074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Set the DMA Abort callback */
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->hdmarx->XferAbortCallback = NULL;
1077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Enable the DMA Channel */
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     HAL_DMA_Start_IT(hmmc->hdmarx, (uint32_t)&hmmc->Instance->FIFO, (uint32_t)pData, (uint32_t)(BLO
1080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Enable MMC DMA transfer */
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_DMA_ENABLE(hmmc);
1083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Check the Card capacity in term of Logical number of blocks */
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if ((hmmc->MmcCard.LogBlockNbr) < CAPACITY)
1086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       BlockAdd *= 512;
1088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Configure the MMC DPSM (Data Path State Machine) */ 
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataTimeOut   = SDMMC_DATATIMEOUT;
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataLength    = BLOCKSIZE * NumberOfBlocks;
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataBlockSize = SDMMC_DATABLOCK_SIZE_512B;
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferDir   = SDMMC_TRANSFER_DIR_TO_SDMMC;
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferMode  = SDMMC_TRANSFER_MODE_BLOCK;
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DPSM          = SDMMC_DPSM_ENABLE;
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_ConfigData(hmmc->Instance, &config);
1098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Set Block Size for Card */ 
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdBlockLength(hmmc->Instance, BLOCKSIZE);
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
1102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS); 
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         
1110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Read Blocks in DMA mode */
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(NumberOfBlocks > 1U)
1112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->Context = (MMC_CONTEXT_READ_MULTIPLE_BLOCK | MMC_CONTEXT_DMA);
1114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
1115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Read Multi Block command */ 
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 21


1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdReadMultiBlock(hmmc->Instance, BlockAdd);
1117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     else
1119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->Context = (MMC_CONTEXT_READ_SINGLE_BLOCK | MMC_CONTEXT_DMA);
1121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
1122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Read Single Block command */ 
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdReadSingleBlock(hmmc->Instance, BlockAdd);
1124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
1126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS); 
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_OK;
1135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else
1137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_BUSY;
1139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Writes block(s) to a specified address in a card. The Data transfer 
1144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         is managed by DMA mode. 
1145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @note   This API should be followed by a check on the card state through
1146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         HAL_MMC_GetCardState().
1147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @note   You could also check the DMA transfer process through the MMC Tx 
1148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         interrupt event.
1149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
1150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  pData Pointer to the buffer that will contain the data to transmit
1151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  BlockAdd Block Address where data will be written  
1152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  NumberOfBlocks Number of blocks to write
1153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
1154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_WriteBlocks_DMA(MMC_HandleTypeDef *hmmc, uint8_t *pData, uint32_t BlockAd
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_DataInitTypeDef config;
1158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
1159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(NULL == pData)
1161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= HAL_MMC_ERROR_PARAM;
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
1164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->State == HAL_MMC_STATE_READY)
1167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode = HAL_DMA_ERROR_NONE;
1169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((BlockAdd + NumberOfBlocks) > (hmmc->MmcCard.LogBlockNbr))
1171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_ADDR_OUT_OF_RANGE;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 22


1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_BUSY;
1177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Initialize data control register */
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->Instance->DCTRL = 0U;
1180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Enable MMC Error interrupts */
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_ENABLE_IT(hmmc, (SDMMC_IT_DCRCFAIL | SDMMC_IT_DTIMEOUT | SDMMC_IT_TXUNDERR));    
1183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Set the DMA transfer complete callback */
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->hdmatx->XferCpltCallback = MMC_DMATransmitCplt;
1186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Set the DMA error callback */
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->hdmatx->XferErrorCallback = MMC_DMAError;
1189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Set the DMA Abort callback */
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->hdmatx->XferAbortCallback = NULL;
1192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Check the Card capacity in term of Logical number of blocks */
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if ((hmmc->MmcCard.LogBlockNbr) < CAPACITY)
1195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       BlockAdd *= 512;
1197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Set Block Size for Card */ 
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdBlockLength(hmmc->Instance, BLOCKSIZE);
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
1202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS); 
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Write Blocks in Polling mode */
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(NumberOfBlocks > 1U)
1212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->Context = (MMC_CONTEXT_WRITE_MULTIPLE_BLOCK | MMC_CONTEXT_DMA);
1214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
1215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Write Multi Block command */ 
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdWriteMultiBlock(hmmc->Instance, BlockAdd);
1217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     else
1219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->Context = (MMC_CONTEXT_WRITE_SINGLE_BLOCK | MMC_CONTEXT_DMA);
1221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
1222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Write Single Block command */
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       errorstate = SDMMC_CmdWriteSingleBlock(hmmc->Instance, BlockAdd);
1224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
1226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS); 
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 23


1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Enable SDMMC DMA transfer */
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_DMA_ENABLE(hmmc);
1236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Enable the DMA Channel */
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     HAL_DMA_Start_IT(hmmc->hdmatx, (uint32_t)pData, (uint32_t)&hmmc->Instance->FIFO, (uint32_t)(BLO
1239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Configure the MMC DPSM (Data Path State Machine) */ 
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataTimeOut   = SDMMC_DATATIMEOUT;
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataLength    = BLOCKSIZE * NumberOfBlocks;
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataBlockSize = SDMMC_DATABLOCK_SIZE_512B;
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferDir   = SDMMC_TRANSFER_DIR_TO_CARD;
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferMode  = SDMMC_TRANSFER_MODE_BLOCK;
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DPSM          = SDMMC_DPSM_ENABLE;
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_ConfigData(hmmc->Instance, &config);
1248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_OK;
1250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else
1252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_BUSY;
1254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Erases the specified memory area of the given MMC card.
1259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @note   This API should be followed by a check on the card state through
1260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         HAL_MMC_GetCardState().
1261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle 
1262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  BlockStartAdd Start Block address
1263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  BlockEndAdd End Block address
1264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
1265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_Erase(MMC_HandleTypeDef *hmmc, uint32_t BlockStartAdd, uint32_t BlockEndA
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
1269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->State == HAL_MMC_STATE_READY)
1271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode = HAL_DMA_ERROR_NONE;
1273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(BlockEndAdd < BlockStartAdd)
1275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_PARAM;
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(BlockEndAdd > (hmmc->MmcCard.LogBlockNbr))
1281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_ADDR_OUT_OF_RANGE;
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_BUSY;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 24


1287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Check if the card command class supports erase command */
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(((hmmc->MmcCard.Class) & SDMMC_CCCC_ERASE) == 0U)
1290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_REQUEST_NOT_APPLICABLE;
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP1) & SDMMC_CARD_LOCKED) == SDMMC_CARD_LOCKED)
1299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);  
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_LOCK_UNLOCK_FAILED;
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Check the Card capacity in term of Logical number of blocks */
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if ((hmmc->MmcCard.LogBlockNbr) < CAPACITY)
1309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       BlockStartAdd *= 512U;
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       BlockEndAdd   *= 512U;
1312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Send CMD35 MMC_ERASE_GRP_START with argument as addr  */
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdEraseStartAdd(hmmc->Instance, BlockStartAdd);
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
1317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS); 
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Send CMD36 MMC_ERASE_GRP_END with argument as addr  */
1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdEraseEndAdd(hmmc->Instance, BlockEndAdd);
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
1328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS); 
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Send CMD38 ERASE */
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdErase(hmmc->Instance);
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
1339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS); 
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 25


1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_READY;
1348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_OK;
1350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else
1352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_BUSY;
1354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  This function handles MMC card interrupt request.
1359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
1360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval None
1361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** void HAL_MMC_IRQHandler(MMC_HandleTypeDef *hmmc)
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
1365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Check for SDMMC interrupt flags */
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_IT_DATAEND) != RESET)
1368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_FLAG_DATAEND); 
1370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_DISABLE_IT(hmmc, SDMMC_IT_DATAEND | SDMMC_IT_DCRCFAIL | SDMMC_IT_DTIMEOUT|\
1372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                              SDMMC_IT_TXUNDERR| SDMMC_IT_RXOVERR);
1373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((hmmc->Context & MMC_CONTEXT_IT) != RESET)
1375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(((hmmc->Context & MMC_CONTEXT_READ_MULTIPLE_BLOCK) != RESET) || ((hmmc->Context & MMC_CONT
1377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         errorstate = SDMMC_CmdStopTransfer(hmmc->Instance);
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         if(errorstate != HAL_MMC_ERROR_NONE)
1380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****           hmmc->ErrorCode |= errorstate;
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****           HAL_MMC_ErrorCallback(hmmc);
1383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         }
1384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
1385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
1386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear all the static flags */
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
1388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(((hmmc->Context & MMC_CONTEXT_READ_SINGLE_BLOCK) != RESET) || ((hmmc->Context & MMC_CONTEX
1391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         HAL_MMC_RxCpltCallback(hmmc);
1393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
1394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       else
1395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         HAL_MMC_TxCpltCallback(hmmc);
1397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
1398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     else if((hmmc->Context & MMC_CONTEXT_DMA) != RESET)
1400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 26


1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if((hmmc->Context & MMC_CONTEXT_WRITE_MULTIPLE_BLOCK) != RESET)
1402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         errorstate = SDMMC_CmdStopTransfer(hmmc->Instance);
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         if(errorstate != HAL_MMC_ERROR_NONE)
1405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****           hmmc->ErrorCode |= errorstate;
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****           HAL_MMC_ErrorCallback(hmmc);
1408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         }
1409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(((hmmc->Context & MMC_CONTEXT_READ_SINGLE_BLOCK) == RESET) && ((hmmc->Context & MMC_CONTEX
1411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
1412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Disable the DMA transfer for transmit request by setting the DMAEN bit
1413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         in the MMC DCTRL register */
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->Instance->DCTRL &= (uint32_t)~((uint32_t)SDMMC_DCTRL_DMAEN);
1415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->State = HAL_MMC_STATE_READY;
1417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         HAL_MMC_TxCpltCallback(hmmc);
1419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
1420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_IT_TXFIFOHE) != RESET)
1424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_FLAG_TXFIFOHE);
1426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     MMC_Write_IT(hmmc);
1428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_IT_RXFIFOHF) != RESET)
1431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_FLAG_RXFIFOHF);
1433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     MMC_Read_IT(hmmc);
1435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_IT_DCRCFAIL | SDMMC_IT_DTIMEOUT | SDMMC_IT_RXOVERR | SDMMC
1438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Set Error code */
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_IT_DCRCFAIL) != RESET)
1441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_DATA_CRC_FAIL; 
1443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_IT_DTIMEOUT) != RESET)
1445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_DATA_TIMEOUT; 
1447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_IT_RXOVERR) != RESET)
1449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_RX_OVERRUN; 
1451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(__HAL_MMC_GET_FLAG(hmmc, SDMMC_IT_TXUNDERR) != RESET)
1453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_TX_UNDERRUN; 
1455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 	
1457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Clear All flags */
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 27


1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
1459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Disable all interrupts */
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_DISABLE_IT(hmmc, SDMMC_IT_DATAEND | SDMMC_IT_DCRCFAIL | SDMMC_IT_DTIMEOUT|\
1462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                              SDMMC_IT_TXUNDERR| SDMMC_IT_RXOVERR);
1463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((hmmc->Context & MMC_CONTEXT_DMA) != RESET)
1465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Abort the MMC DMA Streams */
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(hmmc->hdmatx != NULL)
1468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
1469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Set the DMA Tx abort callback */
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->hdmatx->XferAbortCallback = MMC_DMATxAbort;
1471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Abort DMA in IT mode */
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         if(HAL_DMA_Abort_IT(hmmc->hdmatx) != HAL_OK)
1473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****           MMC_DMATxAbort(hmmc->hdmatx);
1475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         }
1476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       else if(hmmc->hdmarx != NULL)
1478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
1479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Set the DMA Rx abort callback */
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->hdmarx->XferAbortCallback = MMC_DMARxAbort;
1481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Abort DMA in IT mode */
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         if(HAL_DMA_Abort_IT(hmmc->hdmarx) != HAL_OK)
1483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****           MMC_DMARxAbort(hmmc->hdmarx);
1485:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         }
1486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
1487:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       else
1488:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->ErrorCode = HAL_MMC_ERROR_NONE;
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->State = HAL_MMC_STATE_READY;
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         HAL_MMC_AbortCallback(hmmc);
1492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
1493:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     else if((hmmc->Context & MMC_CONTEXT_IT) != RESET)
1495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1496:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Set the MMC state to ready to be able to start again the process */
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       HAL_MMC_ErrorCallback(hmmc);
1499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1500:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }   
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1503:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1504:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief return the MMC state
1505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param hmmc Pointer to mmc handle
1506:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL state
1507:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_MMC_StateTypeDef HAL_MMC_GetState(MMC_HandleTypeDef *hmmc)
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return hmmc->State;
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1512:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1514:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** * @brief  Return the MMC error code
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 28


1515:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** * @param  hmmc  Pointer to a MMC_HandleTypeDef structure that contains
1516:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *              the configuration information.
1517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** * @retval MMC Error Code
1518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** */
1519:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** uint32_t HAL_MMC_GetError(MMC_HandleTypeDef *hmmc)
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return hmmc->ErrorCode;
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1525:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief Tx Transfer completed callbacks
1526:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param hmmc Pointer to MMC handle
1527:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval None
1528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  __weak void HAL_MMC_TxCpltCallback(MMC_HandleTypeDef *hmmc)
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Prevent unused argument(s) compilation warning */
1532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   UNUSED(hmmc);
1533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1535:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             the HAL_MMC_TxCpltCallback can be implemented in the user file
1536:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****    */
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1538:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1540:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief Rx Transfer completed callbacks
1541:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param hmmc Pointer MMC handle
1542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval None
1543:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1544:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** __weak void HAL_MMC_RxCpltCallback(MMC_HandleTypeDef *hmmc)
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Prevent unused argument(s) compilation warning */
1547:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   UNUSED(hmmc);
1548:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  
1549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1550:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             the HAL_MMC_ErrorCallback can be implemented in the user file
1551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****    */
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1553:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief MMC error callbacks
1556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param hmmc Pointer MMC handle
1557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval None
1558:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1559:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** __weak void HAL_MMC_ErrorCallback(MMC_HandleTypeDef *hmmc)
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Prevent unused argument(s) compilation warning */
1562:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   UNUSED(hmmc);
1563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  
1564:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1565:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             the HAL_MMC_ErrorCallback can be implemented in the user file
1566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****    */ 
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1569:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief MMC Abort callbacks
1571:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param hmmc Pointer MMC handle
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 29


1572:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval None
1573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1574:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** __weak void HAL_MMC_AbortCallback(MMC_HandleTypeDef *hmmc)
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Prevent unused argument(s) compilation warning */
1577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   UNUSED(hmmc);
1578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  
1579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1580:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****             the HAL_MMC_ErrorCallback can be implemented in the user file
1581:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****    */ 
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1583:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1585:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1586:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @}
1587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1589:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /** @addtogroup MMC_Exported_Functions_Group3
1590:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  *  @brief   management functions 
1591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****  *
1592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** @verbatim   
1593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ==============================================================================
1594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                       ##### Peripheral Control functions #####
1595:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   ==============================================================================  
1596:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   [..]
1597:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     This subsection provides a set of functions allowing to control the MMC card 
1598:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     operations and get the related information
1599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1600:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** @endverbatim
1601:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @{
1602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Returns information the information of the card which are stored on
1606:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         the CID register.
1607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
1608:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  pCID Pointer to a HAL_MMC_CIDTypedef structure that  
1609:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         contains all CID register parameters 
1610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
1611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_GetCardCID(MMC_HandleTypeDef *hmmc, HAL_MMC_CardCIDTypeDef *pCID)
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1614:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t tmp = 0;
1615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1616:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 0 */
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CID[0] & 0xFF000000U) >> 24);
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ManufacturerID = tmp;
1619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 1 */
1621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CID[0] & 0x00FF0000) >> 16);
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->OEM_AppliID = tmp << 8;
1623:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1624:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 2 */
1625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CID[0] & 0x000000FF00) >> 8);
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->OEM_AppliID |= tmp;
1627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1628:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 3 */
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 30


1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)(hmmc->CID[0] & 0x000000FF);
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdName1 = tmp << 24;
1631:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1632:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 4 */
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CID[1] & 0xFF000000U) >> 24);
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdName1 |= tmp << 16;
1635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 5 */
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CID[1] & 0x00FF0000) >> 16);
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdName1 |= tmp << 8;
1639:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1640:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 6 */
1641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CID[1] & 0x0000FF00) >> 8);
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdName1 |= tmp;
1643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1644:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 7 */
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)(hmmc->CID[1] & 0x000000FF);
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdName2 = tmp;
1647:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1648:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 8 */
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CID[2] & 0xFF000000U) >> 24);
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdRev = tmp;
1651:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 9 */
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CID[2] & 0x00FF0000) >> 16);
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdSN = tmp << 24;
1655:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1656:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 10 */
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CID[2] & 0x0000FF00) >> 8);
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdSN |= tmp << 16;
1659:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1660:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 11 */
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)(hmmc->CID[2] & 0x000000FF);
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdSN |= tmp << 8;
1663:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1664:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 12 */
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CID[3] & 0xFF000000U) >> 24);
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdSN |= tmp;
1667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1668:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 13 */
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CID[3] & 0x00FF0000) >> 16);
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->Reserved1   |= (tmp & 0xF0) >> 4;
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ManufactDate = (tmp & 0x0F) << 8;
1672:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1673:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 14 */
1674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CID[3] & 0x0000FF00) >> 8);
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ManufactDate |= tmp;
1676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 15 */
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)(hmmc->CID[3] & 0x000000FF);
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->CID_CRC   = (tmp & 0xFE) >> 1;
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->Reserved2 = 1;
1681:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_OK;
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1685:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 31


1686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Returns information the information of the card which are stored on
1687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         the CSD register.
1688:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
1689:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  pCSD Pointer to a HAL_MMC_CardInfoTypeDef structure that  
1690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         contains all CSD register parameters  
1691:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
1692:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_GetCardCSD(MMC_HandleTypeDef *hmmc, HAL_MMC_CardCSDTypeDef *pCSD)
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1695:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t tmp = 0;
1696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1697:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 0 */
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (hmmc->CSD[0] & 0xFF000000U) >> 24;
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->CSDStruct      = (uint8_t)((tmp & 0xC0) >> 6);
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->SysSpecVersion = (uint8_t)((tmp & 0x3C) >> 2);
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->Reserved1      = tmp & 0x03;
1702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 1 */
1704:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (hmmc->CSD[0] & 0x00FF0000) >> 16;
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->TAAC = (uint8_t)tmp;
1706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 2 */
1708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (hmmc->CSD[0] & 0x0000FF00) >> 8;
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->NSAC = (uint8_t)tmp;
1710:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1711:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 3 */
1712:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = hmmc->CSD[0] & 0x000000FF;
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->MaxBusClkFrec = (uint8_t)tmp;
1714:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 4 */
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (hmmc->CSD[1] & 0xFF000000U) >> 24;
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->CardComdClasses = (uint16_t)(tmp << 4);
1718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1719:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 5 */
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (hmmc->CSD[1] & 0x00FF0000U) >> 16;
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->CardComdClasses |= (uint16_t)((tmp & 0xF0) >> 4);
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->RdBlockLen       = (uint8_t)(tmp & 0x0F);
1723:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1724:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 6 */
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (hmmc->CSD[1] & 0x0000FF00U) >> 8;
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->PartBlockRead   = (uint8_t)((tmp & 0x80) >> 7);
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->WrBlockMisalign = (uint8_t)((tmp & 0x40) >> 6);
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->RdBlockMisalign = (uint8_t)((tmp & 0x20) >> 5);
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->DSRImpl         = (uint8_t)((tmp & 0x10) >> 4);
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->Reserved2       = 0; /*!< Reserved */
1731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->DeviceSize = (tmp & 0x03) << 10;
1733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1734:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 7 */
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)(hmmc->CSD[1] & 0x000000FFU);
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->DeviceSize |= (tmp) << 2;
1737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 8 */
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CSD[2] & 0xFF000000U) >> 24);
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->DeviceSize |= (tmp & 0xC0) >> 6;
1741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->MaxRdCurrentVDDMin = (tmp & 0x38) >> 3;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 32


1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->MaxRdCurrentVDDMax = (tmp & 0x07);
1744:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1745:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 9 */
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CSD[2] & 0x00FF0000U) >> 16);
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->MaxWrCurrentVDDMin = (tmp & 0xE0) >> 5;
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->MaxWrCurrentVDDMax = (tmp & 0x1C) >> 2;
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->DeviceSizeMul      = (tmp & 0x03) << 1;
1750:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 10 */
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CSD[2] & 0x0000FF00U) >> 8);
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->DeviceSizeMul |= (tmp & 0x80) >> 7;
1753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->MmcCard.BlockNbr  = (pCSD->DeviceSize + 1) ;
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->MmcCard.BlockNbr *= (1 << (pCSD->DeviceSizeMul + 2));
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->MmcCard.BlockSize = 1 << (pCSD->RdBlockLen);
1757:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->MmcCard.LogBlockNbr =  (hmmc->MmcCard.BlockNbr) * ((hmmc->MmcCard.BlockSize) / 512); 
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->MmcCard.LogBlockSize = 512;
1760:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->EraseGrSize = (tmp & 0x40) >> 6;
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->EraseGrMul  = (tmp & 0x3F) << 1;
1763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 11 */
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)(hmmc->CSD[2] & 0x000000FF);
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->EraseGrMul     |= (tmp & 0x80) >> 7;
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->WrProtectGrSize = (tmp & 0x7F);
1768:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 12 */
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CSD[3] & 0xFF000000U) >> 24);
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->WrProtectGrEnable = (tmp & 0x80) >> 7;
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->ManDeflECC        = (tmp & 0x60) >> 5;
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->WrSpeedFact       = (tmp & 0x1C) >> 2;
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->MaxWrBlockLen     = (tmp & 0x03) << 2;
1775:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 13 */
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CSD[3] & 0x00FF0000) >> 16);
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->MaxWrBlockLen      |= (tmp & 0xC0) >> 6;
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->WriteBlockPaPartial = (tmp & 0x20) >> 5;
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->Reserved3           = 0;
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->ContentProtectAppli = (tmp & 0x01);
1782:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1783:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 14 */
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)((hmmc->CSD[3] & 0x0000FF00) >> 8);
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->FileFormatGrouop = (tmp & 0x80) >> 7;
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->CopyFlag         = (tmp & 0x40) >> 6;
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->PermWrProtect    = (tmp & 0x20) >> 5;
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->TempWrProtect    = (tmp & 0x10) >> 4;
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->FileFormat       = (tmp & 0x0C) >> 2;
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->ECC              = (tmp & 0x03);
1791:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 15 */
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint8_t)(hmmc->CSD[3] & 0x000000FF);
1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->CSD_CRC   = (tmp & 0xFE) >> 1;
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->Reserved4 = 1;
1796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_OK;
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1799:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 33


1800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1801:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Gets the MMC card info.
1802:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle      
1803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  pCardInfo Pointer to the HAL_MMC_CardInfoTypeDef structure that 
1804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         will contain the MMC card status information 
1805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
1806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1807:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_GetCardInfo(MMC_HandleTypeDef *hmmc, HAL_MMC_CardInfoTypeDef *pCardInfo)
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->CardType     = (uint32_t)(hmmc->MmcCard.CardType);
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->Class        = (uint32_t)(hmmc->MmcCard.Class);
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->RelCardAdd   = (uint32_t)(hmmc->MmcCard.RelCardAdd);
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->BlockNbr     = (uint32_t)(hmmc->MmcCard.BlockNbr);
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->BlockSize    = (uint32_t)(hmmc->MmcCard.BlockSize);
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->LogBlockNbr  = (uint32_t)(hmmc->MmcCard.LogBlockNbr);
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->LogBlockSize = (uint32_t)(hmmc->MmcCard.LogBlockSize);
1816:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1817:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_OK;
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1820:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Enables wide bus operation for the requested card if supported by 
1822:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         card.
1823:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle       
1824:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  WideMode Specifies the MMC card wide bus mode 
1825:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *          This parameter can be one of the following values:
1826:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *            @arg SDMMC_BUS_WIDE_8B: 8-bit data transfer
1827:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *            @arg SDMMC_BUS_WIDE_4B: 4-bit data transfer
1828:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *            @arg SDMMC_BUS_WIDE_1B: 1-bit data transfer
1829:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
1830:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1831:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_ConfigWideBusOperation(MMC_HandleTypeDef *hmmc, uint32_t WideMode)
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   __IO uint32_t count = 0;
1834:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_InitTypeDef Init;
1835:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
1836:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t response = 0, busy = 0;
1837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 	
1838:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 	/* Check the parameters */
1839:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   assert_param(IS_SDMMC_BUS_WIDE(WideMode));
1840:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 	
1841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Chnage Satte */
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->State = HAL_MMC_STATE_BUSY;
1843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Update Clock for Bus mode update */
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockEdge           = SDMMC_CLOCK_EDGE_RISING;
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockBypass         = SDMMC_CLOCK_BYPASS_DISABLE;
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockPowerSave      = SDMMC_CLOCK_POWER_SAVE_DISABLE;
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.BusWide             = WideMode;
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockDiv            = SDMMC_INIT_CLK_DIV;
1851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Initialize SDMMC*/
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_Init(hmmc->Instance, Init); 
1853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(WideMode == SDMMC_BUS_WIDE_8B)
1855:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdSwitch(hmmc->Instance, 0x03B70200);
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 34


1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
1858:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
1860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1861:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else if(WideMode == SDMMC_BUS_WIDE_4B)
1863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdSwitch(hmmc->Instance, 0x03B70100);
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
1866:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
1868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1869:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else if(WideMode == SDMMC_BUS_WIDE_1B)
1871:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdSwitch(hmmc->Instance, 0x03B70000);
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
1874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
1876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else
1879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* WideMode is not a valid argument*/
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= HAL_MMC_ERROR_PARAM;
1882:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Check for switch error and violation of the trial number of sending CMD 13 */
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   while(busy == 0)
1886:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(count++ == SDMMC_MAX_TRIAL)
1888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_REQUEST_NOT_APPLICABLE;
1891:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1892:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1893:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* While card is not ready for data and trial number for sending CMD13 is not exceeded */
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdSendStatus(hmmc->Instance, (uint32_t)(((uint32_t)hmmc->MmcCard.RelCardAdd
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
1897:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
1899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1900:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1901:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Get command response */
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     response = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP1);
1903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1904:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Get operating voltage*/
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     busy = (((response >> 7) == 1) ? 0 : 1);
1906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1907:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
1908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* While card is not ready for data and trial number for sending CMD13 is not exceeded */
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   count = SDMMC_DATATIMEOUT;
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   while((response & 0x00000100) == 0)
1911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(count-- == 0)
1913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 35


1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_REQUEST_NOT_APPLICABLE;
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
1917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1918:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1919:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* While card is not ready for data and trial number for sending CMD13 is not exceeded */
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdSendStatus(hmmc->Instance, (uint32_t)(((uint32_t)hmmc->MmcCard.RelCardAdd
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
1922:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
1924:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
1925:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
1926:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Get command response */
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     response = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP1);
1928:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1929:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->ErrorCode != HAL_MMC_ERROR_NONE)
1931:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1932:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Clear all the static flags */
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_READY;
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
1936:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1937:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else
1938:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Configure the SDMMC peripheral */
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     Init.ClockEdge           = hmmc->Init.ClockEdge;
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     Init.ClockBypass         = hmmc->Init.ClockBypass;
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     Init.ClockPowerSave      = hmmc->Init.ClockPowerSave;
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     Init.BusWide             = WideMode;
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     Init.HardwareFlowControl = hmmc->Init.HardwareFlowControl;
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     Init.ClockDiv            = hmmc->Init.ClockDiv;
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_Init(hmmc->Instance, Init);
1947:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1948:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Change State */
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->State = HAL_MMC_STATE_READY;
1951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_OK;
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1954:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1957:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Gets the current mmc card data state.
1958:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc pointer to MMC handle
1959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval Card state
1960:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1961:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_MMC_CardStateTypeDef HAL_MMC_GetCardState(MMC_HandleTypeDef *hmmc)
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1963:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardStateTypeDef cardstate =  HAL_MMC_CARD_TRANSFER;
1964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t resp1 = 0;
1966:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   errorstate = MMC_SendStatus(hmmc, &resp1);
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_OK)
1969:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= errorstate;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 36


1971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
1972:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   cardstate = (HAL_MMC_CardStateTypeDef)((resp1 >> 9) & 0x0F);
1974:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1975:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return cardstate;
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
1977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
1978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
1979:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Abort the current transfer and disable the MMC.
1980:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc pointer to a MMC_HandleTypeDef structure that contains
1981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *                the configuration information for MMC module.
1982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
1983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
1984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_Abort(MMC_HandleTypeDef *hmmc)
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
1986:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardStateTypeDef CardState;
1987:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* DIsable All interrupts */
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   __HAL_MMC_DISABLE_IT(hmmc, SDMMC_IT_DATAEND | SDMMC_IT_DCRCFAIL | SDMMC_IT_DTIMEOUT|\
1990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                            SDMMC_IT_TXUNDERR| SDMMC_IT_RXOVERR);
1991:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1992:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Clear All flags */
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
1994:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if((hmmc->hdmatx != NULL) || (hmmc->hdmarx != NULL))
1996:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
1997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Disable the MMC DMA request */
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->Instance->DCTRL &= (uint32_t)~((uint32_t)SDMMC_DCTRL_DMAEN);
1999:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
2000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Abort the MMC DMA Tx Stream */
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(hmmc->hdmatx != NULL)
2002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       HAL_DMA_Abort(hmmc->hdmatx);
2004:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
2005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Abort the MMC DMA Rx Stream */
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(hmmc->hdmarx != NULL)
2007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       HAL_DMA_Abort(hmmc->hdmarx);
2009:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
2010:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2011:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->State = HAL_MMC_STATE_READY;
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   CardState = HAL_MMC_GetCardState(hmmc);
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if((CardState == HAL_MMC_CARD_RECEIVING) || (CardState == HAL_MMC_CARD_SENDING))
2015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode = SDMMC_CmdStopTransfer(hmmc->Instance);
2017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->ErrorCode != HAL_MMC_ERROR_NONE)
2019:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
2021:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_OK;
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
2024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2025:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Abort the current transfer and disable the MMC (IT mode).
2027:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc pointer to a MMC_HandleTypeDef structure that contains
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 37


2028:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *                the configuration information for MMC module.
2029:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
2030:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2031:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** HAL_StatusTypeDef HAL_MMC_Abort_IT(MMC_HandleTypeDef *hmmc)
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
2033:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardStateTypeDef CardState;
2034:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
2035:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* DIsable All interrupts */
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   __HAL_MMC_DISABLE_IT(hmmc, SDMMC_IT_DATAEND | SDMMC_IT_DCRCFAIL | SDMMC_IT_DTIMEOUT|\
2037:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                            SDMMC_IT_TXUNDERR| SDMMC_IT_RXOVERR);
2038:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2039:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Clear All flags */
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
2041:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if((hmmc->hdmatx != NULL) || (hmmc->hdmarx != NULL))
2043:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2044:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Disable the MMC DMA request */
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->Instance->DCTRL &= (uint32_t)~((uint32_t)SDMMC_DCTRL_DMAEN);
2046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
2047:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Abort the MMC DMA Tx Stream */
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(hmmc->hdmatx != NULL)
2049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->hdmatx->XferAbortCallback =  MMC_DMATxAbort;
2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(HAL_DMA_Abort_IT(hmmc->hdmatx) != HAL_OK)
2052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->hdmatx = NULL;
2054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
2055:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
2056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Abort the MMC DMA Rx Stream */
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(hmmc->hdmarx != NULL)
2058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->hdmarx->XferAbortCallback =  MMC_DMARxAbort;
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(HAL_DMA_Abort_IT(hmmc->hdmarx) != HAL_OK)
2061:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->hdmarx = NULL;
2063:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
2064:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
2065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2066:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* No transfer ongoing on both DMA channels*/
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if((hmmc->hdmatx == NULL) && (hmmc->hdmarx == NULL))
2069:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     CardState = HAL_MMC_GetCardState(hmmc);
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_READY;
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((CardState == HAL_MMC_CARD_RECEIVING) || (CardState == HAL_MMC_CARD_SENDING))
2073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode = SDMMC_CmdStopTransfer(hmmc->Instance);
2075:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(hmmc->ErrorCode != HAL_MMC_ERROR_NONE)
2077:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
2079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
2080:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     else
2081:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       HAL_MMC_AbortCallback(hmmc);
2083:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
2084:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 38


2085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_OK;
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
2088:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2089:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2090:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @}
2091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @}
2095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /* Private function ----------------------------------------------------------*/  
2098:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /** @addtogroup MMC_Private_Functions
2099:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @{
2100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2102:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2103:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  DMA MMC transmit process complete callback 
2104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hdma DMA handle
2105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval None
2106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static void MMC_DMATransmitCplt(DMA_HandleTypeDef *hdma)     
2108:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
  27              		.loc 1 2108 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2109:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   MMC_HandleTypeDef* hmmc = (MMC_HandleTypeDef* )(hdma->Parent);
  33              		.loc 1 2109 0
  34 0000 836B     		ldr	r3, [r0, #56]
  35              	.LVL1:
2110:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Enable DATAEND Interrupt */
2112:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   __HAL_MMC_ENABLE_IT(hmmc, (SDMMC_IT_DATAEND));
  36              		.loc 1 2112 0
  37 0002 1A68     		ldr	r2, [r3]
  38 0004 D36B     		ldr	r3, [r2, #60]
  39              	.LVL2:
  40 0006 43F48073 		orr	r3, r3, #256
  41 000a D363     		str	r3, [r2, #60]
  42              	.LVL3:
2113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
  43              		.loc 1 2113 0
  44 000c 7047     		bx	lr
  45              		.cfi_endproc
  46              	.LFE164:
  48              		.section	.text.MMC_PowerON,"ax",%progbits
  49              		.align	1
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  53              		.fpu fpv5-sp-d16
  55              	MMC_PowerON:
  56              	.LFB170:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 39


2114:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2115:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  DMA MMC receive process complete callback 
2117:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hdma DMA handle
2118:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval None
2119:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static void MMC_DMAReceiveCplt(DMA_HandleTypeDef *hdma)  
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   MMC_HandleTypeDef* hmmc = (MMC_HandleTypeDef* )(hdma->Parent);
2123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
2124:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Send stop command in multiblock write */
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->Context == (MMC_CONTEXT_READ_MULTIPLE_BLOCK | MMC_CONTEXT_DMA))
2127:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdStopTransfer(hmmc->Instance);
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
2130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       HAL_MMC_ErrorCallback(hmmc);
2133:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
2134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2135:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2136:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Disable the DMA transfer for transmit request by setting the DMAEN bit
2137:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   in the MMC DCTRL register */
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->Instance->DCTRL &= (uint32_t)~((uint32_t)SDMMC_DCTRL_DMAEN);
2139:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Clear all the static flags */
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
2142:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->State = HAL_MMC_STATE_READY;
2144:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_RxCpltCallback(hmmc);
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
2147:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2148:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2149:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  DMA MMC communication error callback 
2150:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hdma DMA handle
2151:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval None
2152:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2153:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static void MMC_DMAError(DMA_HandleTypeDef *hdma)   
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   MMC_HandleTypeDef* hmmc = (MMC_HandleTypeDef* )(hdma->Parent);
2156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardStateTypeDef CardState;
2157:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2158:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* if DMA error is FIFO error ignore it */
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(HAL_DMA_GetError(hdma) != HAL_DMA_ERROR_FE)
2160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((hmmc->hdmarx->ErrorCode == HAL_DMA_ERROR_TE) || (hmmc->hdmatx->ErrorCode == HAL_DMA_ERROR_T
2162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
2163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Clear All flags */
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_CLEAR_FLAG(hmmc, SDMMC_STATIC_FLAGS);
2165:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
2166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       /* Disable All interrupts */
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       __HAL_MMC_DISABLE_IT(hmmc, SDMMC_IT_DATAEND | SDMMC_IT_DCRCFAIL | SDMMC_IT_DTIMEOUT|\
2168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         SDMMC_IT_TXUNDERR| SDMMC_IT_RXOVERR);
2169:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_DMA;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 40


2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       CardState = HAL_MMC_GetCardState(hmmc);
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if((CardState == HAL_MMC_CARD_RECEIVING) || (CardState == HAL_MMC_CARD_SENDING))
2173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->ErrorCode |= SDMMC_CmdStopTransfer(hmmc->Instance);
2175:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
2176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State= HAL_MMC_STATE_READY;
2178:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
2179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     HAL_MMC_ErrorCallback(hmmc);
2181:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
2183:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2184:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  DMA MMC Tx Abort callback 
2186:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hdma DMA handle
2187:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval None
2188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2189:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static void MMC_DMATxAbort(DMA_HandleTypeDef *hdma)   
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   MMC_HandleTypeDef* hmmc = (MMC_HandleTypeDef* )(hdma->Parent);
2192:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardStateTypeDef CardState;
2193:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->hdmatx != NULL)
2195:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->hdmatx = NULL;
2197:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2198:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2199:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* All DMA channels are aborted */
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->hdmarx == NULL)
2201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     CardState = HAL_MMC_GetCardState(hmmc);
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode = HAL_MMC_ERROR_NONE;
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_READY;
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((CardState == HAL_MMC_CARD_RECEIVING) || (CardState == HAL_MMC_CARD_SENDING))
2206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= SDMMC_CmdStopTransfer(hmmc->Instance);
2208:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(hmmc->ErrorCode != HAL_MMC_ERROR_NONE)
2210:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         HAL_MMC_AbortCallback(hmmc);
2212:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
2213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       else
2214:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         HAL_MMC_ErrorCallback(hmmc);
2216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
2217:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
2218:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
2220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2221:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2222:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  DMA MMC Rx Abort callback 
2223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hdma DMA handle
2224:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval None
2225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2226:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static void MMC_DMARxAbort(DMA_HandleTypeDef *hdma)   
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 41


2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   MMC_HandleTypeDef* hmmc = (MMC_HandleTypeDef* )(hdma->Parent);
2229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardStateTypeDef CardState;
2230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->hdmarx != NULL)
2232:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->hdmarx = NULL;
2234:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2236:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* All DMA channels are aborted */
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(hmmc->hdmatx == NULL)
2238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     CardState = HAL_MMC_GetCardState(hmmc);
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode = HAL_MMC_ERROR_NONE;
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_READY;
2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((CardState == HAL_MMC_CARD_RECEIVING) || (CardState == HAL_MMC_CARD_SENDING))
2243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= SDMMC_CmdStopTransfer(hmmc->Instance);
2245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(hmmc->ErrorCode != HAL_MMC_ERROR_NONE)
2247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         HAL_MMC_AbortCallback(hmmc);
2249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
2250:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       else
2251:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         HAL_MMC_ErrorCallback(hmmc);
2253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
2254:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
2255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
2257:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2258:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2259:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2260:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Initializes the mmc card.
2261:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
2262:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval MMC Card error state
2263:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2264:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static uint32_t MMC_InitCard(MMC_HandleTypeDef *hmmc)
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
2266:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardCSDTypeDef CSD;
2267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint16_t mmc_rca = 1;
2269:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Check the power State */
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(SDMMC_GetPowerState(hmmc->Instance) == 0) 
2272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2273:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Power off */
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_MMC_ERROR_REQUEST_NOT_APPLICABLE;
2275:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Send CMD2 ALL_SEND_CID */
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   errorstate = SDMMC_CmdSendCID(hmmc->Instance);
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_MMC_ERROR_NONE)
2280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2281:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return errorstate;
2282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else
2284:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 42


2285:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Get Card identification number data */
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CID[0] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP1);
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CID[1] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP2);
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CID[2] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP3);
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CID[3] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP4);
2290:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2291:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Send CMD3 SET_REL_ADDR with argument 0 */
2293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* MMC Card publishes its RCA. */
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   errorstate = SDMMC_CmdSetRelAdd(hmmc->Instance, &mmc_rca);
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_MMC_ERROR_NONE)
2296:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return errorstate;
2298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2299:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2300:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Get the MMC card RCA */
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->MmcCard.RelCardAdd = mmc_rca;
2302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Send CMD9 SEND_CSD with argument as card's RCA */
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   errorstate = SDMMC_CmdSendCSD(hmmc->Instance, (uint32_t)(hmmc->MmcCard.RelCardAdd << 16U));
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_MMC_ERROR_NONE)
2306:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2307:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return errorstate;
2308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else
2310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Get Card Specific Data */
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CSD[0U] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP1);
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CSD[1U] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP2);
2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CSD[2U] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP3);
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CSD[3U] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP4);
2316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2318:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Get the Card Class */
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->MmcCard.Class = (SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP2) >> 20);
2320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Get CSD parameters */
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_GetCardCSD(hmmc, &CSD);
2323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2324:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Select the Card */
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   errorstate = SDMMC_CmdSelDesel(hmmc->Instance, (uint32_t)(((uint32_t)hmmc->MmcCard.RelCardAdd) <<
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_MMC_ERROR_NONE)
2327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2328:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return errorstate;
2329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Configure SDMMC peripheral interface */     
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_Init(hmmc->Instance, hmmc->Init);
2333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2334:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* All cards are initialized */
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_MMC_ERROR_NONE;
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
2337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2339:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Enquires cards about their operating voltage and configures clock
2340:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         controls and stores MMC information that will be needed in future
2341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         in the MMC handle.
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 43


2342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
2343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval error state
2344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2345:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static uint32_t MMC_PowerON(MMC_HandleTypeDef *hmmc)
2346:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
  57              		.loc 1 2346 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 8
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              	.LVL4:
  62 0000 30B5     		push	{r4, r5, lr}
  63              	.LCFI0:
  64              		.cfi_def_cfa_offset 12
  65              		.cfi_offset 4, -12
  66              		.cfi_offset 5, -8
  67              		.cfi_offset 14, -4
  68 0002 83B0     		sub	sp, sp, #12
  69              	.LCFI1:
  70              		.cfi_def_cfa_offset 24
  71 0004 0446     		mov	r4, r0
2347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   __IO uint32_t count = 0;
  72              		.loc 1 2347 0
  73 0006 0023     		movs	r3, #0
  74 0008 0193     		str	r3, [sp, #4]
  75              	.LVL5:
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t response = 0, validvoltage = 0;
2349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
2350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* CMD0: GO_IDLE_STATE */
2352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   errorstate = SDMMC_CmdGoIdleState(hmmc->Instance);
  76              		.loc 1 2352 0
  77 000a 0068     		ldr	r0, [r0]
  78              	.LVL6:
  79 000c FFF7FEFF 		bl	SDMMC_CmdGoIdleState
  80              	.LVL7:
2353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_MMC_ERROR_NONE)
  81              		.loc 1 2353 0
  82 0010 0546     		mov	r5, r0
  83 0012 00BB     		cbnz	r0, .L2
2348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t response = 0, validvoltage = 0;
  84              		.loc 1 2348 0
  85 0014 0346     		mov	r3, r0
  86              	.LVL8:
  87              	.L4:
2354:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return errorstate;
2356:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2357:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   while(validvoltage == 0)
  88              		.loc 1 2358 0
  89 0016 90B9     		cbnz	r0, .L10
2359:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2360:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(count++ == SDMMC_MAX_VOLT_TRIAL)
  90              		.loc 1 2360 0
  91 0018 019B     		ldr	r3, [sp, #4]
  92              	.LVL9:
  93 001a 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 44


  94 001c 0192     		str	r2, [sp, #4]
  95 001e 4FF6FF72 		movw	r2, #65535
  96 0022 9342     		cmp	r3, r2
  97 0024 15D0     		beq	.L7
2361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_MMC_ERROR_INVALID_VOLTRANGE;
2363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
2364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
2365:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* SEND CMD1 APP_CMD with MMC_HIGH_VOLTAGE_RANGE(0xC0FF8000) as argument */
2366:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     errorstate = SDMMC_CmdOpCondition(hmmc->Instance, eMMC_HIGH_VOLTAGE_RANGE);
  98              		.loc 1 2366 0
  99 0026 0F49     		ldr	r1, .L12
 100 0028 2068     		ldr	r0, [r4]
 101              	.LVL10:
 102 002a FFF7FEFF 		bl	SDMMC_CmdOpCondition
 103              	.LVL11:
2367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 104              		.loc 1 2367 0
 105 002e A8B9     		cbnz	r0, .L8
2368:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_MMC_ERROR_UNSUPPORTED_FEATURE;
2370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
2371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
2372:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Get command response */
2373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     response = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP1);
 106              		.loc 1 2373 0
 107 0030 0021     		movs	r1, #0
 108 0032 2068     		ldr	r0, [r4]
 109              	.LVL12:
 110 0034 FFF7FEFF 		bl	SDMMC_GetResponse
 111              	.LVL13:
2374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
2375:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Get operating voltage*/
2376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     validvoltage = (((response >> 31) == 1) ? 1 : 0);
 112              		.loc 1 2376 0
 113 0038 0346     		mov	r3, r0
 114 003a C00F     		lsrs	r0, r0, #31
 115              	.LVL14:
 116 003c EBE7     		b	.L4
 117              	.L10:
2377:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* When power routine is finished and command returns valid voltage */
2380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if ((response & MMC_HIGH_VOLTAGE_RANGE) == MMC_HIGH_VOLTAGE_RANGE)
 118              		.loc 1 2380 0
 119 003e 0A4A     		ldr	r2, .L12+4
 120 0040 32EA0303 		bics	r3, r2, r3
 121              	.LVL15:
 122 0044 02D0     		beq	.L11
2381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* When voltage range of the card is within 2.7V and 3.6V */
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->MmcCard.CardType = MMC_HIGH_VOLTAGE_CARD;
2384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2385:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   else
2386:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* When voltage range of the card is within 1.65V and 1.95V or 2.7V and 3.6V */
2388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->MmcCard.CardType = MMC_DUAL_VOLTAGE_CARD;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 45


 123              		.loc 1 2388 0
 124 0046 0123     		movs	r3, #1
 125 0048 6364     		str	r3, [r4, #68]
 126 004a 04E0     		b	.L2
 127              	.L11:
2383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 128              		.loc 1 2383 0
 129 004c 0023     		movs	r3, #0
 130 004e 6364     		str	r3, [r4, #68]
 131 0050 01E0     		b	.L2
 132              	.L7:
2362:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 133              		.loc 1 2362 0
 134 0052 4FF08075 		mov	r5, #16777216
 135              	.LVL16:
 136              	.L2:
2389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2391:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_MMC_ERROR_NONE;
2392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 137              		.loc 1 2392 0
 138 0056 2846     		mov	r0, r5
 139 0058 03B0     		add	sp, sp, #12
 140              	.LCFI2:
 141              		.cfi_remember_state
 142              		.cfi_def_cfa_offset 12
 143              		@ sp needed
 144 005a 30BD     		pop	{r4, r5, pc}
 145              	.LVL17:
 146              	.L8:
 147              	.LCFI3:
 148              		.cfi_restore_state
2369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 149              		.loc 1 2369 0
 150 005c 4FF08055 		mov	r5, #268435456
 151 0060 F9E7     		b	.L2
 152              	.L13:
 153 0062 00BF     		.align	2
 154              	.L12:
 155 0064 0080FFC0 		.word	-1056997376
 156 0068 0080FF80 		.word	-2130739200
 157              		.cfi_endproc
 158              	.LFE170:
 160              		.section	.text.MMC_PowerOFF,"ax",%progbits
 161              		.align	1
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv5-sp-d16
 167              	MMC_PowerOFF:
 168              	.LFB171:
2393:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2394:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2395:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Turns the SDMMC output signals off.
2396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
2397:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
2398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 46


2399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static HAL_StatusTypeDef MMC_PowerOFF(MMC_HandleTypeDef *hmmc)
2400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
 169              		.loc 1 2400 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              	.LVL18:
 174 0000 08B5     		push	{r3, lr}
 175              	.LCFI4:
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 3, -8
 178              		.cfi_offset 14, -4
2401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Set Power State to OFF */
2402:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_PowerState_OFF(hmmc->Instance);
 179              		.loc 1 2402 0
 180 0002 0068     		ldr	r0, [r0]
 181              	.LVL19:
 182 0004 FFF7FEFF 		bl	SDMMC_PowerState_OFF
 183              	.LVL20:
2403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_OK;
2405:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 184              		.loc 1 2405 0
 185 0008 0020     		movs	r0, #0
 186 000a 08BD     		pop	{r3, pc}
 187              		.cfi_endproc
 188              	.LFE171:
 190              		.section	.text.MMC_Read_IT,"ax",%progbits
 191              		.align	1
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 195              		.fpu fpv5-sp-d16
 197              	MMC_Read_IT:
 198              	.LFB173:
2406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2408:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Returns the current card's status.
2409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc Pointer to MMC handle
2410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  pCardStatus pointer to the buffer that will contain the MMC card 
2411:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *         status (Card Status register)  
2412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval error state
2413:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static uint32_t MMC_SendStatus(MMC_HandleTypeDef *hmmc, uint32_t *pCardStatus)
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
2416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
2417:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(pCardStatus == NULL)
2419:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_MMC_ERROR_PARAM;
2421:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2422:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Send Status command */
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   errorstate = SDMMC_CmdSendStatus(hmmc->Instance, (uint32_t)(hmmc->MmcCard.RelCardAdd << 16));
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_OK)
2426:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return errorstate;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 47


2428:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2429:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Get MMC card status */
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *pCardStatus = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP1);
2432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_MMC_ERROR_NONE;
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
2435:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2436:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Wrap up reading in non-blocking mode.
2438:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc pointer to a MMC_HandleTypeDef structure that contains
2439:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *              the configuration information.
2440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
2441:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static HAL_StatusTypeDef MMC_Read_IT(MMC_HandleTypeDef *hmmc)
2443:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
 199              		.loc 1 2443 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              	.LVL21:
 204 0000 70B5     		push	{r4, r5, r6, lr}
 205              	.LCFI5:
 206              		.cfi_def_cfa_offset 16
 207              		.cfi_offset 4, -16
 208              		.cfi_offset 5, -12
 209              		.cfi_offset 6, -8
 210              		.cfi_offset 14, -4
 211 0002 0546     		mov	r5, r0
 212              	.LVL22:
2444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t count = 0;
2445:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t* tmp;
2446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2447:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint32_t*)hmmc->pRxBuffPtr;
 213              		.loc 1 2447 0
 214 0004 866A     		ldr	r6, [r0, #40]
 215              	.LVL23:
2448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Read data from SDMMC Rx FIFO */
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   for(count = 0; count < 8; count++)
 216              		.loc 1 2450 0
 217 0006 0024     		movs	r4, #0
 218 0008 05E0     		b	.L17
 219              	.LVL24:
 220              	.L18:
2451:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     *(tmp + count) = SDMMC_ReadFIFO(hmmc->Instance);
 221              		.loc 1 2452 0 discriminator 3
 222 000a 2868     		ldr	r0, [r5]
 223 000c FFF7FEFF 		bl	SDMMC_ReadFIFO
 224              	.LVL25:
 225 0010 46F82400 		str	r0, [r6, r4, lsl #2]
2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 226              		.loc 1 2450 0 discriminator 3
 227 0014 0134     		adds	r4, r4, #1
 228              	.LVL26:
 229              	.L17:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 48


2450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 230              		.loc 1 2450 0 is_stmt 0 discriminator 1
 231 0016 072C     		cmp	r4, #7
 232 0018 F7D9     		bls	.L18
2453:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2455:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->pRxBuffPtr += 8;
 233              		.loc 1 2455 0 is_stmt 1
 234 001a AB6A     		ldr	r3, [r5, #40]
 235 001c 2033     		adds	r3, r3, #32
 236 001e AB62     		str	r3, [r5, #40]
2456:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2457:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_OK;
2458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 237              		.loc 1 2458 0
 238 0020 0020     		movs	r0, #0
 239 0022 70BD     		pop	{r4, r5, r6, pc}
 240              		.cfi_endproc
 241              	.LFE173:
 243              		.section	.text.MMC_Write_IT,"ax",%progbits
 244              		.align	1
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-sp-d16
 250              	MMC_Write_IT:
 251              	.LFB174:
2459:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
2460:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** /**
2461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @brief  Wrap up writing in non-blocking mode.
2462:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @param  hmmc pointer to a MMC_HandleTypeDef structure that contains
2463:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   *              the configuration information.
2464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   * @retval HAL status
2465:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   */
2466:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** static HAL_StatusTypeDef MMC_Write_IT(MMC_HandleTypeDef *hmmc)
2467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** {
 252              		.loc 1 2467 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              	.LVL27:
 257 0000 70B5     		push	{r4, r5, r6, lr}
 258              	.LCFI6:
 259              		.cfi_def_cfa_offset 16
 260              		.cfi_offset 4, -16
 261              		.cfi_offset 5, -12
 262              		.cfi_offset 6, -8
 263              		.cfi_offset 14, -4
 264 0002 0546     		mov	r5, r0
 265              	.LVL28:
2468:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t count = 0;
2469:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t* tmp;
2470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2471:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   tmp = (uint32_t*)hmmc->pTxBuffPtr;
 266              		.loc 1 2471 0
 267 0004 066A     		ldr	r6, [r0, #32]
 268              	.LVL29:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 49


2472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2473:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Write data to SDMMC Tx FIFO */
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   for(count = 0; count < 8; count++)
 269              		.loc 1 2474 0
 270 0006 0024     		movs	r4, #0
 271 0008 05E0     		b	.L21
 272              	.LVL30:
 273              	.L22:
2475:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
2476:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_WriteFIFO(hmmc->Instance, (tmp + count));
 274              		.loc 1 2476 0 discriminator 3
 275 000a 06EB8401 		add	r1, r6, r4, lsl #2
 276 000e 2868     		ldr	r0, [r5]
 277 0010 FFF7FEFF 		bl	SDMMC_WriteFIFO
 278              	.LVL31:
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 279              		.loc 1 2474 0 discriminator 3
 280 0014 0134     		adds	r4, r4, #1
 281              	.LVL32:
 282              	.L21:
2474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 283              		.loc 1 2474 0 is_stmt 0 discriminator 1
 284 0016 072C     		cmp	r4, #7
 285 0018 F7D9     		bls	.L22
2477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
2478:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2479:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->pTxBuffPtr += 8;
 286              		.loc 1 2479 0 is_stmt 1
 287 001a 2B6A     		ldr	r3, [r5, #32]
 288 001c 2033     		adds	r3, r3, #32
 289 001e 2B62     		str	r3, [r5, #32]
2480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
2481:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return HAL_OK;
2482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 290              		.loc 1 2482 0
 291 0020 0020     		movs	r0, #0
 292 0022 70BD     		pop	{r4, r5, r6, pc}
 293              		.cfi_endproc
 294              	.LFE174:
 296              		.section	.text.MMC_SendStatus,"ax",%progbits
 297              		.align	1
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu fpv5-sp-d16
 303              	MMC_SendStatus:
 304              	.LFB172:
2415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
 305              		.loc 1 2415 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              	.LVL33:
 310 0000 70B5     		push	{r4, r5, r6, lr}
 311              	.LCFI7:
 312              		.cfi_def_cfa_offset 16
 313              		.cfi_offset 4, -16
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 50


 314              		.cfi_offset 5, -12
 315              		.cfi_offset 6, -8
 316              		.cfi_offset 14, -4
 317              	.LVL34:
2418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 318              		.loc 1 2418 0
 319 0002 81B1     		cbz	r1, .L26
 320 0004 0D46     		mov	r5, r1
 321 0006 0446     		mov	r4, r0
2424:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_OK)
 322              		.loc 1 2424 0
 323 0008 C16C     		ldr	r1, [r0, #76]
 324              	.LVL35:
 325 000a 0904     		lsls	r1, r1, #16
 326 000c 0068     		ldr	r0, [r0]
 327              	.LVL36:
 328 000e FFF7FEFF 		bl	SDMMC_CmdSendStatus
 329              	.LVL37:
2425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 330              		.loc 1 2425 0
 331 0012 0646     		mov	r6, r0
 332 0014 08B1     		cbz	r0, .L28
 333              	.LVL38:
 334              	.L24:
2434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 335              		.loc 1 2434 0
 336 0016 3046     		mov	r0, r6
 337 0018 70BD     		pop	{r4, r5, r6, pc}
 338              	.LVL39:
 339              	.L28:
2431:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 340              		.loc 1 2431 0
 341 001a 0021     		movs	r1, #0
 342 001c 2068     		ldr	r0, [r4]
 343              	.LVL40:
 344 001e FFF7FEFF 		bl	SDMMC_GetResponse
 345              	.LVL41:
 346 0022 2860     		str	r0, [r5]
2433:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 347              		.loc 1 2433 0
 348 0024 F7E7     		b	.L24
 349              	.LVL42:
 350              	.L26:
2420:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 351              		.loc 1 2420 0
 352 0026 4FF00066 		mov	r6, #134217728
 353 002a F4E7     		b	.L24
 354              		.cfi_endproc
 355              	.LFE172:
 357              		.section	.text.HAL_MMC_MspInit,"ax",%progbits
 358              		.align	1
 359              		.weak	HAL_MMC_MspInit
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv5-sp-d16
 365              	HAL_MMC_MspInit:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 51


 366              	.LFB141:
 427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Prevent unused argument(s) compilation warning */
 367              		.loc 1 427 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372              	.LVL43:
 434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 373              		.loc 1 434 0
 374 0000 7047     		bx	lr
 375              		.cfi_endproc
 376              	.LFE141:
 378              		.section	.text.HAL_MMC_MspDeInit,"ax",%progbits
 379              		.align	1
 380              		.weak	HAL_MMC_MspDeInit
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu fpv5-sp-d16
 386              	HAL_MMC_MspDeInit:
 387              	.LFB142:
 442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Prevent unused argument(s) compilation warning */
 388              		.loc 1 442 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              	.LVL44:
 449:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 394              		.loc 1 449 0
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE142:
 399              		.section	.text.HAL_MMC_DeInit,"ax",%progbits
 400              		.align	1
 401              		.global	HAL_MMC_DeInit
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu fpv5-sp-d16
 407              	HAL_MMC_DeInit:
 408              	.LFB140:
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Check the MMC handle allocation */
 409              		.loc 1 396 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              	.LVL45:
 398:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 414              		.loc 1 398 0
 415 0000 70B1     		cbz	r0, .L33
 396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Check the MMC handle allocation */
 416              		.loc 1 396 0
 417 0002 10B5     		push	{r4, lr}
 418              	.LCFI8:
 419              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 52


 420              		.cfi_offset 4, -8
 421              		.cfi_offset 14, -4
 422 0004 0446     		mov	r4, r0
 406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 423              		.loc 1 406 0
 424 0006 0323     		movs	r3, #3
 425 0008 80F83430 		strb	r3, [r0, #52]
 409:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 426              		.loc 1 409 0
 427 000c FFF7FEFF 		bl	MMC_PowerOFF
 428              	.LVL46:
 412:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 429              		.loc 1 412 0
 430 0010 2046     		mov	r0, r4
 431 0012 FFF7FEFF 		bl	HAL_MMC_MspDeInit
 432              	.LVL47:
 414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->State = HAL_MMC_STATE_RESET;
 433              		.loc 1 414 0
 434 0016 0020     		movs	r0, #0
 435 0018 A063     		str	r0, [r4, #56]
 415:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 436              		.loc 1 415 0
 437 001a 84F83400 		strb	r0, [r4, #52]
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 438              		.loc 1 418 0
 439 001e 10BD     		pop	{r4, pc}
 440              	.LVL48:
 441              	.L33:
 442              	.LCFI9:
 443              		.cfi_def_cfa_offset 0
 444              		.cfi_restore 4
 445              		.cfi_restore 14
 400:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 446              		.loc 1 400 0
 447 0020 0120     		movs	r0, #1
 448              	.LVL49:
 418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 449              		.loc 1 418 0
 450 0022 7047     		bx	lr
 451              		.cfi_endproc
 452              	.LFE140:
 454              		.section	.text.HAL_MMC_ReadBlocks,"ax",%progbits
 455              		.align	1
 456              		.global	HAL_MMC_ReadBlocks
 457              		.syntax unified
 458              		.thumb
 459              		.thumb_func
 460              		.fpu fpv5-sp-d16
 462              	HAL_MMC_ReadBlocks:
 463              	.LFB143:
 483:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_DataInitTypeDef config;
 464              		.loc 1 483 0
 465              		.cfi_startproc
 466              		@ args = 4, pretend = 0, frame = 24
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              	.LVL50:
 469 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 53


 470              	.LCFI10:
 471              		.cfi_def_cfa_offset 28
 472              		.cfi_offset 4, -28
 473              		.cfi_offset 5, -24
 474              		.cfi_offset 6, -20
 475              		.cfi_offset 7, -16
 476              		.cfi_offset 8, -12
 477              		.cfi_offset 9, -8
 478              		.cfi_offset 14, -4
 479 0004 87B0     		sub	sp, sp, #28
 480              	.LCFI11:
 481              		.cfi_def_cfa_offset 56
 482 0006 0446     		mov	r4, r0
 483 0008 0D46     		mov	r5, r1
 484 000a 1646     		mov	r6, r2
 485 000c 1F46     		mov	r7, r3
 486              	.LVL51:
 486:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t count = 0, *tempbuff = (uint32_t *)pData;
 487              		.loc 1 486 0
 488 000e FFF7FEFF 		bl	HAL_GetTick
 489              	.LVL52:
 489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 490              		.loc 1 489 0
 491 0012 6DB1     		cbz	r5, .L61
 492 0014 8046     		mov	r8, r0
 495:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 493              		.loc 1 495 0
 494 0016 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 495 001a DBB2     		uxtb	r3, r3
 496 001c 012B     		cmp	r3, #1
 497 001e 0DD0     		beq	.L62
 649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 498              		.loc 1 649 0
 499 0020 A36B     		ldr	r3, [r4, #56]
 500 0022 43F00053 		orr	r3, r3, #536870912
 501 0026 A363     		str	r3, [r4, #56]
 650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 502              		.loc 1 650 0
 503 0028 0120     		movs	r0, #1
 504              	.LVL53:
 505              	.L40:
 652:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 506              		.loc 1 652 0
 507 002a 07B0     		add	sp, sp, #28
 508              	.LCFI12:
 509              		.cfi_remember_state
 510              		.cfi_def_cfa_offset 28
 511              		@ sp needed
 512 002c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 513              	.LVL54:
 514              	.L61:
 515              	.LCFI13:
 516              		.cfi_restore_state
 491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 517              		.loc 1 491 0
 518 0030 A36B     		ldr	r3, [r4, #56]
 519 0032 43F00063 		orr	r3, r3, #134217728
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 54


 520 0036 A363     		str	r3, [r4, #56]
 492:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 521              		.loc 1 492 0
 522 0038 0120     		movs	r0, #1
 523              	.LVL55:
 524 003a F6E7     		b	.L40
 525              	.LVL56:
 526              	.L62:
 497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 527              		.loc 1 497 0
 528 003c 0023     		movs	r3, #0
 529 003e A363     		str	r3, [r4, #56]
 499:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 530              		.loc 1 499 0
 531 0040 F319     		adds	r3, r6, r7
 532 0042 A26D     		ldr	r2, [r4, #88]
 533 0044 9342     		cmp	r3, r2
 534 0046 1BD8     		bhi	.L63
 505:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 535              		.loc 1 505 0
 536 0048 0323     		movs	r3, #3
 537 004a 84F83430 		strb	r3, [r4, #52]
 508:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 538              		.loc 1 508 0
 539 004e 2368     		ldr	r3, [r4]
 540 0050 0022     		movs	r2, #0
 541 0052 DA62     		str	r2, [r3, #44]
 511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 542              		.loc 1 511 0
 543 0054 A36D     		ldr	r3, [r4, #88]
 544 0056 9342     		cmp	r3, r2
 545 0058 00DB     		blt	.L43
 513:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 546              		.loc 1 513 0
 547 005a 7602     		lsls	r6, r6, #9
 548              	.LVL57:
 549              	.L43:
 517:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 550              		.loc 1 517 0
 551 005c 4FF40071 		mov	r1, #512
 552 0060 2068     		ldr	r0, [r4]
 553              	.LVL58:
 554 0062 FFF7FEFF 		bl	SDMMC_CmdBlockLength
 555              	.LVL59:
 518:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 556              		.loc 1 518 0
 557 0066 0346     		mov	r3, r0
 558 0068 80B1     		cbz	r0, .L44
 521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 559              		.loc 1 521 0
 560 006a 2268     		ldr	r2, [r4]
 561 006c 40F2FF51 		movw	r1, #1535
 562 0070 9163     		str	r1, [r2, #56]
 522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 563              		.loc 1 522 0
 564 0072 A06B     		ldr	r0, [r4, #56]
 565              	.LVL60:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 55


 566 0074 1843     		orrs	r0, r0, r3
 567 0076 A063     		str	r0, [r4, #56]
 523:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 568              		.loc 1 523 0
 569 0078 0120     		movs	r0, #1
 570 007a 84F83400 		strb	r0, [r4, #52]
 524:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 571              		.loc 1 524 0
 572 007e D4E7     		b	.L40
 573              	.LVL61:
 574              	.L63:
 501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 575              		.loc 1 501 0
 576 0080 A36B     		ldr	r3, [r4, #56]
 577 0082 43F00073 		orr	r3, r3, #33554432
 578 0086 A363     		str	r3, [r4, #56]
 502:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 579              		.loc 1 502 0
 580 0088 0120     		movs	r0, #1
 581              	.LVL62:
 582 008a CEE7     		b	.L40
 583              	.LVL63:
 584              	.L44:
 528:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataLength    = NumberOfBlocks * BLOCKSIZE;
 585              		.loc 1 528 0
 586 008c 4FF0FF33 		mov	r3, #-1
 587 0090 0093     		str	r3, [sp]
 529:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataBlockSize = SDMMC_DATABLOCK_SIZE_512B;
 588              		.loc 1 529 0
 589 0092 7B02     		lsls	r3, r7, #9
 590 0094 0193     		str	r3, [sp, #4]
 530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferDir   = SDMMC_TRANSFER_DIR_TO_SDMMC;
 591              		.loc 1 530 0
 592 0096 9023     		movs	r3, #144
 593 0098 0293     		str	r3, [sp, #8]
 531:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferMode  = SDMMC_TRANSFER_MODE_BLOCK;
 594              		.loc 1 531 0
 595 009a 0223     		movs	r3, #2
 596 009c 0393     		str	r3, [sp, #12]
 532:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DPSM          = SDMMC_DPSM_ENABLE;
 597              		.loc 1 532 0
 598 009e 0023     		movs	r3, #0
 599 00a0 0493     		str	r3, [sp, #16]
 533:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_ConfigData(hmmc->Instance, &config);
 600              		.loc 1 533 0
 601 00a2 0123     		movs	r3, #1
 602 00a4 0593     		str	r3, [sp, #20]
 534:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 603              		.loc 1 534 0
 604 00a6 6946     		mov	r1, sp
 605 00a8 2068     		ldr	r0, [r4]
 606              	.LVL64:
 607 00aa FFF7FEFF 		bl	SDMMC_ConfigData
 608              	.LVL65:
 537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 609              		.loc 1 537 0
 610 00ae 012F     		cmp	r7, #1
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 56


 611 00b0 15D9     		bls	.L45
 539:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 612              		.loc 1 539 0
 613 00b2 0223     		movs	r3, #2
 614 00b4 2363     		str	r3, [r4, #48]
 542:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 615              		.loc 1 542 0
 616 00b6 3146     		mov	r1, r6
 617 00b8 2068     		ldr	r0, [r4]
 618 00ba FFF7FEFF 		bl	SDMMC_CmdReadMultiBlock
 619              	.LVL66:
 620 00be 8146     		mov	r9, r0
 621              	.LVL67:
 622              	.L46:
 551:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 623              		.loc 1 551 0
 624 00c0 B9F1000F 		cmp	r9, #0
 625 00c4 25D0     		beq	.L47
 554:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 626              		.loc 1 554 0
 627 00c6 2368     		ldr	r3, [r4]
 628 00c8 40F2FF52 		movw	r2, #1535
 629 00cc 9A63     		str	r2, [r3, #56]
 555:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 630              		.loc 1 555 0
 631 00ce A36B     		ldr	r3, [r4, #56]
 632 00d0 43EA0903 		orr	r3, r3, r9
 633 00d4 A363     		str	r3, [r4, #56]
 556:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 634              		.loc 1 556 0
 635 00d6 0120     		movs	r0, #1
 636              	.LVL68:
 637 00d8 84F83400 		strb	r0, [r4, #52]
 557:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 638              		.loc 1 557 0
 639 00dc A5E7     		b	.L40
 640              	.LVL69:
 641              	.L45:
 546:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 642              		.loc 1 546 0
 643 00de 0123     		movs	r3, #1
 644 00e0 2363     		str	r3, [r4, #48]
 549:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 645              		.loc 1 549 0
 646 00e2 3146     		mov	r1, r6
 647 00e4 2068     		ldr	r0, [r4]
 648 00e6 FFF7FEFF 		bl	SDMMC_CmdReadSingleBlock
 649              	.LVL70:
 650 00ea 8146     		mov	r9, r0
 651              	.LVL71:
 652 00ec E8E7     		b	.L46
 653              	.LVL72:
 654              	.L50:
 568:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         }
 655              		.loc 1 568 0 discriminator 3
 656 00ee 2068     		ldr	r0, [r4]
 657 00f0 FFF7FEFF 		bl	SDMMC_ReadFIFO
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 57


 658              	.LVL73:
 659 00f4 45F82600 		str	r0, [r5, r6, lsl #2]
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
 660              		.loc 1 566 0 discriminator 3
 661 00f8 0136     		adds	r6, r6, #1
 662              	.LVL74:
 663              	.L48:
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
 664              		.loc 1 566 0 is_stmt 0 discriminator 1
 665 00fa 072E     		cmp	r6, #7
 666 00fc F7D9     		bls	.L50
 570:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 667              		.loc 1 570 0 is_stmt 1
 668 00fe 2035     		adds	r5, r5, #32
 669              	.LVL75:
 670              	.L49:
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 671              		.loc 1 573 0
 672 0100 0E9B     		ldr	r3, [sp, #56]
 673 0102 8BB1     		cbz	r3, .L51
 573:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 674              		.loc 1 573 0 is_stmt 0 discriminator 1
 675 0104 FFF7FEFF 		bl	HAL_GetTick
 676              	.LVL76:
 677 0108 A0EB0800 		sub	r0, r0, r8
 678 010c 0E9B     		ldr	r3, [sp, #56]
 679 010e 9842     		cmp	r0, r3
 680 0110 0AD2     		bcs	.L51
 681              	.L47:
 561:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 682              		.loc 1 561 0 is_stmt 1
 683 0112 2068     		ldr	r0, [r4]
 684 0114 436B     		ldr	r3, [r0, #52]
 685 0116 13F4957F 		tst	r3, #298
 686 011a 12D1     		bne	.L64
 563:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 687              		.loc 1 563 0
 688 011c 436B     		ldr	r3, [r0, #52]
 689 011e 13F4004F 		tst	r3, #32768
 690 0122 EDD0     		beq	.L49
 566:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
 691              		.loc 1 566 0
 692 0124 4E46     		mov	r6, r9
 693 0126 E8E7     		b	.L48
 694              	.L51:
 576:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->ErrorCode |= HAL_MMC_ERROR_TIMEOUT;
 695              		.loc 1 576 0
 696 0128 2368     		ldr	r3, [r4]
 697 012a 40F2FF52 		movw	r2, #1535
 698 012e 9A63     		str	r2, [r3, #56]
 577:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->State= HAL_MMC_STATE_READY;
 699              		.loc 1 577 0
 700 0130 A36B     		ldr	r3, [r4, #56]
 701 0132 43F00043 		orr	r3, r3, #-2147483648
 702 0136 A363     		str	r3, [r4, #56]
 578:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         return HAL_TIMEOUT;
 703              		.loc 1 578 0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 58


 704 0138 0123     		movs	r3, #1
 705 013a 84F83430 		strb	r3, [r4, #52]
 579:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 706              		.loc 1 579 0
 707 013e 0320     		movs	r0, #3
 708 0140 73E7     		b	.L40
 709              	.L64:
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 710              		.loc 1 584 0
 711 0142 436B     		ldr	r3, [r0, #52]
 712 0144 13F4807F 		tst	r3, #256
 713 0148 01D0     		beq	.L53
 584:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 714              		.loc 1 584 0 is_stmt 0 discriminator 1
 715 014a 012F     		cmp	r7, #1
 716 014c 2AD8     		bhi	.L65
 717              	.LVL77:
 718              	.L53:
 599:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 719              		.loc 1 599 0 is_stmt 1
 720 014e 2368     		ldr	r3, [r4]
 721 0150 5A6B     		ldr	r2, [r3, #52]
 722 0152 12F0080F 		tst	r2, #8
 723 0156 34D1     		bne	.L66
 607:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 724              		.loc 1 607 0
 725 0158 5A6B     		ldr	r2, [r3, #52]
 726 015a 12F0020F 		tst	r2, #2
 727 015e 3BD1     		bne	.L67
 615:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 728              		.loc 1 615 0
 729 0160 5A6B     		ldr	r2, [r3, #52]
 730 0162 12F0200F 		tst	r2, #32
 731 0166 42D1     		bne	.L68
 732              	.L56:
 625:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 733              		.loc 1 625 0
 734 0168 2068     		ldr	r0, [r4]
 735 016a 436B     		ldr	r3, [r0, #52]
 736 016c 13F4001F 		tst	r3, #2097152
 737 0170 48D0     		beq	.L69
 627:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       tempbuff++;
 738              		.loc 1 627 0
 739 0172 FFF7FEFF 		bl	SDMMC_ReadFIFO
 740              	.LVL78:
 741 0176 45F8040B 		str	r0, [r5], #4
 742              	.LVL79:
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 743              		.loc 1 630 0
 744 017a 0E9B     		ldr	r3, [sp, #56]
 745 017c 33B1     		cbz	r3, .L57
 630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 746              		.loc 1 630 0 is_stmt 0 discriminator 1
 747 017e FFF7FEFF 		bl	HAL_GetTick
 748              	.LVL80:
 749 0182 A0EB0800 		sub	r0, r0, r8
 750 0186 0E9B     		ldr	r3, [sp, #56]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 59


 751 0188 9842     		cmp	r0, r3
 752 018a EDD3     		bcc	.L56
 753              	.L57:
 633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->ErrorCode |= HAL_MMC_ERROR_TIMEOUT;
 754              		.loc 1 633 0 is_stmt 1
 755 018c 2368     		ldr	r3, [r4]
 756 018e 40F2FF52 		movw	r2, #1535
 757 0192 9A63     		str	r2, [r3, #56]
 634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->State= HAL_MMC_STATE_READY;
 758              		.loc 1 634 0
 759 0194 A36B     		ldr	r3, [r4, #56]
 760 0196 43F00043 		orr	r3, r3, #-2147483648
 761 019a A363     		str	r3, [r4, #56]
 635:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         return HAL_ERROR;
 762              		.loc 1 635 0
 763 019c 0120     		movs	r0, #1
 764 019e 84F83400 		strb	r0, [r4, #52]
 636:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 765              		.loc 1 636 0
 766 01a2 42E7     		b	.L40
 767              	.LVL81:
 768              	.L65:
 587:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(errorstate != HAL_MMC_ERROR_NONE)
 769              		.loc 1 587 0
 770 01a4 FFF7FEFF 		bl	SDMMC_CmdStopTransfer
 771              	.LVL82:
 588:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 772              		.loc 1 588 0
 773 01a8 0028     		cmp	r0, #0
 774 01aa D0D0     		beq	.L53
 591:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->ErrorCode |= errorstate;
 775              		.loc 1 591 0
 776 01ac 2368     		ldr	r3, [r4]
 777 01ae 40F2FF51 		movw	r1, #1535
 778 01b2 9963     		str	r1, [r3, #56]
 592:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->State = HAL_MMC_STATE_READY;
 779              		.loc 1 592 0
 780 01b4 A36B     		ldr	r3, [r4, #56]
 781 01b6 0343     		orrs	r3, r3, r0
 782 01b8 A363     		str	r3, [r4, #56]
 593:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         return HAL_ERROR;
 783              		.loc 1 593 0
 784 01ba 0120     		movs	r0, #1
 785              	.LVL83:
 786 01bc 84F83400 		strb	r0, [r4, #52]
 594:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 787              		.loc 1 594 0
 788 01c0 33E7     		b	.L40
 789              	.L66:
 602:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_DATA_TIMEOUT;
 790              		.loc 1 602 0
 791 01c2 40F2FF52 		movw	r2, #1535
 792 01c6 9A63     		str	r2, [r3, #56]
 603:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 793              		.loc 1 603 0
 794 01c8 A36B     		ldr	r3, [r4, #56]
 795 01ca 43F00803 		orr	r3, r3, #8
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 60


 796 01ce A363     		str	r3, [r4, #56]
 604:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 797              		.loc 1 604 0
 798 01d0 0120     		movs	r0, #1
 799 01d2 84F83400 		strb	r0, [r4, #52]
 605:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 800              		.loc 1 605 0
 801 01d6 28E7     		b	.L40
 802              	.L67:
 610:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_DATA_CRC_FAIL;
 803              		.loc 1 610 0
 804 01d8 40F2FF52 		movw	r2, #1535
 805 01dc 9A63     		str	r2, [r3, #56]
 611:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 806              		.loc 1 611 0
 807 01de A36B     		ldr	r3, [r4, #56]
 808 01e0 43F00203 		orr	r3, r3, #2
 809 01e4 A363     		str	r3, [r4, #56]
 612:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 810              		.loc 1 612 0
 811 01e6 0120     		movs	r0, #1
 812 01e8 84F83400 		strb	r0, [r4, #52]
 613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 813              		.loc 1 613 0
 814 01ec 1DE7     		b	.L40
 815              	.L68:
 618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_RX_OVERRUN;
 816              		.loc 1 618 0
 817 01ee 40F2FF52 		movw	r2, #1535
 818 01f2 9A63     		str	r2, [r3, #56]
 619:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 819              		.loc 1 619 0
 820 01f4 A36B     		ldr	r3, [r4, #56]
 821 01f6 43F02003 		orr	r3, r3, #32
 822 01fa A363     		str	r3, [r4, #56]
 620:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 823              		.loc 1 620 0
 824 01fc 0120     		movs	r0, #1
 825 01fe 84F83400 		strb	r0, [r4, #52]
 621:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 826              		.loc 1 621 0
 827 0202 12E7     		b	.L40
 828              	.L69:
 641:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 829              		.loc 1 641 0
 830 0204 40F2FF53 		movw	r3, #1535
 831 0208 8363     		str	r3, [r0, #56]
 643:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 832              		.loc 1 643 0
 833 020a 0123     		movs	r3, #1
 834 020c 84F83430 		strb	r3, [r4, #52]
 645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 835              		.loc 1 645 0
 836 0210 0020     		movs	r0, #0
 837 0212 0AE7     		b	.L40
 838              		.cfi_endproc
 839              	.LFE143:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 61


 841              		.section	.text.HAL_MMC_WriteBlocks,"ax",%progbits
 842              		.align	1
 843              		.global	HAL_MMC_WriteBlocks
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 847              		.fpu fpv5-sp-d16
 849              	HAL_MMC_WriteBlocks:
 850              	.LFB144:
 667:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_DataInitTypeDef config;
 851              		.loc 1 667 0
 852              		.cfi_startproc
 853              		@ args = 4, pretend = 0, frame = 24
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              	.LVL84:
 856 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 857              	.LCFI14:
 858              		.cfi_def_cfa_offset 28
 859              		.cfi_offset 4, -28
 860              		.cfi_offset 5, -24
 861              		.cfi_offset 6, -20
 862              		.cfi_offset 7, -16
 863              		.cfi_offset 8, -12
 864              		.cfi_offset 9, -8
 865              		.cfi_offset 14, -4
 866 0004 87B0     		sub	sp, sp, #28
 867              	.LCFI15:
 868              		.cfi_def_cfa_offset 56
 869 0006 0446     		mov	r4, r0
 870 0008 0D46     		mov	r5, r1
 871 000a 1646     		mov	r6, r2
 872 000c 1F46     		mov	r7, r3
 873              	.LVL85:
 670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t count = 0;
 874              		.loc 1 670 0
 875 000e FFF7FEFF 		bl	HAL_GetTick
 876              	.LVL86:
 674:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 877              		.loc 1 674 0
 878 0012 6DB1     		cbz	r5, .L92
 879 0014 8046     		mov	r8, r0
 680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 880              		.loc 1 680 0
 881 0016 94F83430 		ldrb	r3, [r4, #52]	@ zero_extendqisi2
 882 001a DBB2     		uxtb	r3, r3
 883 001c 012B     		cmp	r3, #1
 884 001e 0DD0     		beq	.L93
 818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 885              		.loc 1 818 0
 886 0020 A36B     		ldr	r3, [r4, #56]
 887 0022 43F00053 		orr	r3, r3, #536870912
 888 0026 A363     		str	r3, [r4, #56]
 819:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 889              		.loc 1 819 0
 890 0028 0120     		movs	r0, #1
 891              	.LVL87:
 892              	.L72:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 62


 821:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 893              		.loc 1 821 0
 894 002a 07B0     		add	sp, sp, #28
 895              	.LCFI16:
 896              		.cfi_remember_state
 897              		.cfi_def_cfa_offset 28
 898              		@ sp needed
 899 002c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 900              	.LVL88:
 901              	.L92:
 902              	.LCFI17:
 903              		.cfi_restore_state
 676:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 904              		.loc 1 676 0
 905 0030 A36B     		ldr	r3, [r4, #56]
 906 0032 43F00063 		orr	r3, r3, #134217728
 907 0036 A363     		str	r3, [r4, #56]
 677:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 908              		.loc 1 677 0
 909 0038 0120     		movs	r0, #1
 910              	.LVL89:
 911 003a F6E7     		b	.L72
 912              	.LVL90:
 913              	.L93:
 682:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 914              		.loc 1 682 0
 915 003c 0023     		movs	r3, #0
 916 003e A363     		str	r3, [r4, #56]
 684:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 917              		.loc 1 684 0
 918 0040 F319     		adds	r3, r6, r7
 919 0042 A26D     		ldr	r2, [r4, #88]
 920 0044 9342     		cmp	r3, r2
 921 0046 28D8     		bhi	.L94
 690:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 922              		.loc 1 690 0
 923 0048 0323     		movs	r3, #3
 924 004a 84F83430 		strb	r3, [r4, #52]
 693:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****      
 925              		.loc 1 693 0
 926 004e 2368     		ldr	r3, [r4]
 927 0050 0022     		movs	r2, #0
 928 0052 DA62     		str	r2, [r3, #44]
 696:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 929              		.loc 1 696 0
 930 0054 A36D     		ldr	r3, [r4, #88]
 931 0056 9342     		cmp	r3, r2
 932 0058 00DB     		blt	.L75
 698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 933              		.loc 1 698 0
 934 005a 7602     		lsls	r6, r6, #9
 935              	.LVL91:
 936              	.L75:
 702:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 937              		.loc 1 702 0
 938 005c 4FF40071 		mov	r1, #512
 939 0060 2068     		ldr	r0, [r4]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 63


 940              	.LVL92:
 941 0062 FFF7FEFF 		bl	SDMMC_CmdBlockLength
 942              	.LVL93:
 703:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 943              		.loc 1 703 0
 944 0066 0346     		mov	r3, r0
 945 0068 E8B9     		cbnz	r0, .L95
 713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 946              		.loc 1 713 0
 947 006a 012F     		cmp	r7, #1
 948 006c 26D9     		bls	.L77
 715:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 949              		.loc 1 715 0
 950 006e 2023     		movs	r3, #32
 951 0070 2363     		str	r3, [r4, #48]
 718:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 952              		.loc 1 718 0
 953 0072 3146     		mov	r1, r6
 954 0074 2068     		ldr	r0, [r4]
 955              	.LVL94:
 956 0076 FFF7FEFF 		bl	SDMMC_CmdWriteMultiBlock
 957              	.LVL95:
 958 007a 8146     		mov	r9, r0
 959              	.LVL96:
 960              	.L78:
 727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 961              		.loc 1 727 0
 962 007c B9F1000F 		cmp	r9, #0
 963 0080 24D0     		beq	.L79
 730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 964              		.loc 1 730 0
 965 0082 2368     		ldr	r3, [r4]
 966 0084 40F2FF52 		movw	r2, #1535
 967 0088 9A63     		str	r2, [r3, #56]
 731:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 968              		.loc 1 731 0
 969 008a A36B     		ldr	r3, [r4, #56]
 970 008c 43EA0903 		orr	r3, r3, r9
 971 0090 A363     		str	r3, [r4, #56]
 732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 972              		.loc 1 732 0
 973 0092 0120     		movs	r0, #1
 974              	.LVL97:
 975 0094 84F83400 		strb	r0, [r4, #52]
 733:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 976              		.loc 1 733 0
 977 0098 C7E7     		b	.L72
 978              	.LVL98:
 979              	.L94:
 686:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 980              		.loc 1 686 0
 981 009a A36B     		ldr	r3, [r4, #56]
 982 009c 43F00073 		orr	r3, r3, #33554432
 983 00a0 A363     		str	r3, [r4, #56]
 687:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 984              		.loc 1 687 0
 985 00a2 0120     		movs	r0, #1
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 64


 986              	.LVL99:
 987 00a4 C1E7     		b	.L72
 988              	.LVL100:
 989              	.L95:
 706:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 990              		.loc 1 706 0
 991 00a6 2268     		ldr	r2, [r4]
 992 00a8 40F2FF51 		movw	r1, #1535
 993 00ac 9163     		str	r1, [r2, #56]
 707:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 994              		.loc 1 707 0
 995 00ae A06B     		ldr	r0, [r4, #56]
 996              	.LVL101:
 997 00b0 1843     		orrs	r0, r0, r3
 998 00b2 A063     		str	r0, [r4, #56]
 708:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 999              		.loc 1 708 0
 1000 00b4 0120     		movs	r0, #1
 1001 00b6 84F83400 		strb	r0, [r4, #52]
 709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1002              		.loc 1 709 0
 1003 00ba B6E7     		b	.L72
 1004              	.LVL102:
 1005              	.L77:
 722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 1006              		.loc 1 722 0
 1007 00bc 1023     		movs	r3, #16
 1008 00be 2363     		str	r3, [r4, #48]
 725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1009              		.loc 1 725 0
 1010 00c0 3146     		mov	r1, r6
 1011 00c2 2068     		ldr	r0, [r4]
 1012              	.LVL103:
 1013 00c4 FFF7FEFF 		bl	SDMMC_CmdWriteSingleBlock
 1014              	.LVL104:
 1015 00c8 8146     		mov	r9, r0
 1016              	.LVL105:
 1017 00ca D7E7     		b	.L78
 1018              	.L79:
 737:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataLength    = NumberOfBlocks * BLOCKSIZE;
 1019              		.loc 1 737 0
 1020 00cc 4FF0FF33 		mov	r3, #-1
 1021 00d0 0093     		str	r3, [sp]
 738:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataBlockSize = SDMMC_DATABLOCK_SIZE_512B;
 1022              		.loc 1 738 0
 1023 00d2 7B02     		lsls	r3, r7, #9
 1024 00d4 0193     		str	r3, [sp, #4]
 739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferDir   = SDMMC_TRANSFER_DIR_TO_CARD;
 1025              		.loc 1 739 0
 1026 00d6 9023     		movs	r3, #144
 1027 00d8 0293     		str	r3, [sp, #8]
 740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferMode  = SDMMC_TRANSFER_MODE_BLOCK;
 1028              		.loc 1 740 0
 1029 00da 0023     		movs	r3, #0
 1030 00dc 0393     		str	r3, [sp, #12]
 741:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DPSM          = SDMMC_DPSM_ENABLE;
 1031              		.loc 1 741 0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 65


 1032 00de 0493     		str	r3, [sp, #16]
 742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_ConfigData(hmmc->Instance, &config);
 1033              		.loc 1 742 0
 1034 00e0 0123     		movs	r3, #1
 1035 00e2 0593     		str	r3, [sp, #20]
 743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1036              		.loc 1 743 0
 1037 00e4 6946     		mov	r1, sp
 1038 00e6 2068     		ldr	r0, [r4]
 1039              	.LVL106:
 1040 00e8 FFF7FEFF 		bl	SDMMC_ConfigData
 1041              	.LVL107:
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1042              		.loc 1 746 0
 1043 00ec 11E0     		b	.L80
 1044              	.LVL108:
 1045              	.L83:
 753:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         }
 1046              		.loc 1 753 0 discriminator 3
 1047 00ee 05EB8601 		add	r1, r5, r6, lsl #2
 1048 00f2 2068     		ldr	r0, [r4]
 1049 00f4 FFF7FEFF 		bl	SDMMC_WriteFIFO
 1050              	.LVL109:
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
 1051              		.loc 1 751 0 discriminator 3
 1052 00f8 0136     		adds	r6, r6, #1
 1053              	.LVL110:
 1054              	.L81:
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
 1055              		.loc 1 751 0 is_stmt 0 discriminator 1
 1056 00fa 072E     		cmp	r6, #7
 1057 00fc F7D9     		bls	.L83
 755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 1058              		.loc 1 755 0 is_stmt 1
 1059 00fe 2035     		adds	r5, r5, #32
 1060              	.LVL111:
 1061              	.L82:
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 1062              		.loc 1 758 0
 1063 0100 0E9B     		ldr	r3, [sp, #56]
 1064 0102 8BB1     		cbz	r3, .L84
 758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 1065              		.loc 1 758 0 is_stmt 0 discriminator 1
 1066 0104 FFF7FEFF 		bl	HAL_GetTick
 1067              	.LVL112:
 1068 0108 A0EB0800 		sub	r0, r0, r8
 1069 010c 0E9B     		ldr	r3, [sp, #56]
 1070 010e 9842     		cmp	r0, r3
 1071 0110 0AD2     		bcs	.L84
 1072              	.L80:
 746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1073              		.loc 1 746 0 is_stmt 1
 1074 0112 2068     		ldr	r0, [r4]
 1075 0114 436B     		ldr	r3, [r0, #52]
 1076 0116 13F48D7F 		tst	r3, #282
 1077 011a 12D1     		bne	.L96
 748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 66


 1078              		.loc 1 748 0
 1079 011c 436B     		ldr	r3, [r0, #52]
 1080 011e 13F4804F 		tst	r3, #16384
 1081 0122 EDD0     		beq	.L82
 751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
 1082              		.loc 1 751 0
 1083 0124 4E46     		mov	r6, r9
 1084 0126 E8E7     		b	.L81
 1085              	.L84:
 761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->ErrorCode |= errorstate;
 1086              		.loc 1 761 0
 1087 0128 2368     		ldr	r3, [r4]
 1088 012a 40F2FF52 		movw	r2, #1535
 1089 012e 9A63     		str	r2, [r3, #56]
 762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->State = HAL_MMC_STATE_READY;
 1090              		.loc 1 762 0
 1091 0130 A36B     		ldr	r3, [r4, #56]
 1092 0132 43EA0903 		orr	r3, r3, r9
 1093 0136 A363     		str	r3, [r4, #56]
 763:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         return HAL_TIMEOUT;
 1094              		.loc 1 763 0
 1095 0138 0123     		movs	r3, #1
 1096 013a 84F83430 		strb	r3, [r4, #52]
 764:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 1097              		.loc 1 764 0
 1098 013e 0320     		movs	r0, #3
 1099 0140 73E7     		b	.L72
 1100              	.L96:
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     { 
 1101              		.loc 1 769 0
 1102 0142 436B     		ldr	r3, [r0, #52]
 1103 0144 13F4807F 		tst	r3, #256
 1104 0148 01D0     		beq	.L86
 769:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     { 
 1105              		.loc 1 769 0 is_stmt 0 discriminator 1
 1106 014a 012F     		cmp	r7, #1
 1107 014c 17D8     		bhi	.L97
 1108              	.LVL113:
 1109              	.L86:
 784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1110              		.loc 1 784 0 is_stmt 1
 1111 014e 2368     		ldr	r3, [r4]
 1112 0150 5A6B     		ldr	r2, [r3, #52]
 1113 0152 12F0080F 		tst	r2, #8
 1114 0156 21D1     		bne	.L98
 792:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1115              		.loc 1 792 0
 1116 0158 5A6B     		ldr	r2, [r3, #52]
 1117 015a 12F0020F 		tst	r2, #2
 1118 015e 28D1     		bne	.L99
 800:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1119              		.loc 1 800 0
 1120 0160 5A6B     		ldr	r2, [r3, #52]
 1121 0162 12F0100F 		tst	r2, #16
 1122 0166 2FD0     		beq	.L89
 803:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_TX_UNDERRUN;
 1123              		.loc 1 803 0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 67


 1124 0168 40F2FF52 		movw	r2, #1535
 1125 016c 9A63     		str	r2, [r3, #56]
 804:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 1126              		.loc 1 804 0
 1127 016e A36B     		ldr	r3, [r4, #56]
 1128 0170 43F01003 		orr	r3, r3, #16
 1129 0174 A363     		str	r3, [r4, #56]
 805:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1130              		.loc 1 805 0
 1131 0176 0120     		movs	r0, #1
 1132 0178 84F83400 		strb	r0, [r4, #52]
 806:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1133              		.loc 1 806 0
 1134 017c 55E7     		b	.L72
 1135              	.LVL114:
 1136              	.L97:
 772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(errorstate != HAL_MMC_ERROR_NONE)
 1137              		.loc 1 772 0
 1138 017e FFF7FEFF 		bl	SDMMC_CmdStopTransfer
 1139              	.LVL115:
 773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 1140              		.loc 1 773 0
 1141 0182 0028     		cmp	r0, #0
 1142 0184 E3D0     		beq	.L86
 776:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->ErrorCode |= errorstate;
 1143              		.loc 1 776 0
 1144 0186 2368     		ldr	r3, [r4]
 1145 0188 40F2FF51 		movw	r1, #1535
 1146 018c 9963     		str	r1, [r3, #56]
 777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->State = HAL_MMC_STATE_READY;
 1147              		.loc 1 777 0
 1148 018e A36B     		ldr	r3, [r4, #56]
 1149 0190 0343     		orrs	r3, r3, r0
 1150 0192 A363     		str	r3, [r4, #56]
 778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         return HAL_ERROR;
 1151              		.loc 1 778 0
 1152 0194 0120     		movs	r0, #1
 1153              	.LVL116:
 1154 0196 84F83400 		strb	r0, [r4, #52]
 779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 1155              		.loc 1 779 0
 1156 019a 46E7     		b	.L72
 1157              	.L98:
 787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_DATA_TIMEOUT;
 1158              		.loc 1 787 0
 1159 019c 40F2FF52 		movw	r2, #1535
 1160 01a0 9A63     		str	r2, [r3, #56]
 788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 1161              		.loc 1 788 0
 1162 01a2 A36B     		ldr	r3, [r4, #56]
 1163 01a4 43F00803 		orr	r3, r3, #8
 1164 01a8 A363     		str	r3, [r4, #56]
 789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1165              		.loc 1 789 0
 1166 01aa 0120     		movs	r0, #1
 1167 01ac 84F83400 		strb	r0, [r4, #52]
 790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 68


 1168              		.loc 1 790 0
 1169 01b0 3BE7     		b	.L72
 1170              	.L99:
 795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_DATA_CRC_FAIL;      
 1171              		.loc 1 795 0
 1172 01b2 40F2FF52 		movw	r2, #1535
 1173 01b6 9A63     		str	r2, [r3, #56]
 796:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 1174              		.loc 1 796 0
 1175 01b8 A36B     		ldr	r3, [r4, #56]
 1176 01ba 43F00203 		orr	r3, r3, #2
 1177 01be A363     		str	r3, [r4, #56]
 797:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1178              		.loc 1 797 0
 1179 01c0 0120     		movs	r0, #1
 1180 01c2 84F83400 		strb	r0, [r4, #52]
 798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1181              		.loc 1 798 0
 1182 01c6 30E7     		b	.L72
 1183              	.L89:
 810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1184              		.loc 1 810 0
 1185 01c8 40F2FF52 		movw	r2, #1535
 1186 01cc 9A63     		str	r2, [r3, #56]
 812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1187              		.loc 1 812 0
 1188 01ce 0123     		movs	r3, #1
 1189 01d0 84F83430 		strb	r3, [r4, #52]
 814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 1190              		.loc 1 814 0
 1191 01d4 0020     		movs	r0, #0
 1192 01d6 28E7     		b	.L72
 1193              		.cfi_endproc
 1194              	.LFE144:
 1196              		.section	.text.HAL_MMC_ReadBlocks_IT,"ax",%progbits
 1197              		.align	1
 1198              		.global	HAL_MMC_ReadBlocks_IT
 1199              		.syntax unified
 1200              		.thumb
 1201              		.thumb_func
 1202              		.fpu fpv5-sp-d16
 1204              	HAL_MMC_ReadBlocks_IT:
 1205              	.LFB145:
 837:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_DataInitTypeDef config;
 1206              		.loc 1 837 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 24
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210              	.LVL117:
 1211 0000 70B5     		push	{r4, r5, r6, lr}
 1212              	.LCFI18:
 1213              		.cfi_def_cfa_offset 16
 1214              		.cfi_offset 4, -16
 1215              		.cfi_offset 5, -12
 1216              		.cfi_offset 6, -8
 1217              		.cfi_offset 14, -4
 1218 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 69


 1219              	.LCFI19:
 1220              		.cfi_def_cfa_offset 40
 1221 0004 0446     		mov	r4, r0
 1222              	.LVL118:
 841:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 1223              		.loc 1 841 0
 1224 0006 0029     		cmp	r1, #0
 1225 0008 4BD0     		beq	.L111
 1226 000a 1546     		mov	r5, r2
 1227 000c 1E46     		mov	r6, r3
 1228 000e 0A46     		mov	r2, r1
 1229              	.LVL119:
 847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 1230              		.loc 1 847 0
 1231 0010 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1232              	.LVL120:
 1233 0014 DBB2     		uxtb	r3, r3
 1234 0016 012B     		cmp	r3, #1
 1235 0018 61D1     		bne	.L108
 849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1236              		.loc 1 849 0
 1237 001a 0023     		movs	r3, #0
 1238 001c 8363     		str	r3, [r0, #56]
 851:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1239              		.loc 1 851 0
 1240 001e AB19     		adds	r3, r5, r6
 1241 0020 816D     		ldr	r1, [r0, #88]
 1242              	.LVL121:
 1243 0022 8B42     		cmp	r3, r1
 1244 0024 43D8     		bhi	.L112
 857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1245              		.loc 1 857 0
 1246 0026 0323     		movs	r3, #3
 1247 0028 80F83430 		strb	r3, [r0, #52]
 860:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1248              		.loc 1 860 0
 1249 002c 0368     		ldr	r3, [r0]
 1250 002e 0021     		movs	r1, #0
 1251 0030 D962     		str	r1, [r3, #44]
 862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->RxXferSize = BLOCKSIZE * NumberOfBlocks;
 1252              		.loc 1 862 0
 1253 0032 8262     		str	r2, [r0, #40]
 863:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1254              		.loc 1 863 0
 1255 0034 7202     		lsls	r2, r6, #9
 1256              	.LVL122:
 1257 0036 C262     		str	r2, [r0, #44]
 865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1258              		.loc 1 865 0
 1259 0038 0168     		ldr	r1, [r0]
 1260 003a C86B     		ldr	r0, [r1, #60]
 1261              	.LVL123:
 1262 003c 48F22A13 		movw	r3, #33066
 1263 0040 0343     		orrs	r3, r3, r0
 1264 0042 CB63     		str	r3, [r1, #60]
 1265              	.LVL124:
 868:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 70


 1266              		.loc 1 868 0
 1267 0044 A36D     		ldr	r3, [r4, #88]
 1268 0046 002B     		cmp	r3, #0
 1269 0048 00DB     		blt	.L104
 870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1270              		.loc 1 870 0
 1271 004a 6D02     		lsls	r5, r5, #9
 1272              	.LVL125:
 1273              	.L104:
 874:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataLength    = BLOCKSIZE * NumberOfBlocks;
 1274              		.loc 1 874 0
 1275 004c 4FF0FF33 		mov	r3, #-1
 1276 0050 0093     		str	r3, [sp]
 875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataBlockSize = SDMMC_DATABLOCK_SIZE_512B;
 1277              		.loc 1 875 0
 1278 0052 0192     		str	r2, [sp, #4]
 876:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferDir   = SDMMC_TRANSFER_DIR_TO_SDMMC;
 1279              		.loc 1 876 0
 1280 0054 9023     		movs	r3, #144
 1281 0056 0293     		str	r3, [sp, #8]
 877:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferMode  = SDMMC_TRANSFER_MODE_BLOCK;
 1282              		.loc 1 877 0
 1283 0058 0223     		movs	r3, #2
 1284 005a 0393     		str	r3, [sp, #12]
 878:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DPSM          = SDMMC_DPSM_ENABLE;
 1285              		.loc 1 878 0
 1286 005c 0023     		movs	r3, #0
 1287 005e 0493     		str	r3, [sp, #16]
 879:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_ConfigData(hmmc->Instance, &config);
 1288              		.loc 1 879 0
 1289 0060 0123     		movs	r3, #1
 1290 0062 0593     		str	r3, [sp, #20]
 880:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1291              		.loc 1 880 0
 1292 0064 6946     		mov	r1, sp
 1293 0066 2068     		ldr	r0, [r4]
 1294 0068 FFF7FEFF 		bl	SDMMC_ConfigData
 1295              	.LVL126:
 883:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 1296              		.loc 1 883 0
 1297 006c 4FF40071 		mov	r1, #512
 1298 0070 2068     		ldr	r0, [r4]
 1299 0072 FFF7FEFF 		bl	SDMMC_CmdBlockLength
 1300              	.LVL127:
 884:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1301              		.loc 1 884 0
 1302 0076 0346     		mov	r3, r0
 1303 0078 F8B9     		cbnz	r0, .L113
 894:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1304              		.loc 1 894 0
 1305 007a 012E     		cmp	r6, #1
 1306 007c 28D9     		bls	.L106
 896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 1307              		.loc 1 896 0
 1308 007e 0A23     		movs	r3, #10
 1309 0080 2363     		str	r3, [r4, #48]
 899:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 71


 1310              		.loc 1 899 0
 1311 0082 2946     		mov	r1, r5
 1312 0084 2068     		ldr	r0, [r4]
 1313              	.LVL128:
 1314 0086 FFF7FEFF 		bl	SDMMC_CmdReadMultiBlock
 1315              	.LVL129:
 1316              	.L107:
 908:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1317              		.loc 1 908 0
 1318 008a 58B3     		cbz	r0, .L109
 911:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 1319              		.loc 1 911 0
 1320 008c 2368     		ldr	r3, [r4]
 1321 008e 40F2FF52 		movw	r2, #1535
 1322 0092 9A63     		str	r2, [r3, #56]
 912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 1323              		.loc 1 912 0
 1324 0094 A36B     		ldr	r3, [r4, #56]
 1325 0096 1843     		orrs	r0, r0, r3
 1326              	.LVL130:
 1327 0098 A063     		str	r0, [r4, #56]
 913:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1328              		.loc 1 913 0
 1329 009a 0120     		movs	r0, #1
 1330 009c 84F83400 		strb	r0, [r4, #52]
 914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1331              		.loc 1 914 0
 1332 00a0 1EE0     		b	.L102
 1333              	.LVL131:
 1334              	.L111:
 843:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 1335              		.loc 1 843 0
 1336 00a2 836B     		ldr	r3, [r0, #56]
 1337              	.LVL132:
 1338 00a4 43F00063 		orr	r3, r3, #134217728
 1339 00a8 8363     		str	r3, [r0, #56]
 844:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 1340              		.loc 1 844 0
 1341 00aa 0120     		movs	r0, #1
 1342              	.LVL133:
 1343 00ac 18E0     		b	.L102
 1344              	.LVL134:
 1345              	.L112:
 853:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1346              		.loc 1 853 0
 1347 00ae 836B     		ldr	r3, [r0, #56]
 1348 00b0 43F00073 		orr	r3, r3, #33554432
 1349 00b4 8363     		str	r3, [r0, #56]
 854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1350              		.loc 1 854 0
 1351 00b6 0120     		movs	r0, #1
 1352              	.LVL135:
 1353 00b8 12E0     		b	.L102
 1354              	.LVL136:
 1355              	.L113:
 887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 1356              		.loc 1 887 0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 72


 1357 00ba 2268     		ldr	r2, [r4]
 1358 00bc 40F2FF51 		movw	r1, #1535
 1359 00c0 9163     		str	r1, [r2, #56]
 888:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 1360              		.loc 1 888 0
 1361 00c2 A06B     		ldr	r0, [r4, #56]
 1362              	.LVL137:
 1363 00c4 1843     		orrs	r0, r0, r3
 1364 00c6 A063     		str	r0, [r4, #56]
 889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1365              		.loc 1 889 0
 1366 00c8 0120     		movs	r0, #1
 1367 00ca 84F83400 		strb	r0, [r4, #52]
 890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1368              		.loc 1 890 0
 1369 00ce 07E0     		b	.L102
 1370              	.LVL138:
 1371              	.L106:
 903:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 1372              		.loc 1 903 0
 1373 00d0 0923     		movs	r3, #9
 1374 00d2 2363     		str	r3, [r4, #48]
 906:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1375              		.loc 1 906 0
 1376 00d4 2946     		mov	r1, r5
 1377 00d6 2068     		ldr	r0, [r4]
 1378              	.LVL139:
 1379 00d8 FFF7FEFF 		bl	SDMMC_CmdReadSingleBlock
 1380              	.LVL140:
 1381 00dc D5E7     		b	.L107
 1382              	.LVL141:
 1383              	.L108:
 921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 1384              		.loc 1 921 0
 1385 00de 0220     		movs	r0, #2
 1386              	.LVL142:
 1387              	.L102:
 923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 1388              		.loc 1 923 0
 1389 00e0 06B0     		add	sp, sp, #24
 1390              	.LCFI20:
 1391              		.cfi_remember_state
 1392              		.cfi_def_cfa_offset 16
 1393              		@ sp needed
 1394 00e2 70BD     		pop	{r4, r5, r6, pc}
 1395              	.LVL143:
 1396              	.L109:
 1397              	.LCFI21:
 1398              		.cfi_restore_state
 917:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 1399              		.loc 1 917 0
 1400 00e4 0020     		movs	r0, #0
 1401              	.LVL144:
 1402 00e6 FBE7     		b	.L102
 1403              		.cfi_endproc
 1404              	.LFE145:
 1406              		.section	.text.HAL_MMC_WriteBlocks_IT,"ax",%progbits
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 73


 1407              		.align	1
 1408              		.global	HAL_MMC_WriteBlocks_IT
 1409              		.syntax unified
 1410              		.thumb
 1411              		.thumb_func
 1412              		.fpu fpv5-sp-d16
 1414              	HAL_MMC_WriteBlocks_IT:
 1415              	.LFB146:
 939:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_DataInitTypeDef config;
 1416              		.loc 1 939 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 24
 1419              		@ frame_needed = 0, uses_anonymous_args = 0
 1420              	.LVL145:
 1421 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1422              	.LCFI22:
 1423              		.cfi_def_cfa_offset 20
 1424              		.cfi_offset 4, -20
 1425              		.cfi_offset 5, -16
 1426              		.cfi_offset 6, -12
 1427              		.cfi_offset 7, -8
 1428              		.cfi_offset 14, -4
 1429 0002 87B0     		sub	sp, sp, #28
 1430              	.LCFI23:
 1431              		.cfi_def_cfa_offset 48
 1432 0004 0446     		mov	r4, r0
 1433              	.LVL146:
 943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 1434              		.loc 1 943 0
 1435 0006 0029     		cmp	r1, #0
 1436 0008 3BD0     		beq	.L125
 1437 000a 1546     		mov	r5, r2
 1438 000c 1E46     		mov	r6, r3
 1439 000e 0A46     		mov	r2, r1
 1440              	.LVL147:
 949:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 1441              		.loc 1 949 0
 1442 0010 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1443              	.LVL148:
 1444 0014 DBB2     		uxtb	r3, r3
 1445 0016 012B     		cmp	r3, #1
 1446 0018 62D1     		bne	.L123
 951:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1447              		.loc 1 951 0
 1448 001a 0023     		movs	r3, #0
 1449 001c 8363     		str	r3, [r0, #56]
 953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1450              		.loc 1 953 0
 1451 001e AB19     		adds	r3, r5, r6
 1452 0020 816D     		ldr	r1, [r0, #88]
 1453              	.LVL149:
 1454 0022 8B42     		cmp	r3, r1
 1455 0024 33D8     		bhi	.L126
 959:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1456              		.loc 1 959 0
 1457 0026 0323     		movs	r3, #3
 1458 0028 80F83430 		strb	r3, [r0, #52]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 74


 962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1459              		.loc 1 962 0
 1460 002c 0368     		ldr	r3, [r0]
 1461 002e 0021     		movs	r1, #0
 1462 0030 D962     		str	r1, [r3, #44]
 964:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->TxXferSize = BLOCKSIZE * NumberOfBlocks;
 1463              		.loc 1 964 0
 1464 0032 0262     		str	r2, [r0, #32]
 965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1465              		.loc 1 965 0
 1466 0034 7702     		lsls	r7, r6, #9
 1467 0036 4762     		str	r7, [r0, #36]
 968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1468              		.loc 1 968 0
 1469 0038 0268     		ldr	r2, [r0]
 1470              	.LVL150:
 1471 003a D16B     		ldr	r1, [r2, #60]
 1472 003c 44F21A13 		movw	r3, #16666
 1473 0040 0B43     		orrs	r3, r3, r1
 1474 0042 D363     		str	r3, [r2, #60]
 1475              	.LVL151:
 971:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1476              		.loc 1 971 0
 1477 0044 836D     		ldr	r3, [r0, #88]
 1478 0046 002B     		cmp	r3, #0
 1479 0048 00DB     		blt	.L118
 973:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1480              		.loc 1 973 0
 1481 004a 6D02     		lsls	r5, r5, #9
 1482              	.LVL152:
 1483              	.L118:
 977:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 1484              		.loc 1 977 0
 1485 004c 4FF40071 		mov	r1, #512
 1486 0050 2068     		ldr	r0, [r4]
 1487              	.LVL153:
 1488 0052 FFF7FEFF 		bl	SDMMC_CmdBlockLength
 1489              	.LVL154:
 978:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1490              		.loc 1 978 0
 1491 0056 0346     		mov	r3, r0
 1492 0058 F8B9     		cbnz	r0, .L127
 988:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1493              		.loc 1 988 0
 1494 005a 012E     		cmp	r6, #1
 1495 005c 28D9     		bls	.L120
 990:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 1496              		.loc 1 990 0
 1497 005e 2823     		movs	r3, #40
 1498 0060 2363     		str	r3, [r4, #48]
 993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1499              		.loc 1 993 0
 1500 0062 2946     		mov	r1, r5
 1501 0064 2068     		ldr	r0, [r4]
 1502              	.LVL155:
 1503 0066 FFF7FEFF 		bl	SDMMC_CmdWriteMultiBlock
 1504              	.LVL156:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 75


 1505              	.L121:
1002:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1506              		.loc 1 1002 0
 1507 006a 40B3     		cbz	r0, .L122
1005:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 1508              		.loc 1 1005 0
 1509 006c 2368     		ldr	r3, [r4]
 1510 006e 40F2FF52 		movw	r2, #1535
 1511 0072 9A63     		str	r2, [r3, #56]
1006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 1512              		.loc 1 1006 0
 1513 0074 A36B     		ldr	r3, [r4, #56]
 1514 0076 1843     		orrs	r0, r0, r3
 1515              	.LVL157:
 1516 0078 A063     		str	r0, [r4, #56]
1007:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1517              		.loc 1 1007 0
 1518 007a 0120     		movs	r0, #1
 1519 007c 84F83400 		strb	r0, [r4, #52]
1008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1520              		.loc 1 1008 0
 1521 0080 2FE0     		b	.L116
 1522              	.LVL158:
 1523              	.L125:
 945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 1524              		.loc 1 945 0
 1525 0082 836B     		ldr	r3, [r0, #56]
 1526              	.LVL159:
 1527 0084 43F00063 		orr	r3, r3, #134217728
 1528 0088 8363     		str	r3, [r0, #56]
 946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 1529              		.loc 1 946 0
 1530 008a 0120     		movs	r0, #1
 1531              	.LVL160:
 1532 008c 29E0     		b	.L116
 1533              	.LVL161:
 1534              	.L126:
 955:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1535              		.loc 1 955 0
 1536 008e 836B     		ldr	r3, [r0, #56]
 1537 0090 43F00073 		orr	r3, r3, #33554432
 1538 0094 8363     		str	r3, [r0, #56]
 956:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1539              		.loc 1 956 0
 1540 0096 0120     		movs	r0, #1
 1541              	.LVL162:
 1542 0098 23E0     		b	.L116
 1543              	.LVL163:
 1544              	.L127:
 981:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 1545              		.loc 1 981 0
 1546 009a 2268     		ldr	r2, [r4]
 1547 009c 40F2FF51 		movw	r1, #1535
 1548 00a0 9163     		str	r1, [r2, #56]
 982:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 1549              		.loc 1 982 0
 1550 00a2 A06B     		ldr	r0, [r4, #56]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 76


 1551              	.LVL164:
 1552 00a4 1843     		orrs	r0, r0, r3
 1553 00a6 A063     		str	r0, [r4, #56]
 983:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1554              		.loc 1 983 0
 1555 00a8 0120     		movs	r0, #1
 1556 00aa 84F83400 		strb	r0, [r4, #52]
 984:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1557              		.loc 1 984 0
 1558 00ae 18E0     		b	.L116
 1559              	.LVL165:
 1560              	.L120:
 997:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 1561              		.loc 1 997 0
 1562 00b0 1823     		movs	r3, #24
 1563 00b2 2363     		str	r3, [r4, #48]
1000:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1564              		.loc 1 1000 0
 1565 00b4 2946     		mov	r1, r5
 1566 00b6 2068     		ldr	r0, [r4]
 1567              	.LVL166:
 1568 00b8 FFF7FEFF 		bl	SDMMC_CmdWriteSingleBlock
 1569              	.LVL167:
 1570 00bc D5E7     		b	.L121
 1571              	.L122:
1012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataLength    = BLOCKSIZE * NumberOfBlocks;
 1572              		.loc 1 1012 0
 1573 00be 4FF0FF33 		mov	r3, #-1
 1574 00c2 0093     		str	r3, [sp]
1013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataBlockSize = SDMMC_DATABLOCK_SIZE_512B;
 1575              		.loc 1 1013 0
 1576 00c4 0197     		str	r7, [sp, #4]
1014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferDir   = SDMMC_TRANSFER_DIR_TO_CARD;
 1577              		.loc 1 1014 0
 1578 00c6 9023     		movs	r3, #144
 1579 00c8 0293     		str	r3, [sp, #8]
1015:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferMode  = SDMMC_TRANSFER_MODE_BLOCK;
 1580              		.loc 1 1015 0
 1581 00ca 0025     		movs	r5, #0
 1582              	.LVL168:
 1583 00cc 0395     		str	r5, [sp, #12]
1016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DPSM          = SDMMC_DPSM_ENABLE;
 1584              		.loc 1 1016 0
 1585 00ce 0495     		str	r5, [sp, #16]
1017:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_ConfigData(hmmc->Instance, &config);
 1586              		.loc 1 1017 0
 1587 00d0 0123     		movs	r3, #1
 1588 00d2 0593     		str	r3, [sp, #20]
1018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1589              		.loc 1 1018 0
 1590 00d4 6946     		mov	r1, sp
 1591 00d6 2068     		ldr	r0, [r4]
 1592              	.LVL169:
 1593 00d8 FFF7FEFF 		bl	SDMMC_ConfigData
 1594              	.LVL170:
1020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 1595              		.loc 1 1020 0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 77


 1596 00dc 2846     		mov	r0, r5
 1597 00de 00E0     		b	.L116
 1598              	.LVL171:
 1599              	.L123:
1024:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 1600              		.loc 1 1024 0
 1601 00e0 0220     		movs	r0, #2
 1602              	.LVL172:
 1603              	.L116:
1026:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 1604              		.loc 1 1026 0
 1605 00e2 07B0     		add	sp, sp, #28
 1606              	.LCFI24:
 1607              		.cfi_def_cfa_offset 20
 1608              		@ sp needed
 1609 00e4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1610              		.cfi_endproc
 1611              	.LFE146:
 1613              		.section	.text.HAL_MMC_ReadBlocks_DMA,"ax",%progbits
 1614              		.align	1
 1615              		.global	HAL_MMC_ReadBlocks_DMA
 1616              		.syntax unified
 1617              		.thumb
 1618              		.thumb_func
 1619              		.fpu fpv5-sp-d16
 1621              	HAL_MMC_ReadBlocks_DMA:
 1622              	.LFB147:
1042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_DataInitTypeDef config;
 1623              		.loc 1 1042 0
 1624              		.cfi_startproc
 1625              		@ args = 0, pretend = 0, frame = 24
 1626              		@ frame_needed = 0, uses_anonymous_args = 0
 1627              	.LVL173:
 1628 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1629              	.LCFI25:
 1630              		.cfi_def_cfa_offset 20
 1631              		.cfi_offset 4, -20
 1632              		.cfi_offset 5, -16
 1633              		.cfi_offset 6, -12
 1634              		.cfi_offset 7, -8
 1635              		.cfi_offset 14, -4
 1636 0002 87B0     		sub	sp, sp, #28
 1637              	.LCFI26:
 1638              		.cfi_def_cfa_offset 48
 1639 0004 0446     		mov	r4, r0
 1640              	.LVL174:
1046:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 1641              		.loc 1 1046 0
 1642 0006 99B1     		cbz	r1, .L139
 1643 0008 1546     		mov	r5, r2
 1644 000a 1E46     		mov	r6, r3
 1645 000c 0A46     		mov	r2, r1
 1646              	.LVL175:
1052:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 1647              		.loc 1 1052 0
 1648 000e 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1649              	.LVL176:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 78


 1650 0012 DBB2     		uxtb	r3, r3
 1651 0014 012B     		cmp	r3, #1
 1652 0016 71D1     		bne	.L136
1054:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1653              		.loc 1 1054 0
 1654 0018 0023     		movs	r3, #0
 1655 001a 8363     		str	r3, [r0, #56]
1056:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1656              		.loc 1 1056 0
 1657 001c AB19     		adds	r3, r5, r6
 1658 001e 816D     		ldr	r1, [r0, #88]
 1659              	.LVL177:
 1660 0020 8B42     		cmp	r3, r1
 1661 0022 0BD9     		bls	.L131
1058:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1662              		.loc 1 1058 0
 1663 0024 836B     		ldr	r3, [r0, #56]
 1664 0026 43F00073 		orr	r3, r3, #33554432
 1665 002a 8363     		str	r3, [r0, #56]
1059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1666              		.loc 1 1059 0
 1667 002c 0120     		movs	r0, #1
 1668              	.LVL178:
 1669 002e 66E0     		b	.L130
 1670              	.LVL179:
 1671              	.L139:
1048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 1672              		.loc 1 1048 0
 1673 0030 836B     		ldr	r3, [r0, #56]
 1674              	.LVL180:
 1675 0032 43F00063 		orr	r3, r3, #134217728
 1676 0036 8363     		str	r3, [r0, #56]
1049:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 1677              		.loc 1 1049 0
 1678 0038 0120     		movs	r0, #1
 1679              	.LVL181:
 1680 003a 60E0     		b	.L130
 1681              	.LVL182:
 1682              	.L131:
1062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1683              		.loc 1 1062 0
 1684 003c 0323     		movs	r3, #3
 1685 003e 80F83430 		strb	r3, [r0, #52]
1065:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1686              		.loc 1 1065 0
 1687 0042 0368     		ldr	r3, [r0]
 1688 0044 0021     		movs	r1, #0
 1689 0046 D962     		str	r1, [r3, #44]
1067:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1690              		.loc 1 1067 0
 1691 0048 0068     		ldr	r0, [r0]
 1692              	.LVL183:
 1693 004a C36B     		ldr	r3, [r0, #60]
 1694 004c 43F49573 		orr	r3, r3, #298
 1695 0050 C363     		str	r3, [r0, #60]
1070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1696              		.loc 1 1070 0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 79


 1697 0052 E36B     		ldr	r3, [r4, #60]
 1698 0054 2C48     		ldr	r0, .L141
 1699 0056 D863     		str	r0, [r3, #60]
1073:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1700              		.loc 1 1073 0
 1701 0058 E36B     		ldr	r3, [r4, #60]
 1702 005a 2C48     		ldr	r0, .L141+4
 1703 005c D864     		str	r0, [r3, #76]
1076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1704              		.loc 1 1076 0
 1705 005e E36B     		ldr	r3, [r4, #60]
 1706 0060 1965     		str	r1, [r3, #80]
1079:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1707              		.loc 1 1079 0
 1708 0062 2168     		ldr	r1, [r4]
 1709 0064 7702     		lsls	r7, r6, #9
 1710 0066 BB08     		lsrs	r3, r7, #2
 1711 0068 8031     		adds	r1, r1, #128
 1712 006a E06B     		ldr	r0, [r4, #60]
 1713 006c FFF7FEFF 		bl	HAL_DMA_Start_IT
 1714              	.LVL184:
1082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1715              		.loc 1 1082 0
 1716 0070 2268     		ldr	r2, [r4]
 1717 0072 D36A     		ldr	r3, [r2, #44]
 1718 0074 43F00803 		orr	r3, r3, #8
 1719 0078 D362     		str	r3, [r2, #44]
1085:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1720              		.loc 1 1085 0
 1721 007a A36D     		ldr	r3, [r4, #88]
 1722 007c 002B     		cmp	r3, #0
 1723 007e 00DB     		blt	.L132
1087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1724              		.loc 1 1087 0
 1725 0080 6D02     		lsls	r5, r5, #9
 1726              	.LVL185:
 1727              	.L132:
1091:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataLength    = BLOCKSIZE * NumberOfBlocks;
 1728              		.loc 1 1091 0
 1729 0082 4FF0FF33 		mov	r3, #-1
 1730 0086 0093     		str	r3, [sp]
1092:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataBlockSize = SDMMC_DATABLOCK_SIZE_512B;
 1731              		.loc 1 1092 0
 1732 0088 0197     		str	r7, [sp, #4]
1093:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferDir   = SDMMC_TRANSFER_DIR_TO_SDMMC;
 1733              		.loc 1 1093 0
 1734 008a 9023     		movs	r3, #144
 1735 008c 0293     		str	r3, [sp, #8]
1094:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferMode  = SDMMC_TRANSFER_MODE_BLOCK;
 1736              		.loc 1 1094 0
 1737 008e 0223     		movs	r3, #2
 1738 0090 0393     		str	r3, [sp, #12]
1095:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DPSM          = SDMMC_DPSM_ENABLE;
 1739              		.loc 1 1095 0
 1740 0092 0023     		movs	r3, #0
 1741 0094 0493     		str	r3, [sp, #16]
1096:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_ConfigData(hmmc->Instance, &config);
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 80


 1742              		.loc 1 1096 0
 1743 0096 0123     		movs	r3, #1
 1744 0098 0593     		str	r3, [sp, #20]
1097:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 1745              		.loc 1 1097 0
 1746 009a 6946     		mov	r1, sp
 1747 009c 2068     		ldr	r0, [r4]
 1748 009e FFF7FEFF 		bl	SDMMC_ConfigData
 1749              	.LVL186:
1100:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 1750              		.loc 1 1100 0
 1751 00a2 4FF40071 		mov	r1, #512
 1752 00a6 2068     		ldr	r0, [r4]
 1753 00a8 FFF7FEFF 		bl	SDMMC_CmdBlockLength
 1754              	.LVL187:
1101:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1755              		.loc 1 1101 0
 1756 00ac 0346     		mov	r3, r0
 1757 00ae 98B9     		cbnz	r0, .L140
1111:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1758              		.loc 1 1111 0
 1759 00b0 012E     		cmp	r6, #1
 1760 00b2 1CD9     		bls	.L134
1113:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 1761              		.loc 1 1113 0
 1762 00b4 8223     		movs	r3, #130
 1763 00b6 2363     		str	r3, [r4, #48]
1116:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1764              		.loc 1 1116 0
 1765 00b8 2946     		mov	r1, r5
 1766 00ba 2068     		ldr	r0, [r4]
 1767              	.LVL188:
 1768 00bc FFF7FEFF 		bl	SDMMC_CmdReadMultiBlock
 1769              	.LVL189:
 1770              	.L135:
1125:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1771              		.loc 1 1125 0
 1772 00c0 F8B1     		cbz	r0, .L137
1128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 1773              		.loc 1 1128 0
 1774 00c2 2368     		ldr	r3, [r4]
 1775 00c4 40F2FF52 		movw	r2, #1535
 1776 00c8 9A63     		str	r2, [r3, #56]
1129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 1777              		.loc 1 1129 0
 1778 00ca A36B     		ldr	r3, [r4, #56]
 1779 00cc 1843     		orrs	r0, r0, r3
 1780              	.LVL190:
 1781 00ce A063     		str	r0, [r4, #56]
1130:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1782              		.loc 1 1130 0
 1783 00d0 0120     		movs	r0, #1
 1784 00d2 84F83400 		strb	r0, [r4, #52]
1131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1785              		.loc 1 1131 0
 1786 00d6 12E0     		b	.L130
 1787              	.LVL191:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 81


 1788              	.L140:
1104:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 1789              		.loc 1 1104 0
 1790 00d8 2268     		ldr	r2, [r4]
 1791 00da 40F2FF51 		movw	r1, #1535
 1792 00de 9163     		str	r1, [r2, #56]
1105:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 1793              		.loc 1 1105 0
 1794 00e0 A06B     		ldr	r0, [r4, #56]
 1795              	.LVL192:
 1796 00e2 1843     		orrs	r0, r0, r3
 1797 00e4 A063     		str	r0, [r4, #56]
1106:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1798              		.loc 1 1106 0
 1799 00e6 0120     		movs	r0, #1
 1800 00e8 84F83400 		strb	r0, [r4, #52]
1107:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1801              		.loc 1 1107 0
 1802 00ec 07E0     		b	.L130
 1803              	.LVL193:
 1804              	.L134:
1120:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 1805              		.loc 1 1120 0
 1806 00ee 8123     		movs	r3, #129
 1807 00f0 2363     		str	r3, [r4, #48]
1123:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1808              		.loc 1 1123 0
 1809 00f2 2946     		mov	r1, r5
 1810 00f4 2068     		ldr	r0, [r4]
 1811              	.LVL194:
 1812 00f6 FFF7FEFF 		bl	SDMMC_CmdReadSingleBlock
 1813              	.LVL195:
 1814 00fa E1E7     		b	.L135
 1815              	.LVL196:
 1816              	.L136:
1138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 1817              		.loc 1 1138 0
 1818 00fc 0220     		movs	r0, #2
 1819              	.LVL197:
 1820              	.L130:
1140:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 1821              		.loc 1 1140 0
 1822 00fe 07B0     		add	sp, sp, #28
 1823              	.LCFI27:
 1824              		.cfi_remember_state
 1825              		.cfi_def_cfa_offset 20
 1826              		@ sp needed
 1827 0100 F0BD     		pop	{r4, r5, r6, r7, pc}
 1828              	.LVL198:
 1829              	.L137:
 1830              	.LCFI28:
 1831              		.cfi_restore_state
1134:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 1832              		.loc 1 1134 0
 1833 0102 0020     		movs	r0, #0
 1834              	.LVL199:
 1835 0104 FBE7     		b	.L130
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 82


 1836              	.L142:
 1837 0106 00BF     		.align	2
 1838              	.L141:
 1839 0108 00000000 		.word	MMC_DMAReceiveCplt
 1840 010c 00000000 		.word	MMC_DMAError
 1841              		.cfi_endproc
 1842              	.LFE147:
 1844              		.section	.text.HAL_MMC_WriteBlocks_DMA,"ax",%progbits
 1845              		.align	1
 1846              		.global	HAL_MMC_WriteBlocks_DMA
 1847              		.syntax unified
 1848              		.thumb
 1849              		.thumb_func
 1850              		.fpu fpv5-sp-d16
 1852              	HAL_MMC_WriteBlocks_DMA:
 1853              	.LFB148:
1156:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_DataInitTypeDef config;
 1854              		.loc 1 1156 0
 1855              		.cfi_startproc
 1856              		@ args = 0, pretend = 0, frame = 24
 1857              		@ frame_needed = 0, uses_anonymous_args = 0
 1858              	.LVL200:
 1859 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1860              	.LCFI29:
 1861              		.cfi_def_cfa_offset 20
 1862              		.cfi_offset 4, -20
 1863              		.cfi_offset 5, -16
 1864              		.cfi_offset 6, -12
 1865              		.cfi_offset 7, -8
 1866              		.cfi_offset 14, -4
 1867 0002 87B0     		sub	sp, sp, #28
 1868              	.LCFI30:
 1869              		.cfi_def_cfa_offset 48
 1870 0004 0446     		mov	r4, r0
 1871              	.LVL201:
1160:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 1872              		.loc 1 1160 0
 1873 0006 0029     		cmp	r1, #0
 1874 0008 3FD0     		beq	.L154
 1875 000a 1546     		mov	r5, r2
 1876 000c 1E46     		mov	r6, r3
 1877 000e 0F46     		mov	r7, r1
1166:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 1878              		.loc 1 1166 0
 1879 0010 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 1880              	.LVL202:
 1881 0014 DBB2     		uxtb	r3, r3
 1882 0016 012B     		cmp	r3, #1
 1883 0018 73D1     		bne	.L152
1168:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1884              		.loc 1 1168 0
 1885 001a 0023     		movs	r3, #0
 1886 001c 8363     		str	r3, [r0, #56]
1170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1887              		.loc 1 1170 0
 1888 001e 9319     		adds	r3, r2, r6
 1889 0020 826D     		ldr	r2, [r0, #88]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 83


 1890              	.LVL203:
 1891 0022 9342     		cmp	r3, r2
 1892 0024 37D8     		bhi	.L155
1176:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1893              		.loc 1 1176 0
 1894 0026 0323     		movs	r3, #3
 1895 0028 80F83430 		strb	r3, [r0, #52]
1179:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1896              		.loc 1 1179 0
 1897 002c 0368     		ldr	r3, [r0]
 1898 002e 0022     		movs	r2, #0
 1899 0030 DA62     		str	r2, [r3, #44]
1182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1900              		.loc 1 1182 0
 1901 0032 0168     		ldr	r1, [r0]
 1902              	.LVL204:
 1903 0034 CB6B     		ldr	r3, [r1, #60]
 1904 0036 43F01A03 		orr	r3, r3, #26
 1905 003a CB63     		str	r3, [r1, #60]
1185:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1906              		.loc 1 1185 0
 1907 003c 036C     		ldr	r3, [r0, #64]
 1908 003e 3249     		ldr	r1, .L157
 1909 0040 D963     		str	r1, [r3, #60]
1188:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1910              		.loc 1 1188 0
 1911 0042 036C     		ldr	r3, [r0, #64]
 1912 0044 3149     		ldr	r1, .L157+4
 1913 0046 D964     		str	r1, [r3, #76]
1191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 1914              		.loc 1 1191 0
 1915 0048 036C     		ldr	r3, [r0, #64]
 1916 004a 1A65     		str	r2, [r3, #80]
1194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1917              		.loc 1 1194 0
 1918 004c 836D     		ldr	r3, [r0, #88]
 1919 004e 9342     		cmp	r3, r2
 1920 0050 00DB     		blt	.L147
1196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1921              		.loc 1 1196 0
 1922 0052 6D02     		lsls	r5, r5, #9
 1923              	.LVL205:
 1924              	.L147:
1200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 1925              		.loc 1 1200 0
 1926 0054 4FF40071 		mov	r1, #512
 1927 0058 2068     		ldr	r0, [r4]
 1928              	.LVL206:
 1929 005a FFF7FEFF 		bl	SDMMC_CmdBlockLength
 1930              	.LVL207:
1201:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1931              		.loc 1 1201 0
 1932 005e 0346     		mov	r3, r0
 1933 0060 F8B9     		cbnz	r0, .L156
1211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1934              		.loc 1 1211 0
 1935 0062 012E     		cmp	r6, #1
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 84


 1936 0064 28D9     		bls	.L149
1213:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 1937              		.loc 1 1213 0
 1938 0066 A023     		movs	r3, #160
 1939 0068 2363     		str	r3, [r4, #48]
1216:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1940              		.loc 1 1216 0
 1941 006a 2946     		mov	r1, r5
 1942 006c 2068     		ldr	r0, [r4]
 1943              	.LVL208:
 1944 006e FFF7FEFF 		bl	SDMMC_CmdWriteMultiBlock
 1945              	.LVL209:
 1946              	.L150:
1225:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 1947              		.loc 1 1225 0
 1948 0072 40B3     		cbz	r0, .L151
1228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 1949              		.loc 1 1228 0
 1950 0074 2368     		ldr	r3, [r4]
 1951 0076 40F2FF52 		movw	r2, #1535
 1952 007a 9A63     		str	r2, [r3, #56]
1229:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 1953              		.loc 1 1229 0
 1954 007c A36B     		ldr	r3, [r4, #56]
 1955 007e 1843     		orrs	r0, r0, r3
 1956              	.LVL210:
 1957 0080 A063     		str	r0, [r4, #56]
1230:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1958              		.loc 1 1230 0
 1959 0082 0120     		movs	r0, #1
 1960 0084 84F83400 		strb	r0, [r4, #52]
1231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1961              		.loc 1 1231 0
 1962 0088 3CE0     		b	.L145
 1963              	.LVL211:
 1964              	.L154:
1162:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 1965              		.loc 1 1162 0
 1966 008a 836B     		ldr	r3, [r0, #56]
 1967              	.LVL212:
 1968 008c 43F00063 		orr	r3, r3, #134217728
 1969 0090 8363     		str	r3, [r0, #56]
1163:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 1970              		.loc 1 1163 0
 1971 0092 0120     		movs	r0, #1
 1972              	.LVL213:
 1973 0094 36E0     		b	.L145
 1974              	.LVL214:
 1975              	.L155:
1172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1976              		.loc 1 1172 0
 1977 0096 836B     		ldr	r3, [r0, #56]
 1978 0098 43F00073 		orr	r3, r3, #33554432
 1979 009c 8363     		str	r3, [r0, #56]
1173:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1980              		.loc 1 1173 0
 1981 009e 0120     		movs	r0, #1
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 85


 1982              	.LVL215:
 1983 00a0 30E0     		b	.L145
 1984              	.LVL216:
 1985              	.L156:
1204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 1986              		.loc 1 1204 0
 1987 00a2 2268     		ldr	r2, [r4]
 1988 00a4 40F2FF51 		movw	r1, #1535
 1989 00a8 9163     		str	r1, [r2, #56]
1205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 1990              		.loc 1 1205 0
 1991 00aa A06B     		ldr	r0, [r4, #56]
 1992              	.LVL217:
 1993 00ac 1843     		orrs	r0, r0, r3
 1994 00ae A063     		str	r0, [r4, #56]
1206:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 1995              		.loc 1 1206 0
 1996 00b0 0120     		movs	r0, #1
 1997 00b2 84F83400 		strb	r0, [r4, #52]
1207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 1998              		.loc 1 1207 0
 1999 00b6 25E0     		b	.L145
 2000              	.LVL218:
 2001              	.L149:
1220:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 2002              		.loc 1 1220 0
 2003 00b8 9023     		movs	r3, #144
 2004 00ba 2363     		str	r3, [r4, #48]
1223:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 2005              		.loc 1 1223 0
 2006 00bc 2946     		mov	r1, r5
 2007 00be 2068     		ldr	r0, [r4]
 2008              	.LVL219:
 2009 00c0 FFF7FEFF 		bl	SDMMC_CmdWriteSingleBlock
 2010              	.LVL220:
 2011 00c4 D5E7     		b	.L150
 2012              	.L151:
1235:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 2013              		.loc 1 1235 0
 2014 00c6 2268     		ldr	r2, [r4]
 2015 00c8 D36A     		ldr	r3, [r2, #44]
 2016 00ca 43F00803 		orr	r3, r3, #8
 2017 00ce D362     		str	r3, [r2, #44]
1238:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 2018              		.loc 1 1238 0
 2019 00d0 2268     		ldr	r2, [r4]
 2020 00d2 7602     		lsls	r6, r6, #9
 2021              	.LVL221:
 2022 00d4 B308     		lsrs	r3, r6, #2
 2023 00d6 8032     		adds	r2, r2, #128
 2024 00d8 3946     		mov	r1, r7
 2025 00da 206C     		ldr	r0, [r4, #64]
 2026              	.LVL222:
 2027 00dc FFF7FEFF 		bl	HAL_DMA_Start_IT
 2028              	.LVL223:
1241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataLength    = BLOCKSIZE * NumberOfBlocks;
 2029              		.loc 1 1241 0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 86


 2030 00e0 4FF0FF33 		mov	r3, #-1
 2031 00e4 0093     		str	r3, [sp]
1242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DataBlockSize = SDMMC_DATABLOCK_SIZE_512B;
 2032              		.loc 1 1242 0
 2033 00e6 0196     		str	r6, [sp, #4]
1243:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferDir   = SDMMC_TRANSFER_DIR_TO_CARD;
 2034              		.loc 1 1243 0
 2035 00e8 9023     		movs	r3, #144
 2036 00ea 0293     		str	r3, [sp, #8]
1244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.TransferMode  = SDMMC_TRANSFER_MODE_BLOCK;
 2037              		.loc 1 1244 0
 2038 00ec 0025     		movs	r5, #0
 2039              	.LVL224:
 2040 00ee 0395     		str	r5, [sp, #12]
1245:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     config.DPSM          = SDMMC_DPSM_ENABLE;
 2041              		.loc 1 1245 0
 2042 00f0 0495     		str	r5, [sp, #16]
1246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_ConfigData(hmmc->Instance, &config);
 2043              		.loc 1 1246 0
 2044 00f2 0123     		movs	r3, #1
 2045 00f4 0593     		str	r3, [sp, #20]
1247:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 2046              		.loc 1 1247 0
 2047 00f6 6946     		mov	r1, sp
 2048 00f8 2068     		ldr	r0, [r4]
 2049 00fa FFF7FEFF 		bl	SDMMC_ConfigData
 2050              	.LVL225:
1249:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 2051              		.loc 1 1249 0
 2052 00fe 2846     		mov	r0, r5
 2053 0100 00E0     		b	.L145
 2054              	.LVL226:
 2055              	.L152:
1253:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 2056              		.loc 1 1253 0
 2057 0102 0220     		movs	r0, #2
 2058              	.LVL227:
 2059              	.L145:
1255:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2060              		.loc 1 1255 0
 2061 0104 07B0     		add	sp, sp, #28
 2062              	.LCFI31:
 2063              		.cfi_def_cfa_offset 20
 2064              		@ sp needed
 2065 0106 F0BD     		pop	{r4, r5, r6, r7, pc}
 2066              	.LVL228:
 2067              	.L158:
 2068              		.align	2
 2069              	.L157:
 2070 0108 00000000 		.word	MMC_DMATransmitCplt
 2071 010c 00000000 		.word	MMC_DMAError
 2072              		.cfi_endproc
 2073              	.LFE148:
 2075              		.section	.text.HAL_MMC_Erase,"ax",%progbits
 2076              		.align	1
 2077              		.global	HAL_MMC_Erase
 2078              		.syntax unified
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 87


 2079              		.thumb
 2080              		.thumb_func
 2081              		.fpu fpv5-sp-d16
 2083              	HAL_MMC_Erase:
 2084              	.LFB149:
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
 2085              		.loc 1 1267 0
 2086              		.cfi_startproc
 2087              		@ args = 0, pretend = 0, frame = 0
 2088              		@ frame_needed = 0, uses_anonymous_args = 0
 2089              	.LVL229:
1270:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 2090              		.loc 1 1270 0
 2091 0000 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 2092 0004 DBB2     		uxtb	r3, r3
 2093 0006 012B     		cmp	r3, #1
 2094 0008 76D1     		bne	.L169
1267:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
 2095              		.loc 1 1267 0
 2096 000a 70B5     		push	{r4, r5, r6, lr}
 2097              	.LCFI32:
 2098              		.cfi_def_cfa_offset 16
 2099              		.cfi_offset 4, -16
 2100              		.cfi_offset 5, -12
 2101              		.cfi_offset 6, -8
 2102              		.cfi_offset 14, -4
 2103 000c 0446     		mov	r4, r0
 2104 000e 0E46     		mov	r6, r1
 2105 0010 1546     		mov	r5, r2
1272:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 2106              		.loc 1 1272 0
 2107 0012 0023     		movs	r3, #0
 2108 0014 8363     		str	r3, [r0, #56]
1274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 2109              		.loc 1 1274 0
 2110 0016 8A42     		cmp	r2, r1
 2111 0018 15D3     		bcc	.L174
1280:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 2112              		.loc 1 1280 0
 2113 001a 836D     		ldr	r3, [r0, #88]
 2114 001c 9342     		cmp	r3, r2
 2115 001e 18D3     		bcc	.L175
1286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 2116              		.loc 1 1286 0
 2117 0020 0323     		movs	r3, #3
 2118 0022 80F83430 		strb	r3, [r0, #52]
1289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 2119              		.loc 1 1289 0
 2120 0026 836C     		ldr	r3, [r0, #72]
 2121 0028 13F0200F 		tst	r3, #32
 2122 002c 17D1     		bne	.L163
1292:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_REQUEST_NOT_APPLICABLE;
 2123              		.loc 1 1292 0
 2124 002e 0368     		ldr	r3, [r0]
 2125 0030 40F2FF52 		movw	r2, #1535
 2126              	.LVL230:
 2127 0034 9A63     		str	r2, [r3, #56]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 88


1293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 2128              		.loc 1 1293 0
 2129 0036 836B     		ldr	r3, [r0, #56]
 2130 0038 43F08063 		orr	r3, r3, #67108864
 2131 003c 8363     		str	r3, [r0, #56]
1294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 2132              		.loc 1 1294 0
 2133 003e 0120     		movs	r0, #1
 2134              	.LVL231:
 2135 0040 84F83400 		strb	r0, [r4, #52]
1295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 2136              		.loc 1 1295 0
 2137 0044 04E0     		b	.L160
 2138              	.LVL232:
 2139              	.L174:
1276:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 2140              		.loc 1 1276 0
 2141 0046 836B     		ldr	r3, [r0, #56]
 2142 0048 43F00063 		orr	r3, r3, #134217728
 2143 004c 8363     		str	r3, [r0, #56]
1277:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 2144              		.loc 1 1277 0
 2145 004e 0120     		movs	r0, #1
 2146              	.LVL233:
 2147              	.L160:
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2148              		.loc 1 1355 0
 2149 0050 70BD     		pop	{r4, r5, r6, pc}
 2150              	.LVL234:
 2151              	.L175:
1282:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 2152              		.loc 1 1282 0
 2153 0052 836B     		ldr	r3, [r0, #56]
 2154 0054 43F00073 		orr	r3, r3, #33554432
 2155 0058 8363     		str	r3, [r0, #56]
1283:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 2156              		.loc 1 1283 0
 2157 005a 0120     		movs	r0, #1
 2158              	.LVL235:
 2159 005c F8E7     		b	.L160
 2160              	.LVL236:
 2161              	.L163:
1298:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 2162              		.loc 1 1298 0
 2163 005e 0021     		movs	r1, #0
 2164              	.LVL237:
 2165 0060 0068     		ldr	r0, [r0]
 2166              	.LVL238:
 2167 0062 FFF7FEFF 		bl	SDMMC_GetResponse
 2168              	.LVL239:
 2169 0066 10F0007F 		tst	r0, #33554432
 2170 006a 14D1     		bne	.L176
1308:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 2171              		.loc 1 1308 0
 2172 006c A36D     		ldr	r3, [r4, #88]
 2173 006e 002B     		cmp	r3, #0
 2174 0070 01DB     		blt	.L165
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 89


1310:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       BlockEndAdd   *= 512U;
 2175              		.loc 1 1310 0
 2176 0072 7602     		lsls	r6, r6, #9
 2177              	.LVL240:
1311:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 2178              		.loc 1 1311 0
 2179 0074 6D02     		lsls	r5, r5, #9
 2180              	.LVL241:
 2181              	.L165:
1315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 2182              		.loc 1 1315 0
 2183 0076 3146     		mov	r1, r6
 2184 0078 2068     		ldr	r0, [r4]
 2185 007a FFF7FEFF 		bl	SDMMC_CmdEraseStartAdd
 2186              	.LVL242:
1316:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 2187              		.loc 1 1316 0
 2188 007e B0B1     		cbz	r0, .L166
1319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 2189              		.loc 1 1319 0
 2190 0080 2368     		ldr	r3, [r4]
 2191 0082 40F2FF51 		movw	r1, #1535
 2192 0086 9963     		str	r1, [r3, #56]
1320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 2193              		.loc 1 1320 0
 2194 0088 A36B     		ldr	r3, [r4, #56]
 2195 008a 0343     		orrs	r3, r3, r0
 2196 008c A363     		str	r3, [r4, #56]
1321:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 2197              		.loc 1 1321 0
 2198 008e 0120     		movs	r0, #1
 2199              	.LVL243:
 2200 0090 84F83400 		strb	r0, [r4, #52]
1322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 2201              		.loc 1 1322 0
 2202 0094 DCE7     		b	.L160
 2203              	.LVL244:
 2204              	.L176:
1301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_LOCK_UNLOCK_FAILED;
 2205              		.loc 1 1301 0
 2206 0096 2368     		ldr	r3, [r4]
 2207 0098 40F2FF52 		movw	r2, #1535
 2208 009c 9A63     		str	r2, [r3, #56]
1302:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 2209              		.loc 1 1302 0
 2210 009e A36B     		ldr	r3, [r4, #56]
 2211 00a0 43F40063 		orr	r3, r3, #2048
 2212 00a4 A363     		str	r3, [r4, #56]
1303:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 2213              		.loc 1 1303 0
 2214 00a6 0120     		movs	r0, #1
 2215 00a8 84F83400 		strb	r0, [r4, #52]
1304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 2216              		.loc 1 1304 0
 2217 00ac D0E7     		b	.L160
 2218              	.LVL245:
 2219              	.L166:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 90


1326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 2220              		.loc 1 1326 0
 2221 00ae 2946     		mov	r1, r5
 2222 00b0 2068     		ldr	r0, [r4]
 2223              	.LVL246:
 2224 00b2 FFF7FEFF 		bl	SDMMC_CmdEraseEndAdd
 2225              	.LVL247:
1327:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 2226              		.loc 1 1327 0
 2227 00b6 50B1     		cbz	r0, .L167
1330:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 2228              		.loc 1 1330 0
 2229 00b8 2368     		ldr	r3, [r4]
 2230 00ba 40F2FF51 		movw	r1, #1535
 2231 00be 9963     		str	r1, [r3, #56]
1331:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
 2232              		.loc 1 1331 0
 2233 00c0 A36B     		ldr	r3, [r4, #56]
 2234 00c2 0343     		orrs	r3, r3, r0
 2235 00c4 A363     		str	r3, [r4, #56]
1332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 2236              		.loc 1 1332 0
 2237 00c6 0120     		movs	r0, #1
 2238              	.LVL248:
 2239 00c8 84F83400 		strb	r0, [r4, #52]
1333:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 2240              		.loc 1 1333 0
 2241 00cc C0E7     		b	.L160
 2242              	.LVL249:
 2243              	.L167:
1337:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 2244              		.loc 1 1337 0
 2245 00ce 2068     		ldr	r0, [r4]
 2246              	.LVL250:
 2247 00d0 FFF7FEFF 		bl	SDMMC_CmdErase
 2248              	.LVL251:
1338:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 2249              		.loc 1 1338 0
 2250 00d4 0346     		mov	r3, r0
 2251 00d6 20B9     		cbnz	r0, .L177
1347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 2252              		.loc 1 1347 0
 2253 00d8 0123     		movs	r3, #1
 2254 00da 84F83430 		strb	r3, [r4, #52]
1349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 2255              		.loc 1 1349 0
 2256 00de 0020     		movs	r0, #0
 2257              	.LVL252:
 2258 00e0 B6E7     		b	.L160
 2259              	.LVL253:
 2260              	.L177:
1341:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= errorstate;
 2261              		.loc 1 1341 0
 2262 00e2 2268     		ldr	r2, [r4]
 2263 00e4 40F2FF51 		movw	r1, #1535
 2264 00e8 9163     		str	r1, [r2, #56]
1342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->State = HAL_MMC_STATE_READY;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 91


 2265              		.loc 1 1342 0
 2266 00ea A26B     		ldr	r2, [r4, #56]
 2267 00ec 1343     		orrs	r3, r3, r2
 2268 00ee A363     		str	r3, [r4, #56]
1343:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 2269              		.loc 1 1343 0
 2270 00f0 0120     		movs	r0, #1
 2271              	.LVL254:
 2272 00f2 84F83400 		strb	r0, [r4, #52]
1344:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 2273              		.loc 1 1344 0
 2274 00f6 ABE7     		b	.L160
 2275              	.LVL255:
 2276              	.L169:
 2277              	.LCFI33:
 2278              		.cfi_def_cfa_offset 0
 2279              		.cfi_restore 4
 2280              		.cfi_restore 5
 2281              		.cfi_restore 6
 2282              		.cfi_restore 14
1353:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 2283              		.loc 1 1353 0
 2284 00f8 0220     		movs	r0, #2
 2285              	.LVL256:
1355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2286              		.loc 1 1355 0
 2287 00fa 7047     		bx	lr
 2288              		.cfi_endproc
 2289              	.LFE149:
 2291              		.section	.text.HAL_MMC_GetState,"ax",%progbits
 2292              		.align	1
 2293              		.global	HAL_MMC_GetState
 2294              		.syntax unified
 2295              		.thumb
 2296              		.thumb_func
 2297              		.fpu fpv5-sp-d16
 2299              	HAL_MMC_GetState:
 2300              	.LFB151:
1509:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return hmmc->State;
 2301              		.loc 1 1509 0
 2302              		.cfi_startproc
 2303              		@ args = 0, pretend = 0, frame = 0
 2304              		@ frame_needed = 0, uses_anonymous_args = 0
 2305              		@ link register save eliminated.
 2306              	.LVL257:
1510:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 2307              		.loc 1 1510 0
 2308 0000 90F83400 		ldrb	r0, [r0, #52]	@ zero_extendqisi2
 2309              	.LVL258:
1511:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2310              		.loc 1 1511 0
 2311 0004 7047     		bx	lr
 2312              		.cfi_endproc
 2313              	.LFE151:
 2315              		.section	.text.HAL_MMC_GetError,"ax",%progbits
 2316              		.align	1
 2317              		.global	HAL_MMC_GetError
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 92


 2318              		.syntax unified
 2319              		.thumb
 2320              		.thumb_func
 2321              		.fpu fpv5-sp-d16
 2323              	HAL_MMC_GetError:
 2324              	.LFB152:
1520:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   return hmmc->ErrorCode;
 2325              		.loc 1 1520 0
 2326              		.cfi_startproc
 2327              		@ args = 0, pretend = 0, frame = 0
 2328              		@ frame_needed = 0, uses_anonymous_args = 0
 2329              		@ link register save eliminated.
 2330              	.LVL259:
1521:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 2331              		.loc 1 1521 0
 2332 0000 806B     		ldr	r0, [r0, #56]
 2333              	.LVL260:
1522:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2334              		.loc 1 1522 0
 2335 0002 7047     		bx	lr
 2336              		.cfi_endproc
 2337              	.LFE152:
 2339              		.section	.text.HAL_MMC_TxCpltCallback,"ax",%progbits
 2340              		.align	1
 2341              		.weak	HAL_MMC_TxCpltCallback
 2342              		.syntax unified
 2343              		.thumb
 2344              		.thumb_func
 2345              		.fpu fpv5-sp-d16
 2347              	HAL_MMC_TxCpltCallback:
 2348              	.LFB153:
1530:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Prevent unused argument(s) compilation warning */
 2349              		.loc 1 1530 0
 2350              		.cfi_startproc
 2351              		@ args = 0, pretend = 0, frame = 0
 2352              		@ frame_needed = 0, uses_anonymous_args = 0
 2353              		@ link register save eliminated.
 2354              	.LVL261:
1537:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2355              		.loc 1 1537 0
 2356 0000 7047     		bx	lr
 2357              		.cfi_endproc
 2358              	.LFE153:
 2360              		.section	.text.HAL_MMC_RxCpltCallback,"ax",%progbits
 2361              		.align	1
 2362              		.weak	HAL_MMC_RxCpltCallback
 2363              		.syntax unified
 2364              		.thumb
 2365              		.thumb_func
 2366              		.fpu fpv5-sp-d16
 2368              	HAL_MMC_RxCpltCallback:
 2369              	.LFB154:
1545:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Prevent unused argument(s) compilation warning */
 2370              		.loc 1 1545 0
 2371              		.cfi_startproc
 2372              		@ args = 0, pretend = 0, frame = 0
 2373              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 93


 2374              		@ link register save eliminated.
 2375              	.LVL262:
1552:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2376              		.loc 1 1552 0
 2377 0000 7047     		bx	lr
 2378              		.cfi_endproc
 2379              	.LFE154:
 2381              		.section	.text.HAL_MMC_ErrorCallback,"ax",%progbits
 2382              		.align	1
 2383              		.weak	HAL_MMC_ErrorCallback
 2384              		.syntax unified
 2385              		.thumb
 2386              		.thumb_func
 2387              		.fpu fpv5-sp-d16
 2389              	HAL_MMC_ErrorCallback:
 2390              	.LFB155:
1560:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Prevent unused argument(s) compilation warning */
 2391              		.loc 1 1560 0
 2392              		.cfi_startproc
 2393              		@ args = 0, pretend = 0, frame = 0
 2394              		@ frame_needed = 0, uses_anonymous_args = 0
 2395              		@ link register save eliminated.
 2396              	.LVL263:
1567:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2397              		.loc 1 1567 0
 2398 0000 7047     		bx	lr
 2399              		.cfi_endproc
 2400              	.LFE155:
 2402              		.section	.text.MMC_DMAReceiveCplt,"ax",%progbits
 2403              		.align	1
 2404              		.syntax unified
 2405              		.thumb
 2406              		.thumb_func
 2407              		.fpu fpv5-sp-d16
 2409              	MMC_DMAReceiveCplt:
 2410              	.LFB165:
2121:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   MMC_HandleTypeDef* hmmc = (MMC_HandleTypeDef* )(hdma->Parent);
 2411              		.loc 1 2121 0
 2412              		.cfi_startproc
 2413              		@ args = 0, pretend = 0, frame = 0
 2414              		@ frame_needed = 0, uses_anonymous_args = 0
 2415              	.LVL264:
 2416 0000 10B5     		push	{r4, lr}
 2417              	.LCFI34:
 2418              		.cfi_def_cfa_offset 8
 2419              		.cfi_offset 4, -8
 2420              		.cfi_offset 14, -4
2122:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
 2421              		.loc 1 2122 0
 2422 0002 846B     		ldr	r4, [r0, #56]
 2423              	.LVL265:
2126:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 2424              		.loc 1 2126 0
 2425 0004 236B     		ldr	r3, [r4, #48]
 2426 0006 822B     		cmp	r3, #130
 2427 0008 0FD0     		beq	.L186
 2428              	.LVL266:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 94


 2429              	.L184:
2138:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2430              		.loc 1 2138 0
 2431 000a 2268     		ldr	r2, [r4]
 2432 000c D36A     		ldr	r3, [r2, #44]
 2433 000e 23F00803 		bic	r3, r3, #8
 2434 0012 D362     		str	r3, [r2, #44]
2141:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2435              		.loc 1 2141 0
 2436 0014 2368     		ldr	r3, [r4]
 2437 0016 40F2FF52 		movw	r2, #1535
 2438 001a 9A63     		str	r2, [r3, #56]
2143:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2439              		.loc 1 2143 0
 2440 001c 0123     		movs	r3, #1
 2441 001e 84F83430 		strb	r3, [r4, #52]
2145:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 2442              		.loc 1 2145 0
 2443 0022 2046     		mov	r0, r4
 2444 0024 FFF7FEFF 		bl	HAL_MMC_RxCpltCallback
 2445              	.LVL267:
2146:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2446              		.loc 1 2146 0
 2447 0028 10BD     		pop	{r4, pc}
 2448              	.LVL268:
 2449              	.L186:
2128:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 2450              		.loc 1 2128 0
 2451 002a 2068     		ldr	r0, [r4]
 2452              	.LVL269:
 2453 002c FFF7FEFF 		bl	SDMMC_CmdStopTransfer
 2454              	.LVL270:
2129:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 2455              		.loc 1 2129 0
 2456 0030 0346     		mov	r3, r0
 2457 0032 0028     		cmp	r0, #0
 2458 0034 E9D0     		beq	.L184
2131:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       HAL_MMC_ErrorCallback(hmmc);
 2459              		.loc 1 2131 0
 2460 0036 A06B     		ldr	r0, [r4, #56]
 2461              	.LVL271:
 2462 0038 1843     		orrs	r0, r0, r3
 2463 003a A063     		str	r0, [r4, #56]
2132:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 2464              		.loc 1 2132 0
 2465 003c 2046     		mov	r0, r4
 2466 003e FFF7FEFF 		bl	HAL_MMC_ErrorCallback
 2467              	.LVL272:
 2468 0042 E2E7     		b	.L184
 2469              		.cfi_endproc
 2470              	.LFE165:
 2472              		.section	.text.HAL_MMC_AbortCallback,"ax",%progbits
 2473              		.align	1
 2474              		.weak	HAL_MMC_AbortCallback
 2475              		.syntax unified
 2476              		.thumb
 2477              		.thumb_func
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 95


 2478              		.fpu fpv5-sp-d16
 2480              	HAL_MMC_AbortCallback:
 2481              	.LFB156:
1575:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Prevent unused argument(s) compilation warning */
 2482              		.loc 1 1575 0
 2483              		.cfi_startproc
 2484              		@ args = 0, pretend = 0, frame = 0
 2485              		@ frame_needed = 0, uses_anonymous_args = 0
 2486              		@ link register save eliminated.
 2487              	.LVL273:
1582:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2488              		.loc 1 1582 0
 2489 0000 7047     		bx	lr
 2490              		.cfi_endproc
 2491              	.LFE156:
 2493              		.section	.text.HAL_MMC_GetCardCID,"ax",%progbits
 2494              		.align	1
 2495              		.global	HAL_MMC_GetCardCID
 2496              		.syntax unified
 2497              		.thumb
 2498              		.thumb_func
 2499              		.fpu fpv5-sp-d16
 2501              	HAL_MMC_GetCardCID:
 2502              	.LFB157:
1613:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t tmp = 0;
 2503              		.loc 1 1613 0
 2504              		.cfi_startproc
 2505              		@ args = 0, pretend = 0, frame = 0
 2506              		@ frame_needed = 0, uses_anonymous_args = 0
 2507              		@ link register save eliminated.
 2508              	.LVL274:
 2509 0000 10B4     		push	{r4}
 2510              	.LCFI35:
 2511              		.cfi_def_cfa_offset 4
 2512              		.cfi_offset 4, -4
 2513              	.LVL275:
1617:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ManufacturerID = tmp;
 2514              		.loc 1 1617 0
 2515 0002 90F87330 		ldrb	r3, [r0, #115]	@ zero_extendqisi2
 2516              	.LVL276:
1618:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2517              		.loc 1 1618 0
 2518 0006 0B70     		strb	r3, [r1]
 2519              	.LVL277:
1622:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2520              		.loc 1 1622 0
 2521 0008 90F87230 		ldrb	r3, [r0, #114]	@ zero_extendqisi2
 2522 000c 1B02     		lsls	r3, r3, #8
 2523 000e 4B80     		strh	r3, [r1, #2]	@ movhi
 2524              	.LVL278:
1626:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2525              		.loc 1 1626 0
 2526 0010 4A88     		ldrh	r2, [r1, #2]
 2527 0012 90F87130 		ldrb	r3, [r0, #113]	@ zero_extendqisi2
 2528 0016 1343     		orrs	r3, r3, r2
 2529 0018 4B80     		strh	r3, [r1, #2]	@ movhi
 2530              	.LVL279:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 96


1629:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdName1 = tmp << 24;
 2531              		.loc 1 1629 0
 2532 001a 036F     		ldr	r3, [r0, #112]
 2533              	.LVL280:
 2534 001c 1B06     		lsls	r3, r3, #24
 2535              	.LVL281:
1630:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2536              		.loc 1 1630 0
 2537 001e 4B60     		str	r3, [r1, #4]
 2538              	.LVL282:
1633:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdName1 |= tmp << 16;
 2539              		.loc 1 1633 0
 2540 0020 90F87720 		ldrb	r2, [r0, #119]	@ zero_extendqisi2
 2541              	.LVL283:
1634:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2542              		.loc 1 1634 0
 2543 0024 4B68     		ldr	r3, [r1, #4]
 2544 0026 43EA0243 		orr	r3, r3, r2, lsl #16
 2545 002a 4B60     		str	r3, [r1, #4]
1637:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdName1 |= tmp << 8;
 2546              		.loc 1 1637 0
 2547 002c B0F87630 		ldrh	r3, [r0, #118]
 2548              	.LVL284:
1638:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2549              		.loc 1 1638 0
 2550 0030 4A68     		ldr	r2, [r1, #4]
 2551 0032 1B02     		lsls	r3, r3, #8
 2552              	.LVL285:
 2553 0034 9BB2     		uxth	r3, r3
 2554 0036 1343     		orrs	r3, r3, r2
 2555 0038 4B60     		str	r3, [r1, #4]
 2556              	.LVL286:
1642:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2557              		.loc 1 1642 0
 2558 003a 4A68     		ldr	r2, [r1, #4]
 2559 003c 90F87530 		ldrb	r3, [r0, #117]	@ zero_extendqisi2
 2560 0040 1343     		orrs	r3, r3, r2
 2561 0042 4B60     		str	r3, [r1, #4]
 2562              	.LVL287:
1645:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdName2 = tmp;
 2563              		.loc 1 1645 0
 2564 0044 90F87430 		ldrb	r3, [r0, #116]	@ zero_extendqisi2
 2565              	.LVL288:
1646:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2566              		.loc 1 1646 0
 2567 0048 0B72     		strb	r3, [r1, #8]
 2568              	.LVL289:
1649:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdRev = tmp;
 2569              		.loc 1 1649 0
 2570 004a 90F87B30 		ldrb	r3, [r0, #123]	@ zero_extendqisi2
 2571              	.LVL290:
1650:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2572              		.loc 1 1650 0
 2573 004e 4B72     		strb	r3, [r1, #9]
1653:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdSN = tmp << 24;
 2574              		.loc 1 1653 0
 2575 0050 B0F87A30 		ldrh	r3, [r0, #122]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 97


 2576              	.LVL291:
 2577 0054 1B06     		lsls	r3, r3, #24
 2578              	.LVL292:
1654:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2579              		.loc 1 1654 0
 2580 0056 CB60     		str	r3, [r1, #12]
 2581              	.LVL293:
1657:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdSN |= tmp << 16;
 2582              		.loc 1 1657 0
 2583 0058 836F     		ldr	r3, [r0, #120]
 2584 005a 1B0A     		lsrs	r3, r3, #8
 2585              	.LVL294:
1658:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2586              		.loc 1 1658 0
 2587 005c CA68     		ldr	r2, [r1, #12]
 2588 005e 1B04     		lsls	r3, r3, #16
 2589              	.LVL295:
 2590 0060 03F47F03 		and	r3, r3, #16711680
 2591 0064 1343     		orrs	r3, r3, r2
 2592 0066 CB60     		str	r3, [r1, #12]
 2593              	.LVL296:
1661:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdSN |= tmp << 8;
 2594              		.loc 1 1661 0
 2595 0068 836F     		ldr	r3, [r0, #120]
 2596              	.LVL297:
1662:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2597              		.loc 1 1662 0
 2598 006a CA68     		ldr	r2, [r1, #12]
 2599 006c 1B02     		lsls	r3, r3, #8
 2600              	.LVL298:
 2601 006e 9BB2     		uxth	r3, r3
 2602 0070 1343     		orrs	r3, r3, r2
 2603 0072 CB60     		str	r3, [r1, #12]
 2604              	.LVL299:
1665:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ProdSN |= tmp;
 2605              		.loc 1 1665 0
 2606 0074 90F87F30 		ldrb	r3, [r0, #127]	@ zero_extendqisi2
 2607              	.LVL300:
1666:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2608              		.loc 1 1666 0
 2609 0078 CA68     		ldr	r2, [r1, #12]
 2610 007a 1343     		orrs	r3, r3, r2
 2611              	.LVL301:
 2612 007c CB60     		str	r3, [r1, #12]
 2613              	.LVL302:
1669:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->Reserved1   |= (tmp & 0xF0) >> 4;
 2614              		.loc 1 1669 0
 2615 007e C36F     		ldr	r3, [r0, #124]
 2616              	.LVL303:
1670:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->ManufactDate = (tmp & 0x0F) << 8;
 2617              		.loc 1 1670 0
 2618 0080 0A7C     		ldrb	r2, [r1, #16]	@ zero_extendqisi2
 2619 0082 C3F30354 		ubfx	r4, r3, #20, #4
 2620 0086 2243     		orrs	r2, r2, r4
 2621 0088 0A74     		strb	r2, [r1, #16]
1671:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2622              		.loc 1 1671 0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 98


 2623 008a C3F30743 		ubfx	r3, r3, #16, #8
 2624              	.LVL304:
 2625 008e 1B02     		lsls	r3, r3, #8
 2626 0090 03F47063 		and	r3, r3, #3840
 2627 0094 4B82     		strh	r3, [r1, #18]	@ movhi
 2628              	.LVL305:
1675:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2629              		.loc 1 1675 0
 2630 0096 4A8A     		ldrh	r2, [r1, #18]
 2631 0098 90F87D30 		ldrb	r3, [r0, #125]	@ zero_extendqisi2
 2632 009c 1343     		orrs	r3, r3, r2
 2633 009e 4B82     		strh	r3, [r1, #18]	@ movhi
 2634              	.LVL306:
1678:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->CID_CRC   = (tmp & 0xFE) >> 1;
 2635              		.loc 1 1678 0
 2636 00a0 C36F     		ldr	r3, [r0, #124]
 2637              	.LVL307:
1679:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCID->Reserved2 = 1;
 2638              		.loc 1 1679 0
 2639 00a2 C3F34603 		ubfx	r3, r3, #1, #7
 2640              	.LVL308:
 2641 00a6 0B75     		strb	r3, [r1, #20]
 2642              	.LVL309:
1680:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2643              		.loc 1 1680 0
 2644 00a8 0123     		movs	r3, #1
 2645 00aa 4B75     		strb	r3, [r1, #21]
1683:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2646              		.loc 1 1683 0
 2647 00ac 0020     		movs	r0, #0
 2648              	.LVL310:
 2649 00ae 5DF8044B 		ldr	r4, [sp], #4
 2650              	.LCFI36:
 2651              		.cfi_restore 4
 2652              		.cfi_def_cfa_offset 0
 2653 00b2 7047     		bx	lr
 2654              		.cfi_endproc
 2655              	.LFE157:
 2657              		.section	.text.HAL_MMC_GetCardCSD,"ax",%progbits
 2658              		.align	1
 2659              		.global	HAL_MMC_GetCardCSD
 2660              		.syntax unified
 2661              		.thumb
 2662              		.thumb_func
 2663              		.fpu fpv5-sp-d16
 2665              	HAL_MMC_GetCardCSD:
 2666              	.LFB158:
1694:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t tmp = 0;
 2667              		.loc 1 1694 0
 2668              		.cfi_startproc
 2669              		@ args = 0, pretend = 0, frame = 0
 2670              		@ frame_needed = 0, uses_anonymous_args = 0
 2671              		@ link register save eliminated.
 2672              	.LVL311:
 2673 0000 F0B4     		push	{r4, r5, r6, r7}
 2674              	.LCFI37:
 2675              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 99


 2676              		.cfi_offset 4, -16
 2677              		.cfi_offset 5, -12
 2678              		.cfi_offset 6, -8
 2679              		.cfi_offset 7, -4
 2680 0002 0346     		mov	r3, r0
 2681              	.LVL312:
1698:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->CSDStruct      = (uint8_t)((tmp & 0xC0) >> 6);
 2682              		.loc 1 1698 0
 2683 0004 026E     		ldr	r2, [r0, #96]
 2684              	.LVL313:
1699:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->SysSpecVersion = (uint8_t)((tmp & 0x3C) >> 2);
 2685              		.loc 1 1699 0
 2686 0006 900F     		lsrs	r0, r2, #30
 2687              	.LVL314:
 2688 0008 0870     		strb	r0, [r1]
1700:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->Reserved1      = tmp & 0x03;
 2689              		.loc 1 1700 0
 2690 000a C2F38360 		ubfx	r0, r2, #26, #4
 2691 000e 4870     		strb	r0, [r1, #1]
1701:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2692              		.loc 1 1701 0
 2693 0010 C2F30162 		ubfx	r2, r2, #24, #2
 2694              	.LVL315:
 2695 0014 8A70     		strb	r2, [r1, #2]
 2696              	.LVL316:
1705:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2697              		.loc 1 1705 0
 2698 0016 93F86220 		ldrb	r2, [r3, #98]	@ zero_extendqisi2
 2699 001a CA70     		strb	r2, [r1, #3]
 2700              	.LVL317:
1709:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2701              		.loc 1 1709 0
 2702 001c 93F86120 		ldrb	r2, [r3, #97]	@ zero_extendqisi2
 2703 0020 0A71     		strb	r2, [r1, #4]
 2704              	.LVL318:
1713:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2705              		.loc 1 1713 0
 2706 0022 93F86020 		ldrb	r2, [r3, #96]	@ zero_extendqisi2
 2707 0026 4A71     		strb	r2, [r1, #5]
 2708              	.LVL319:
1716:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->CardComdClasses = (uint16_t)(tmp << 4);
 2709              		.loc 1 1716 0
 2710 0028 93F86720 		ldrb	r2, [r3, #103]	@ zero_extendqisi2
 2711              	.LVL320:
1717:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2712              		.loc 1 1717 0
 2713 002c 1201     		lsls	r2, r2, #4
 2714              	.LVL321:
 2715 002e CA80     		strh	r2, [r1, #6]	@ movhi
 2716              	.LVL322:
1720:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->CardComdClasses |= (uint16_t)((tmp & 0xF0) >> 4);
 2717              		.loc 1 1720 0
 2718 0030 B3F86620 		ldrh	r2, [r3, #102]
 2719              	.LVL323:
1721:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->RdBlockLen       = (uint8_t)(tmp & 0x0F);
 2720              		.loc 1 1721 0
 2721 0034 CC88     		ldrh	r4, [r1, #6]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 100


 2722 0036 C2F30310 		ubfx	r0, r2, #4, #4
 2723 003a 2043     		orrs	r0, r0, r4
 2724 003c C880     		strh	r0, [r1, #6]	@ movhi
1722:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2725              		.loc 1 1722 0
 2726 003e 02F00F02 		and	r2, r2, #15
 2727              	.LVL324:
 2728 0042 0A72     		strb	r2, [r1, #8]
1725:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->PartBlockRead   = (uint8_t)((tmp & 0x80) >> 7);
 2729              		.loc 1 1725 0
 2730 0044 93F86520 		ldrb	r2, [r3, #101]	@ zero_extendqisi2
 2731              	.LVL325:
1726:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->WrBlockMisalign = (uint8_t)((tmp & 0x40) >> 6);
 2732              		.loc 1 1726 0
 2733 0048 D009     		lsrs	r0, r2, #7
 2734 004a 4872     		strb	r0, [r1, #9]
1727:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->RdBlockMisalign = (uint8_t)((tmp & 0x20) >> 5);
 2735              		.loc 1 1727 0
 2736 004c C2F38010 		ubfx	r0, r2, #6, #1
 2737 0050 8872     		strb	r0, [r1, #10]
1728:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->DSRImpl         = (uint8_t)((tmp & 0x10) >> 4);
 2738              		.loc 1 1728 0
 2739 0052 C2F34010 		ubfx	r0, r2, #5, #1
 2740 0056 C872     		strb	r0, [r1, #11]
1729:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->Reserved2       = 0; /*!< Reserved */
 2741              		.loc 1 1729 0
 2742 0058 C2F30010 		ubfx	r0, r2, #4, #1
 2743 005c 0873     		strb	r0, [r1, #12]
1730:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2744              		.loc 1 1730 0
 2745 005e 0020     		movs	r0, #0
 2746 0060 4873     		strb	r0, [r1, #13]
1732:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2747              		.loc 1 1732 0
 2748 0062 9202     		lsls	r2, r2, #10
 2749              	.LVL326:
 2750 0064 02F44062 		and	r2, r2, #3072
 2751 0068 0A61     		str	r2, [r1, #16]
1735:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->DeviceSize |= (tmp) << 2;
 2752              		.loc 1 1735 0
 2753 006a 5A6E     		ldr	r2, [r3, #100]
 2754              	.LVL327:
1736:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2755              		.loc 1 1736 0
 2756 006c 0C69     		ldr	r4, [r1, #16]
 2757 006e 9200     		lsls	r2, r2, #2
 2758              	.LVL328:
 2759 0070 02F47F72 		and	r2, r2, #1020
 2760 0074 2243     		orrs	r2, r2, r4
 2761 0076 0A61     		str	r2, [r1, #16]
 2762              	.LVL329:
1739:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->DeviceSize |= (tmp & 0xC0) >> 6;
 2763              		.loc 1 1739 0
 2764 0078 9A6E     		ldr	r2, [r3, #104]
 2765              	.LVL330:
1740:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2766              		.loc 1 1740 0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 101


 2767 007a 0C69     		ldr	r4, [r1, #16]
 2768 007c 44EA9274 		orr	r4, r4, r2, lsr #30
 2769 0080 0C61     		str	r4, [r1, #16]
1742:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->MaxRdCurrentVDDMax = (tmp & 0x07);
 2770              		.loc 1 1742 0
 2771 0082 C2F3C264 		ubfx	r4, r2, #27, #3
 2772 0086 0C75     		strb	r4, [r1, #20]
1743:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2773              		.loc 1 1743 0
 2774 0088 C2F30262 		ubfx	r2, r2, #24, #3
 2775              	.LVL331:
 2776 008c 4A75     		strb	r2, [r1, #21]
1746:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->MaxWrCurrentVDDMin = (tmp & 0xE0) >> 5;
 2777              		.loc 1 1746 0
 2778 008e 9C6E     		ldr	r4, [r3, #104]
 2779 0090 C4F30742 		ubfx	r2, r4, #16, #8
 2780              	.LVL332:
1747:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->MaxWrCurrentVDDMax = (tmp & 0x1C) >> 2;
 2781              		.loc 1 1747 0
 2782 0094 C4F34255 		ubfx	r5, r4, #21, #3
 2783 0098 8D75     		strb	r5, [r1, #22]
1748:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->DeviceSizeMul      = (tmp & 0x03) << 1;
 2784              		.loc 1 1748 0
 2785 009a C4F38244 		ubfx	r4, r4, #18, #3
 2786              	.LVL333:
 2787 009e CC75     		strb	r4, [r1, #23]
1749:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Byte 10 */
 2788              		.loc 1 1749 0
 2789 00a0 5200     		lsls	r2, r2, #1
 2790 00a2 02F00602 		and	r2, r2, #6
 2791 00a6 0A76     		strb	r2, [r1, #24]
1751:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->DeviceSizeMul |= (tmp & 0x80) >> 7;
 2792              		.loc 1 1751 0
 2793 00a8 9F6E     		ldr	r7, [r3, #104]
 2794 00aa C7F30726 		ubfx	r6, r7, #8, #8
 2795              	.LVL334:
1752:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2796              		.loc 1 1752 0
 2797 00ae 0A7E     		ldrb	r2, [r1, #24]	@ zero_extendqisi2
 2798 00b0 C7F3C034 		ubfx	r4, r7, #15, #1
 2799 00b4 2243     		orrs	r2, r2, r4
 2800 00b6 0A76     		strb	r2, [r1, #24]
1754:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->MmcCard.BlockNbr *= (1 << (pCSD->DeviceSizeMul + 2));
 2801              		.loc 1 1754 0
 2802 00b8 0A69     		ldr	r2, [r1, #16]
 2803 00ba 0132     		adds	r2, r2, #1
 2804 00bc 1A65     		str	r2, [r3, #80]
1755:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->MmcCard.BlockSize = 1 << (pCSD->RdBlockLen);
 2805              		.loc 1 1755 0
 2806 00be 0C7E     		ldrb	r4, [r1, #24]	@ zero_extendqisi2
 2807 00c0 0234     		adds	r4, r4, #2
 2808 00c2 02FA04F4 		lsl	r4, r2, r4
 2809 00c6 1C65     		str	r4, [r3, #80]
1756:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2810              		.loc 1 1756 0
 2811 00c8 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 2812 00ca D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 102


 2813 00cc 0125     		movs	r5, #1
 2814 00ce 05FA02F2 		lsl	r2, r5, r2
 2815 00d2 5A65     		str	r2, [r3, #84]
1758:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   hmmc->MmcCard.LogBlockSize = 512;
 2816              		.loc 1 1758 0
 2817 00d4 520A     		lsrs	r2, r2, #9
 2818 00d6 02FB04F2 		mul	r2, r2, r4
 2819 00da 9A65     		str	r2, [r3, #88]
1759:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2820              		.loc 1 1759 0
 2821 00dc 4FF40072 		mov	r2, #512
 2822 00e0 DA65     		str	r2, [r3, #92]
1761:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->EraseGrMul  = (tmp & 0x3F) << 1;
 2823              		.loc 1 1761 0
 2824 00e2 C7F38037 		ubfx	r7, r7, #14, #1
 2825              	.LVL335:
 2826 00e6 4F76     		strb	r7, [r1, #25]
1762:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2827              		.loc 1 1762 0
 2828 00e8 06FA05F2 		lsl	r2, r6, r5
 2829 00ec 02F07E02 		and	r2, r2, #126
 2830 00f0 8A76     		strb	r2, [r1, #26]
1765:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->EraseGrMul     |= (tmp & 0x80) >> 7;
 2831              		.loc 1 1765 0
 2832 00f2 9A6E     		ldr	r2, [r3, #104]
 2833              	.LVL336:
1766:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->WrProtectGrSize = (tmp & 0x7F);
 2834              		.loc 1 1766 0
 2835 00f4 8C7E     		ldrb	r4, [r1, #26]	@ zero_extendqisi2
 2836 00f6 C2F3C016 		ubfx	r6, r2, #7, #1
 2837 00fa 3443     		orrs	r4, r4, r6
 2838 00fc 8C76     		strb	r4, [r1, #26]
1767:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2839              		.loc 1 1767 0
 2840 00fe 02F07F02 		and	r2, r2, #127
 2841              	.LVL337:
 2842 0102 CA76     		strb	r2, [r1, #27]
1770:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->WrProtectGrEnable = (tmp & 0x80) >> 7;
 2843              		.loc 1 1770 0
 2844 0104 DA6E     		ldr	r2, [r3, #108]
 2845 0106 140E     		lsrs	r4, r2, #24
 2846              	.LVL338:
1771:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->ManDeflECC        = (tmp & 0x60) >> 5;
 2847              		.loc 1 1771 0
 2848 0108 D60F     		lsrs	r6, r2, #31
 2849 010a 0E77     		strb	r6, [r1, #28]
1772:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->WrSpeedFact       = (tmp & 0x1C) >> 2;
 2850              		.loc 1 1772 0
 2851 010c C2F34176 		ubfx	r6, r2, #29, #2
 2852 0110 4E77     		strb	r6, [r1, #29]
1773:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->MaxWrBlockLen     = (tmp & 0x03) << 2;
 2853              		.loc 1 1773 0
 2854 0112 C2F38262 		ubfx	r2, r2, #26, #3
 2855 0116 8A77     		strb	r2, [r1, #30]
1774:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2856              		.loc 1 1774 0
 2857 0118 A200     		lsls	r2, r4, #2
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 103


 2858 011a 02F00C02 		and	r2, r2, #12
 2859 011e CA77     		strb	r2, [r1, #31]
1777:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->MaxWrBlockLen      |= (tmp & 0xC0) >> 6;
 2860              		.loc 1 1777 0
 2861 0120 DA6E     		ldr	r2, [r3, #108]
 2862              	.LVL339:
1778:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->WriteBlockPaPartial = (tmp & 0x20) >> 5;
 2863              		.loc 1 1778 0
 2864 0122 CC7F     		ldrb	r4, [r1, #31]	@ zero_extendqisi2
 2865 0124 C2F38156 		ubfx	r6, r2, #22, #2
 2866 0128 3443     		orrs	r4, r4, r6
 2867 012a CC77     		strb	r4, [r1, #31]
1779:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->Reserved3           = 0;
 2868              		.loc 1 1779 0
 2869 012c C2F34054 		ubfx	r4, r2, #21, #1
 2870 0130 81F82040 		strb	r4, [r1, #32]
1780:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->ContentProtectAppli = (tmp & 0x01);
 2871              		.loc 1 1780 0
 2872 0134 81F82100 		strb	r0, [r1, #33]
1781:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2873              		.loc 1 1781 0
 2874 0138 C2F30042 		ubfx	r2, r2, #16, #1
 2875              	.LVL340:
 2876 013c 81F82220 		strb	r2, [r1, #34]
1784:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->FileFormatGrouop = (tmp & 0x80) >> 7;
 2877              		.loc 1 1784 0
 2878 0140 DA6E     		ldr	r2, [r3, #108]
 2879              	.LVL341:
1785:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->CopyFlag         = (tmp & 0x40) >> 6;
 2880              		.loc 1 1785 0
 2881 0142 C2F3C034 		ubfx	r4, r2, #15, #1
 2882 0146 81F82340 		strb	r4, [r1, #35]
1786:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->PermWrProtect    = (tmp & 0x20) >> 5;
 2883              		.loc 1 1786 0
 2884 014a C2F38034 		ubfx	r4, r2, #14, #1
 2885 014e 81F82440 		strb	r4, [r1, #36]
1787:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->TempWrProtect    = (tmp & 0x10) >> 4;
 2886              		.loc 1 1787 0
 2887 0152 C2F34034 		ubfx	r4, r2, #13, #1
 2888 0156 81F82540 		strb	r4, [r1, #37]
1788:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->FileFormat       = (tmp & 0x0C) >> 2;
 2889              		.loc 1 1788 0
 2890 015a C2F30034 		ubfx	r4, r2, #12, #1
 2891 015e 81F82640 		strb	r4, [r1, #38]
1789:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->ECC              = (tmp & 0x03);
 2892              		.loc 1 1789 0
 2893 0162 C2F38124 		ubfx	r4, r2, #10, #2
 2894 0166 81F82740 		strb	r4, [r1, #39]
1790:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2895              		.loc 1 1790 0
 2896 016a C2F30122 		ubfx	r2, r2, #8, #2
 2897              	.LVL342:
 2898 016e 81F82820 		strb	r2, [r1, #40]
1793:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->CSD_CRC   = (tmp & 0xFE) >> 1;
 2899              		.loc 1 1793 0
 2900 0172 DB6E     		ldr	r3, [r3, #108]
 2901              	.LVL343:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 104


1794:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCSD->Reserved4 = 1;
 2902              		.loc 1 1794 0
 2903 0174 C3F34603 		ubfx	r3, r3, #1, #7
 2904              	.LVL344:
 2905 0178 81F82930 		strb	r3, [r1, #41]
 2906              	.LVL345:
1795:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2907              		.loc 1 1795 0
 2908 017c 81F82A50 		strb	r5, [r1, #42]
1798:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 2909              		.loc 1 1798 0
 2910 0180 F0BC     		pop	{r4, r5, r6, r7}
 2911              	.LCFI38:
 2912              		.cfi_restore 7
 2913              		.cfi_restore 6
 2914              		.cfi_restore 5
 2915              		.cfi_restore 4
 2916              		.cfi_def_cfa_offset 0
 2917 0182 7047     		bx	lr
 2918              		.cfi_endproc
 2919              	.LFE158:
 2921              		.section	.text.MMC_InitCard,"ax",%progbits
 2922              		.align	1
 2923              		.syntax unified
 2924              		.thumb
 2925              		.thumb_func
 2926              		.fpu fpv5-sp-d16
 2928              	MMC_InitCard:
 2929              	.LFB169:
2265:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardCSDTypeDef CSD;
 2930              		.loc 1 2265 0
 2931              		.cfi_startproc
 2932              		@ args = 0, pretend = 0, frame = 48
 2933              		@ frame_needed = 0, uses_anonymous_args = 0
 2934              	.LVL346:
 2935 0000 70B5     		push	{r4, r5, r6, lr}
 2936              	.LCFI39:
 2937              		.cfi_def_cfa_offset 16
 2938              		.cfi_offset 4, -16
 2939              		.cfi_offset 5, -12
 2940              		.cfi_offset 6, -8
 2941              		.cfi_offset 14, -4
 2942 0002 90B0     		sub	sp, sp, #64
 2943              	.LCFI40:
 2944              		.cfi_def_cfa_offset 80
 2945 0004 0446     		mov	r4, r0
 2946              	.LVL347:
2268:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2947              		.loc 1 2268 0
 2948 0006 0123     		movs	r3, #1
 2949 0008 ADF81230 		strh	r3, [sp, #18]	@ movhi
2271:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 2950              		.loc 1 2271 0
 2951 000c 0068     		ldr	r0, [r0]
 2952              	.LVL348:
 2953 000e FFF7FEFF 		bl	SDMMC_GetPowerState
 2954              	.LVL349:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 105


 2955 0012 0028     		cmp	r0, #0
 2956 0014 5FD0     		beq	.L194
2278:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_MMC_ERROR_NONE)
 2957              		.loc 1 2278 0
 2958 0016 2068     		ldr	r0, [r4]
 2959 0018 FFF7FEFF 		bl	SDMMC_CmdSendCID
 2960              	.LVL350:
2279:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 2961              		.loc 1 2279 0
 2962 001c 0546     		mov	r5, r0
 2963 001e 0028     		cmp	r0, #0
 2964 0020 5BD1     		bne	.L192
2286:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CID[1] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP2);
 2965              		.loc 1 2286 0
 2966 0022 0021     		movs	r1, #0
 2967 0024 2068     		ldr	r0, [r4]
 2968              	.LVL351:
 2969 0026 FFF7FEFF 		bl	SDMMC_GetResponse
 2970              	.LVL352:
 2971 002a 2067     		str	r0, [r4, #112]
2287:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CID[2] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP3);
 2972              		.loc 1 2287 0
 2973 002c 0421     		movs	r1, #4
 2974 002e 2068     		ldr	r0, [r4]
 2975 0030 FFF7FEFF 		bl	SDMMC_GetResponse
 2976              	.LVL353:
 2977 0034 6067     		str	r0, [r4, #116]
2288:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CID[3] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP4);
 2978              		.loc 1 2288 0
 2979 0036 0821     		movs	r1, #8
 2980 0038 2068     		ldr	r0, [r4]
 2981 003a FFF7FEFF 		bl	SDMMC_GetResponse
 2982              	.LVL354:
 2983 003e A067     		str	r0, [r4, #120]
2289:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 2984              		.loc 1 2289 0
 2985 0040 0C21     		movs	r1, #12
 2986 0042 2068     		ldr	r0, [r4]
 2987 0044 FFF7FEFF 		bl	SDMMC_GetResponse
 2988              	.LVL355:
 2989 0048 E067     		str	r0, [r4, #124]
2294:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_MMC_ERROR_NONE)
 2990              		.loc 1 2294 0
 2991 004a 0DF11201 		add	r1, sp, #18
 2992 004e 2068     		ldr	r0, [r4]
 2993 0050 FFF7FEFF 		bl	SDMMC_CmdSetRelAdd
 2994              	.LVL356:
2295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 2995              		.loc 1 2295 0
 2996 0054 0546     		mov	r5, r0
 2997 0056 0028     		cmp	r0, #0
 2998 0058 3FD1     		bne	.L192
2301:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 2999              		.loc 1 2301 0
 3000 005a BDF81210 		ldrh	r1, [sp, #18]
 3001 005e E164     		str	r1, [r4, #76]
2304:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_MMC_ERROR_NONE)
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 106


 3002              		.loc 1 2304 0
 3003 0060 0904     		lsls	r1, r1, #16
 3004 0062 2068     		ldr	r0, [r4]
 3005              	.LVL357:
 3006 0064 FFF7FEFF 		bl	SDMMC_CmdSendCSD
 3007              	.LVL358:
2305:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3008              		.loc 1 2305 0
 3009 0068 0546     		mov	r5, r0
 3010 006a 0028     		cmp	r0, #0
 3011 006c 35D1     		bne	.L192
2312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CSD[1U] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP2);
 3012              		.loc 1 2312 0
 3013 006e 0021     		movs	r1, #0
 3014 0070 2068     		ldr	r0, [r4]
 3015              	.LVL359:
 3016 0072 FFF7FEFF 		bl	SDMMC_GetResponse
 3017              	.LVL360:
 3018 0076 2066     		str	r0, [r4, #96]
2313:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CSD[2U] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP3);
 3019              		.loc 1 2313 0
 3020 0078 0421     		movs	r1, #4
 3021 007a 2068     		ldr	r0, [r4]
 3022 007c FFF7FEFF 		bl	SDMMC_GetResponse
 3023              	.LVL361:
 3024 0080 6066     		str	r0, [r4, #100]
2314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->CSD[3U] = SDMMC_GetResponse(hmmc->Instance, SDMMC_RESP4);
 3025              		.loc 1 2314 0
 3026 0082 0821     		movs	r1, #8
 3027 0084 2068     		ldr	r0, [r4]
 3028 0086 FFF7FEFF 		bl	SDMMC_GetResponse
 3029              	.LVL362:
 3030 008a A066     		str	r0, [r4, #104]
2315:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3031              		.loc 1 2315 0
 3032 008c 0C21     		movs	r1, #12
 3033 008e 2068     		ldr	r0, [r4]
 3034 0090 FFF7FEFF 		bl	SDMMC_GetResponse
 3035              	.LVL363:
 3036 0094 E066     		str	r0, [r4, #108]
2319:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 3037              		.loc 1 2319 0
 3038 0096 0421     		movs	r1, #4
 3039 0098 2068     		ldr	r0, [r4]
 3040 009a FFF7FEFF 		bl	SDMMC_GetResponse
 3041              	.LVL364:
 3042 009e 000D     		lsrs	r0, r0, #20
 3043 00a0 A064     		str	r0, [r4, #72]
2322:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3044              		.loc 1 2322 0
 3045 00a2 05A9     		add	r1, sp, #20
 3046 00a4 2046     		mov	r0, r4
 3047 00a6 FFF7FEFF 		bl	HAL_MMC_GetCardCSD
 3048              	.LVL365:
2325:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_MMC_ERROR_NONE)
 3049              		.loc 1 2325 0
 3050 00aa E26C     		ldr	r2, [r4, #76]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 107


 3051 00ac 1204     		lsls	r2, r2, #16
 3052 00ae 0023     		movs	r3, #0
 3053 00b0 2068     		ldr	r0, [r4]
 3054 00b2 FFF7FEFF 		bl	SDMMC_CmdSelDesel
 3055              	.LVL366:
2326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3056              		.loc 1 2326 0
 3057 00b6 0546     		mov	r5, r0
 3058 00b8 78B9     		cbnz	r0, .L192
2332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3059              		.loc 1 2332 0
 3060 00ba 2346     		mov	r3, r4
 3061 00bc 53F8106B 		ldr	r6, [r3], #16
 3062 00c0 93E80700 		ldm	r3, {r0, r1, r2}
 3063              	.LVL367:
 3064 00c4 8DE80700 		stm	sp, {r0, r1, r2}
 3065 00c8 0434     		adds	r4, r4, #4
 3066              	.LVL368:
 3067 00ca 94E80E00 		ldm	r4, {r1, r2, r3}
 3068 00ce 3046     		mov	r0, r6
 3069 00d0 FFF7FEFF 		bl	SDMMC_Init
 3070              	.LVL369:
2335:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 3071              		.loc 1 2335 0
 3072 00d4 01E0     		b	.L192
 3073              	.LVL370:
 3074              	.L194:
2274:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3075              		.loc 1 2274 0
 3076 00d6 4FF08065 		mov	r5, #67108864
 3077              	.LVL371:
 3078              	.L192:
2336:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3079              		.loc 1 2336 0
 3080 00da 2846     		mov	r0, r5
 3081 00dc 10B0     		add	sp, sp, #64
 3082              	.LCFI41:
 3083              		.cfi_def_cfa_offset 16
 3084              		@ sp needed
 3085 00de 70BD     		pop	{r4, r5, r6, pc}
 3086              		.cfi_endproc
 3087              	.LFE169:
 3089              		.section	.text.HAL_MMC_InitCard,"ax",%progbits
 3090              		.align	1
 3091              		.global	HAL_MMC_InitCard
 3092              		.syntax unified
 3093              		.thumb
 3094              		.thumb_func
 3095              		.fpu fpv5-sp-d16
 3097              	HAL_MMC_InitCard:
 3098              	.LFB139:
 342:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
 3099              		.loc 1 342 0
 3100              		.cfi_startproc
 3101              		@ args = 0, pretend = 0, frame = 24
 3102              		@ frame_needed = 0, uses_anonymous_args = 0
 3103              	.LVL372:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 108


 3104 0000 10B5     		push	{r4, lr}
 3105              	.LCFI42:
 3106              		.cfi_def_cfa_offset 8
 3107              		.cfi_offset 4, -8
 3108              		.cfi_offset 14, -4
 3109 0002 8AB0     		sub	sp, sp, #40
 3110              	.LCFI43:
 3111              		.cfi_def_cfa_offset 48
 3112 0004 0446     		mov	r4, r0
 3113              	.LVL373:
 347:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockBypass         = SDMMC_CLOCK_BYPASS_DISABLE;
 3114              		.loc 1 347 0
 3115 0006 0023     		movs	r3, #0
 3116 0008 0493     		str	r3, [sp, #16]
 348:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockPowerSave      = SDMMC_CLOCK_POWER_SAVE_DISABLE;
 3117              		.loc 1 348 0
 3118 000a 0593     		str	r3, [sp, #20]
 349:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.BusWide             = SDMMC_BUS_WIDE_1B;
 3119              		.loc 1 349 0
 3120 000c 0693     		str	r3, [sp, #24]
 350:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
 3121              		.loc 1 350 0
 3122 000e 0793     		str	r3, [sp, #28]
 351:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockDiv            = SDMMC_INIT_CLK_DIV;
 3123              		.loc 1 351 0
 3124 0010 0893     		str	r3, [sp, #32]
 352:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3125              		.loc 1 352 0
 3126 0012 7623     		movs	r3, #118
 3127 0014 0993     		str	r3, [sp, #36]
 355:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3128              		.loc 1 355 0
 3129 0016 0AAB     		add	r3, sp, #40
 3130 0018 13E90700 		ldmdb	r3, {r0, r1, r2}
 3131              	.LVL374:
 3132 001c 8DE80700 		stm	sp, {r0, r1, r2}
 3133 0020 04AB     		add	r3, sp, #16
 3134 0022 0ECB     		ldm	r3, {r1, r2, r3}
 3135 0024 2068     		ldr	r0, [r4]
 3136 0026 FFF7FEFF 		bl	SDMMC_Init
 3137              	.LVL375:
 358:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 3138              		.loc 1 358 0
 3139 002a 2268     		ldr	r2, [r4]
 3140 002c 5368     		ldr	r3, [r2, #4]
 3141 002e 23F48073 		bic	r3, r3, #256
 3142 0032 5360     		str	r3, [r2, #4]
 361:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 3143              		.loc 1 361 0
 3144 0034 2068     		ldr	r0, [r4]
 3145 0036 FFF7FEFF 		bl	SDMMC_PowerState_ON
 3146              	.LVL376:
 364:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 3147              		.loc 1 364 0
 3148 003a 2268     		ldr	r2, [r4]
 3149 003c 5368     		ldr	r3, [r2, #4]
 3150 003e 43F48073 		orr	r3, r3, #256
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 109


 3151 0042 5360     		str	r3, [r2, #4]
 367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 3152              		.loc 1 367 0
 3153 0044 0220     		movs	r0, #2
 3154 0046 FFF7FEFF 		bl	HAL_Delay
 3155              	.LVL377:
 370:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_MMC_ERROR_NONE)
 3156              		.loc 1 370 0
 3157 004a 2046     		mov	r0, r4
 3158 004c FFF7FEFF 		bl	MMC_PowerON
 3159              	.LVL378:
 371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3160              		.loc 1 371 0
 3161 0050 40B1     		cbz	r0, .L197
 3162 0052 0246     		mov	r2, r0
 373:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= errorstate;
 3163              		.loc 1 373 0
 3164 0054 0120     		movs	r0, #1
 3165              	.LVL379:
 3166 0056 84F83400 		strb	r0, [r4, #52]
 374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 3167              		.loc 1 374 0
 3168 005a A36B     		ldr	r3, [r4, #56]
 3169 005c 1343     		orrs	r3, r3, r2
 3170 005e A363     		str	r3, [r4, #56]
 3171              	.L198:
 388:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3172              		.loc 1 388 0
 3173 0060 0AB0     		add	sp, sp, #40
 3174              	.LCFI44:
 3175              		.cfi_remember_state
 3176              		.cfi_def_cfa_offset 8
 3177              		@ sp needed
 3178 0062 10BD     		pop	{r4, pc}
 3179              	.LVL380:
 3180              	.L197:
 3181              	.LCFI45:
 3182              		.cfi_restore_state
 379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_MMC_ERROR_NONE)
 3183              		.loc 1 379 0
 3184 0064 2046     		mov	r0, r4
 3185              	.LVL381:
 3186 0066 FFF7FEFF 		bl	MMC_InitCard
 3187              	.LVL382:
 380:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3188              		.loc 1 380 0
 3189 006a 0246     		mov	r2, r0
 3190 006c 30B1     		cbz	r0, .L199
 382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode |= errorstate;
 3191              		.loc 1 382 0
 3192 006e 0120     		movs	r0, #1
 3193              	.LVL383:
 3194 0070 84F83400 		strb	r0, [r4, #52]
 383:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 3195              		.loc 1 383 0
 3196 0074 A36B     		ldr	r3, [r4, #56]
 3197 0076 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 110


 3198 0078 A363     		str	r3, [r4, #56]
 384:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3199              		.loc 1 384 0
 3200 007a F1E7     		b	.L198
 3201              	.LVL384:
 3202              	.L199:
 387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 3203              		.loc 1 387 0
 3204 007c 0020     		movs	r0, #0
 3205              	.LVL385:
 3206 007e EFE7     		b	.L198
 3207              		.cfi_endproc
 3208              	.LFE139:
 3210              		.section	.text.HAL_MMC_Init,"ax",%progbits
 3211              		.align	1
 3212              		.global	HAL_MMC_Init
 3213              		.syntax unified
 3214              		.thumb
 3215              		.thumb_func
 3216              		.fpu fpv5-sp-d16
 3218              	HAL_MMC_Init:
 3219              	.LFB138:
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Check the MMC handle allocation */
 3220              		.loc 1 293 0
 3221              		.cfi_startproc
 3222              		@ args = 0, pretend = 0, frame = 0
 3223              		@ frame_needed = 0, uses_anonymous_args = 0
 3224              	.LVL386:
 295:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3225              		.loc 1 295 0
 3226 0000 A8B1     		cbz	r0, .L204
 293:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Check the MMC handle allocation */
 3227              		.loc 1 293 0
 3228 0002 10B5     		push	{r4, lr}
 3229              	.LCFI46:
 3230              		.cfi_def_cfa_offset 8
 3231              		.cfi_offset 4, -8
 3232              		.cfi_offset 14, -4
 3233 0004 0446     		mov	r4, r0
 309:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3234              		.loc 1 309 0
 3235 0006 90F83430 		ldrb	r3, [r0, #52]	@ zero_extendqisi2
 3236 000a 63B1     		cbz	r3, .L209
 3237              	.LVL387:
 3238              	.L203:
 317:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3239              		.loc 1 317 0
 3240 000c 0323     		movs	r3, #3
 3241 000e 84F83430 		strb	r3, [r4, #52]
 320:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3242              		.loc 1 320 0
 3243 0012 2046     		mov	r0, r4
 3244 0014 FFF7FEFF 		bl	HAL_MMC_InitCard
 3245              	.LVL388:
 323:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 3246              		.loc 1 323 0
 3247 0018 0020     		movs	r0, #0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 111


 3248 001a A063     		str	r0, [r4, #56]
 326:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                                                                                      
 3249              		.loc 1 326 0
 3250 001c 2063     		str	r0, [r4, #48]
 329:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3251              		.loc 1 329 0
 3252 001e 0123     		movs	r3, #1
 3253 0020 84F83430 		strb	r3, [r4, #52]
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3254              		.loc 1 332 0
 3255 0024 10BD     		pop	{r4, pc}
 3256              	.LVL389:
 3257              	.L209:
 312:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 3258              		.loc 1 312 0
 3259 0026 0377     		strb	r3, [r0, #28]
 314:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3260              		.loc 1 314 0
 3261 0028 FFF7FEFF 		bl	HAL_MMC_MspInit
 3262              	.LVL390:
 3263 002c EEE7     		b	.L203
 3264              	.LVL391:
 3265              	.L204:
 3266              	.LCFI47:
 3267              		.cfi_def_cfa_offset 0
 3268              		.cfi_restore 4
 3269              		.cfi_restore 14
 297:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3270              		.loc 1 297 0
 3271 002e 0120     		movs	r0, #1
 3272              	.LVL392:
 332:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3273              		.loc 1 332 0
 3274 0030 7047     		bx	lr
 3275              		.cfi_endproc
 3276              	.LFE138:
 3278              		.section	.text.HAL_MMC_GetCardInfo,"ax",%progbits
 3279              		.align	1
 3280              		.global	HAL_MMC_GetCardInfo
 3281              		.syntax unified
 3282              		.thumb
 3283              		.thumb_func
 3284              		.fpu fpv5-sp-d16
 3286              	HAL_MMC_GetCardInfo:
 3287              	.LFB159:
1808:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->CardType     = (uint32_t)(hmmc->MmcCard.CardType);
 3288              		.loc 1 1808 0
 3289              		.cfi_startproc
 3290              		@ args = 0, pretend = 0, frame = 0
 3291              		@ frame_needed = 0, uses_anonymous_args = 0
 3292              		@ link register save eliminated.
 3293              	.LVL393:
1809:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->Class        = (uint32_t)(hmmc->MmcCard.Class);
 3294              		.loc 1 1809 0
 3295 0000 436C     		ldr	r3, [r0, #68]
 3296 0002 0B60     		str	r3, [r1]
1810:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->RelCardAdd   = (uint32_t)(hmmc->MmcCard.RelCardAdd);
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 112


 3297              		.loc 1 1810 0
 3298 0004 836C     		ldr	r3, [r0, #72]
 3299 0006 4B60     		str	r3, [r1, #4]
1811:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->BlockNbr     = (uint32_t)(hmmc->MmcCard.BlockNbr);
 3300              		.loc 1 1811 0
 3301 0008 C36C     		ldr	r3, [r0, #76]
 3302 000a 8B60     		str	r3, [r1, #8]
1812:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->BlockSize    = (uint32_t)(hmmc->MmcCard.BlockSize);
 3303              		.loc 1 1812 0
 3304 000c 036D     		ldr	r3, [r0, #80]
 3305 000e CB60     		str	r3, [r1, #12]
1813:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->LogBlockNbr  = (uint32_t)(hmmc->MmcCard.LogBlockNbr);
 3306              		.loc 1 1813 0
 3307 0010 436D     		ldr	r3, [r0, #84]
 3308 0012 0B61     		str	r3, [r1, #16]
1814:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   pCardInfo->LogBlockSize = (uint32_t)(hmmc->MmcCard.LogBlockSize);
 3309              		.loc 1 1814 0
 3310 0014 836D     		ldr	r3, [r0, #88]
 3311 0016 4B61     		str	r3, [r1, #20]
1815:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 3312              		.loc 1 1815 0
 3313 0018 C36D     		ldr	r3, [r0, #92]
 3314 001a 8B61     		str	r3, [r1, #24]
1818:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3315              		.loc 1 1818 0
 3316 001c 0020     		movs	r0, #0
 3317              	.LVL394:
 3318 001e 7047     		bx	lr
 3319              		.cfi_endproc
 3320              	.LFE159:
 3322              		.section	.text.HAL_MMC_ConfigWideBusOperation,"ax",%progbits
 3323              		.align	1
 3324              		.global	HAL_MMC_ConfigWideBusOperation
 3325              		.syntax unified
 3326              		.thumb
 3327              		.thumb_func
 3328              		.fpu fpv5-sp-d16
 3330              	HAL_MMC_ConfigWideBusOperation:
 3331              	.LFB160:
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   __IO uint32_t count = 0;
 3332              		.loc 1 1832 0
 3333              		.cfi_startproc
 3334              		@ args = 0, pretend = 0, frame = 32
 3335              		@ frame_needed = 0, uses_anonymous_args = 0
 3336              	.LVL395:
 3337 0000 30B5     		push	{r4, r5, lr}
 3338              	.LCFI48:
 3339              		.cfi_def_cfa_offset 12
 3340              		.cfi_offset 4, -12
 3341              		.cfi_offset 5, -8
 3342              		.cfi_offset 14, -4
 3343 0002 8DB0     		sub	sp, sp, #52
 3344              	.LCFI49:
 3345              		.cfi_def_cfa_offset 64
 3346 0004 0446     		mov	r4, r0
 3347 0006 0D46     		mov	r5, r1
1833:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   SDMMC_InitTypeDef Init;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 113


 3348              		.loc 1 1833 0
 3349 0008 0023     		movs	r3, #0
 3350 000a 0B93     		str	r3, [sp, #44]
 3351              	.LVL396:
1842:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 3352              		.loc 1 1842 0
 3353 000c 0322     		movs	r2, #3
 3354 000e 80F83420 		strb	r2, [r0, #52]
1845:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockBypass         = SDMMC_CLOCK_BYPASS_DISABLE;
 3355              		.loc 1 1845 0
 3356 0012 0593     		str	r3, [sp, #20]
1846:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockPowerSave      = SDMMC_CLOCK_POWER_SAVE_DISABLE;
 3357              		.loc 1 1846 0
 3358 0014 0693     		str	r3, [sp, #24]
1847:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.BusWide             = WideMode;
 3359              		.loc 1 1847 0
 3360 0016 0793     		str	r3, [sp, #28]
1848:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.HardwareFlowControl = SDMMC_HARDWARE_FLOW_CONTROL_DISABLE;
 3361              		.loc 1 1848 0
 3362 0018 0891     		str	r1, [sp, #32]
1849:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   Init.ClockDiv            = SDMMC_INIT_CLK_DIV;
 3363              		.loc 1 1849 0
 3364 001a 0993     		str	r3, [sp, #36]
1850:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   /* Initialize SDMMC*/
 3365              		.loc 1 1850 0
 3366 001c 7623     		movs	r3, #118
 3367 001e 0A93     		str	r3, [sp, #40]
1852:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 3368              		.loc 1 1852 0
 3369 0020 08AB     		add	r3, sp, #32
 3370 0022 93E80700 		ldm	r3, {r0, r1, r2}
 3371              	.LVL397:
 3372 0026 8DE80700 		stm	sp, {r0, r1, r2}
 3373 002a 05AB     		add	r3, sp, #20
 3374 002c 0ECB     		ldm	r3, {r1, r2, r3}
 3375 002e 2068     		ldr	r0, [r4]
 3376 0030 FFF7FEFF 		bl	SDMMC_Init
 3377              	.LVL398:
1854:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3378              		.loc 1 1854 0
 3379 0034 B5F5805F 		cmp	r5, #4096
 3380 0038 0AD0     		beq	.L227
1862:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3381              		.loc 1 1862 0
 3382 003a B5F5006F 		cmp	r5, #2048
 3383 003e 11D0     		beq	.L228
1870:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3384              		.loc 1 1870 0
 3385 0040 D5B1     		cbz	r5, .L229
1881:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3386              		.loc 1 1881 0
 3387 0042 A36B     		ldr	r3, [r4, #56]
 3388 0044 43F00063 		orr	r3, r3, #134217728
 3389 0048 A363     		str	r3, [r4, #56]
 3390              	.LVL399:
 3391              	.L213:
1832:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   __IO uint32_t count = 0;
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 114


 3392              		.loc 1 1832 0
 3393 004a 0023     		movs	r3, #0
 3394 004c 1846     		mov	r0, r3
 3395 004e 2FE0     		b	.L214
 3396              	.LVL400:
 3397              	.L227:
1856:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 3398              		.loc 1 1856 0
 3399 0050 4549     		ldr	r1, .L234
 3400 0052 2068     		ldr	r0, [r4]
 3401 0054 FFF7FEFF 		bl	SDMMC_CmdSwitch
 3402              	.LVL401:
1857:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 3403              		.loc 1 1857 0
 3404 0058 0028     		cmp	r0, #0
 3405 005a F6D0     		beq	.L213
1859:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 3406              		.loc 1 1859 0
 3407 005c A36B     		ldr	r3, [r4, #56]
 3408 005e 0343     		orrs	r3, r3, r0
 3409 0060 A363     		str	r3, [r4, #56]
 3410 0062 F2E7     		b	.L213
 3411              	.LVL402:
 3412              	.L228:
1864:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 3413              		.loc 1 1864 0
 3414 0064 4149     		ldr	r1, .L234+4
 3415 0066 2068     		ldr	r0, [r4]
 3416 0068 FFF7FEFF 		bl	SDMMC_CmdSwitch
 3417              	.LVL403:
1865:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 3418              		.loc 1 1865 0
 3419 006c 0028     		cmp	r0, #0
 3420 006e ECD0     		beq	.L213
1867:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 3421              		.loc 1 1867 0
 3422 0070 A36B     		ldr	r3, [r4, #56]
 3423 0072 0343     		orrs	r3, r3, r0
 3424 0074 A363     		str	r3, [r4, #56]
 3425 0076 E8E7     		b	.L213
 3426              	.LVL404:
 3427              	.L229:
1872:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 3428              		.loc 1 1872 0
 3429 0078 3D49     		ldr	r1, .L234+8
 3430 007a 2068     		ldr	r0, [r4]
 3431 007c FFF7FEFF 		bl	SDMMC_CmdSwitch
 3432              	.LVL405:
1873:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 3433              		.loc 1 1873 0
 3434 0080 0028     		cmp	r0, #0
 3435 0082 E2D0     		beq	.L213
1875:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 3436              		.loc 1 1875 0
 3437 0084 A36B     		ldr	r3, [r4, #56]
 3438 0086 0343     		orrs	r3, r3, r0
 3439 0088 A363     		str	r3, [r4, #56]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 115


 3440 008a DEE7     		b	.L213
 3441              	.LVL406:
 3442              	.L231:
1889:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_REQUEST_NOT_APPLICABLE;
 3443              		.loc 1 1889 0
 3444 008c 0120     		movs	r0, #1
 3445              	.LVL407:
 3446 008e 84F83400 		strb	r0, [r4, #52]
1890:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 3447              		.loc 1 1890 0
 3448 0092 A36B     		ldr	r3, [r4, #56]
 3449 0094 43F08063 		orr	r3, r3, #67108864
 3450 0098 A363     		str	r3, [r4, #56]
 3451              	.L218:
1953:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3452              		.loc 1 1953 0
 3453 009a 0DB0     		add	sp, sp, #52
 3454              	.LCFI50:
 3455              		.cfi_remember_state
 3456              		.cfi_def_cfa_offset 12
 3457              		@ sp needed
 3458 009c 30BD     		pop	{r4, r5, pc}
 3459              	.LVL408:
 3460              	.L219:
 3461              	.LCFI51:
 3462              		.cfi_restore_state
1902:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 3463              		.loc 1 1902 0
 3464 009e 0021     		movs	r1, #0
 3465 00a0 2068     		ldr	r0, [r4]
 3466 00a2 FFF7FEFF 		bl	SDMMC_GetResponse
 3467              	.LVL409:
1905:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3468              		.loc 1 1905 0
 3469 00a6 C309     		lsrs	r3, r0, #7
 3470 00a8 13F1FF33 		adds	r3, r3, #-1
 3471 00ac 18BF     		it	ne
 3472 00ae 0123     		movne	r3, #1
 3473              	.LVL410:
 3474              	.L214:
1885:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3475              		.loc 1 1885 0
 3476 00b0 93B9     		cbnz	r3, .L230
1887:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 3477              		.loc 1 1887 0
 3478 00b2 0B9B     		ldr	r3, [sp, #44]
 3479              	.LVL411:
 3480 00b4 5A1C     		adds	r2, r3, #1
 3481 00b6 0B92     		str	r2, [sp, #44]
 3482 00b8 4FF6FF72 		movw	r2, #65535
 3483 00bc 9342     		cmp	r3, r2
 3484 00be E5D0     		beq	.L231
1895:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 3485              		.loc 1 1895 0
 3486 00c0 E16C     		ldr	r1, [r4, #76]
 3487 00c2 0904     		lsls	r1, r1, #16
 3488 00c4 2068     		ldr	r0, [r4]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 116


 3489              	.LVL412:
 3490 00c6 FFF7FEFF 		bl	SDMMC_CmdSendStatus
 3491              	.LVL413:
1896:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 3492              		.loc 1 1896 0
 3493 00ca 0346     		mov	r3, r0
 3494 00cc 0028     		cmp	r0, #0
 3495 00ce E6D0     		beq	.L219
1898:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 3496              		.loc 1 1898 0
 3497 00d0 A06B     		ldr	r0, [r4, #56]
 3498              	.LVL414:
 3499 00d2 1843     		orrs	r0, r0, r3
 3500 00d4 A063     		str	r0, [r4, #56]
 3501 00d6 E2E7     		b	.L219
 3502              	.LVL415:
 3503              	.L230:
1909:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   while((response & 0x00000100) == 0)
 3504              		.loc 1 1909 0
 3505 00d8 4FF0FF33 		mov	r3, #-1
 3506              	.LVL416:
 3507 00dc 0B93     		str	r3, [sp, #44]
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3508              		.loc 1 1910 0
 3509 00de 0BE0     		b	.L221
 3510              	.L233:
1914:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       hmmc->ErrorCode |= HAL_MMC_ERROR_REQUEST_NOT_APPLICABLE;
 3511              		.loc 1 1914 0
 3512 00e0 0120     		movs	r0, #1
 3513              	.LVL417:
 3514 00e2 84F83400 		strb	r0, [r4, #52]
1915:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       return HAL_ERROR;
 3515              		.loc 1 1915 0
 3516 00e6 A36B     		ldr	r3, [r4, #56]
 3517 00e8 43F08063 		orr	r3, r3, #67108864
 3518 00ec A363     		str	r3, [r4, #56]
1916:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 3519              		.loc 1 1916 0
 3520 00ee D4E7     		b	.L218
 3521              	.LVL418:
 3522              	.L223:
1927:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3523              		.loc 1 1927 0
 3524 00f0 0021     		movs	r1, #0
 3525 00f2 2068     		ldr	r0, [r4]
 3526 00f4 FFF7FEFF 		bl	SDMMC_GetResponse
 3527              	.LVL419:
 3528              	.L221:
1910:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3529              		.loc 1 1910 0
 3530 00f8 10F4807F 		tst	r0, #256
 3531 00fc 10D1     		bne	.L232
1912:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 3532              		.loc 1 1912 0
 3533 00fe 0B9B     		ldr	r3, [sp, #44]
 3534 0100 5A1E     		subs	r2, r3, #1
 3535 0102 0B92     		str	r2, [sp, #44]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 117


 3536 0104 002B     		cmp	r3, #0
 3537 0106 EBD0     		beq	.L233
1920:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if(errorstate != HAL_MMC_ERROR_NONE)
 3538              		.loc 1 1920 0
 3539 0108 E16C     		ldr	r1, [r4, #76]
 3540 010a 0904     		lsls	r1, r1, #16
 3541 010c 2068     		ldr	r0, [r4]
 3542              	.LVL420:
 3543 010e FFF7FEFF 		bl	SDMMC_CmdSendStatus
 3544              	.LVL421:
1921:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 3545              		.loc 1 1921 0
 3546 0112 0346     		mov	r3, r0
 3547 0114 0028     		cmp	r0, #0
 3548 0116 EBD0     		beq	.L223
1923:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 3549              		.loc 1 1923 0
 3550 0118 A06B     		ldr	r0, [r4, #56]
 3551              	.LVL422:
 3552 011a 1843     		orrs	r0, r0, r3
 3553 011c A063     		str	r0, [r4, #56]
 3554 011e E7E7     		b	.L223
 3555              	.LVL423:
 3556              	.L232:
1930:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3557              		.loc 1 1930 0
 3558 0120 A36B     		ldr	r3, [r4, #56]
 3559 0122 3BB1     		cbz	r3, .L225
1933:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_READY;
 3560              		.loc 1 1933 0
 3561 0124 2368     		ldr	r3, [r4]
 3562 0126 40F2FF52 		movw	r2, #1535
 3563 012a 9A63     		str	r2, [r3, #56]
1934:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     return HAL_ERROR;
 3564              		.loc 1 1934 0
 3565 012c 0120     		movs	r0, #1
 3566              	.LVL424:
 3567 012e 84F83400 		strb	r0, [r4, #52]
1935:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3568              		.loc 1 1935 0
 3569 0132 B2E7     		b	.L218
 3570              	.LVL425:
 3571              	.L225:
1940:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     Init.ClockBypass         = hmmc->Init.ClockBypass;
 3572              		.loc 1 1940 0
 3573 0134 6368     		ldr	r3, [r4, #4]
 3574 0136 0593     		str	r3, [sp, #20]
1941:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     Init.ClockPowerSave      = hmmc->Init.ClockPowerSave;
 3575              		.loc 1 1941 0
 3576 0138 A368     		ldr	r3, [r4, #8]
 3577 013a 0693     		str	r3, [sp, #24]
1942:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     Init.BusWide             = WideMode;
 3578              		.loc 1 1942 0
 3579 013c E368     		ldr	r3, [r4, #12]
 3580 013e 0793     		str	r3, [sp, #28]
1943:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     Init.HardwareFlowControl = hmmc->Init.HardwareFlowControl;
 3581              		.loc 1 1943 0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 118


 3582 0140 0895     		str	r5, [sp, #32]
1944:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     Init.ClockDiv            = hmmc->Init.ClockDiv;
 3583              		.loc 1 1944 0
 3584 0142 6369     		ldr	r3, [r4, #20]
 3585 0144 0993     		str	r3, [sp, #36]
1945:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     SDMMC_Init(hmmc->Instance, Init);
 3586              		.loc 1 1945 0
 3587 0146 A369     		ldr	r3, [r4, #24]
 3588 0148 0A93     		str	r3, [sp, #40]
1946:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3589              		.loc 1 1946 0
 3590 014a 08AB     		add	r3, sp, #32
 3591 014c 93E80700 		ldm	r3, {r0, r1, r2}
 3592              	.LVL426:
 3593 0150 8DE80700 		stm	sp, {r0, r1, r2}
 3594 0154 05AB     		add	r3, sp, #20
 3595 0156 0ECB     		ldm	r3, {r1, r2, r3}
 3596 0158 2068     		ldr	r0, [r4]
 3597 015a FFF7FEFF 		bl	SDMMC_Init
 3598              	.LVL427:
1950:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 3599              		.loc 1 1950 0
 3600 015e 0123     		movs	r3, #1
 3601 0160 84F83430 		strb	r3, [r4, #52]
1952:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 3602              		.loc 1 1952 0
 3603 0164 0020     		movs	r0, #0
 3604 0166 98E7     		b	.L218
 3605              	.L235:
 3606              		.align	2
 3607              	.L234:
 3608 0168 0002B703 		.word	62325248
 3609 016c 0001B703 		.word	62324992
 3610 0170 0000B703 		.word	62324736
 3611              		.cfi_endproc
 3612              	.LFE160:
 3614              		.section	.text.HAL_MMC_GetCardState,"ax",%progbits
 3615              		.align	1
 3616              		.global	HAL_MMC_GetCardState
 3617              		.syntax unified
 3618              		.thumb
 3619              		.thumb_func
 3620              		.fpu fpv5-sp-d16
 3622              	HAL_MMC_GetCardState:
 3623              	.LFB161:
1962:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardStateTypeDef cardstate =  HAL_MMC_CARD_TRANSFER;
 3624              		.loc 1 1962 0
 3625              		.cfi_startproc
 3626              		@ args = 0, pretend = 0, frame = 8
 3627              		@ frame_needed = 0, uses_anonymous_args = 0
 3628              	.LVL428:
 3629 0000 10B5     		push	{r4, lr}
 3630              	.LCFI52:
 3631              		.cfi_def_cfa_offset 8
 3632              		.cfi_offset 4, -8
 3633              		.cfi_offset 14, -4
 3634 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 119


 3635              	.LCFI53:
 3636              		.cfi_def_cfa_offset 16
 3637 0004 0446     		mov	r4, r0
 3638              	.LVL429:
1965:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 3639              		.loc 1 1965 0
 3640 0006 02A9     		add	r1, sp, #8
 3641 0008 0023     		movs	r3, #0
 3642 000a 41F8043D 		str	r3, [r1, #-4]!
1967:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if(errorstate != HAL_OK)
 3643              		.loc 1 1967 0
 3644 000e FFF7FEFF 		bl	MMC_SendStatus
 3645              	.LVL430:
1968:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3646              		.loc 1 1968 0
 3647 0012 18B1     		cbz	r0, .L237
 3648 0014 0346     		mov	r3, r0
1970:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3649              		.loc 1 1970 0
 3650 0016 A06B     		ldr	r0, [r4, #56]
 3651              	.LVL431:
 3652 0018 1843     		orrs	r0, r0, r3
 3653 001a A063     		str	r0, [r4, #56]
 3654              	.LVL432:
 3655              	.L237:
1976:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3656              		.loc 1 1976 0
 3657 001c 0198     		ldr	r0, [sp, #4]
 3658 001e C0F34320 		ubfx	r0, r0, #9, #4
 3659 0022 02B0     		add	sp, sp, #8
 3660              	.LCFI54:
 3661              		.cfi_def_cfa_offset 8
 3662              		@ sp needed
 3663 0024 10BD     		pop	{r4, pc}
 3664              		.cfi_endproc
 3665              	.LFE161:
 3667              		.section	.text.MMC_DMAError,"ax",%progbits
 3668              		.align	1
 3669              		.syntax unified
 3670              		.thumb
 3671              		.thumb_func
 3672              		.fpu fpv5-sp-d16
 3674              	MMC_DMAError:
 3675              	.LFB166:
2154:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   MMC_HandleTypeDef* hmmc = (MMC_HandleTypeDef* )(hdma->Parent);
 3676              		.loc 1 2154 0
 3677              		.cfi_startproc
 3678              		@ args = 0, pretend = 0, frame = 0
 3679              		@ frame_needed = 0, uses_anonymous_args = 0
 3680              	.LVL433:
 3681 0000 10B5     		push	{r4, lr}
 3682              	.LCFI55:
 3683              		.cfi_def_cfa_offset 8
 3684              		.cfi_offset 4, -8
 3685              		.cfi_offset 14, -4
2155:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardStateTypeDef CardState;
 3686              		.loc 1 2155 0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 120


 3687 0002 846B     		ldr	r4, [r0, #56]
 3688              	.LVL434:
2159:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3689              		.loc 1 2159 0
 3690 0004 FFF7FEFF 		bl	HAL_DMA_GetError
 3691              	.LVL435:
 3692 0008 0228     		cmp	r0, #2
 3693 000a 0AD0     		beq	.L239
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 3694              		.loc 1 2161 0
 3695 000c E36B     		ldr	r3, [r4, #60]
 3696 000e 5B6D     		ldr	r3, [r3, #84]
 3697 0010 012B     		cmp	r3, #1
 3698 0012 07D0     		beq	.L241
2161:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 3699              		.loc 1 2161 0 is_stmt 0 discriminator 1
 3700 0014 236C     		ldr	r3, [r4, #64]
 3701 0016 5B6D     		ldr	r3, [r3, #84]
 3702 0018 012B     		cmp	r3, #1
 3703 001a 03D0     		beq	.L241
 3704              	.L242:
2180:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3705              		.loc 1 2180 0 is_stmt 1
 3706 001c 2046     		mov	r0, r4
 3707 001e FFF7FEFF 		bl	HAL_MMC_ErrorCallback
 3708              	.LVL436:
 3709              	.L239:
2182:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3710              		.loc 1 2182 0
 3711 0022 10BD     		pop	{r4, pc}
 3712              	.LVL437:
 3713              	.L241:
2164:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 3714              		.loc 1 2164 0
 3715 0024 2368     		ldr	r3, [r4]
 3716 0026 40F2FF52 		movw	r2, #1535
 3717 002a 9A63     		str	r2, [r3, #56]
2167:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         SDMMC_IT_TXUNDERR| SDMMC_IT_RXOVERR);
 3718              		.loc 1 2167 0
 3719 002c 2268     		ldr	r2, [r4]
 3720 002e D36B     		ldr	r3, [r2, #60]
 3721 0030 23F49D73 		bic	r3, r3, #314
 3722 0034 D363     		str	r3, [r2, #60]
2170:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       CardState = HAL_MMC_GetCardState(hmmc);
 3723              		.loc 1 2170 0
 3724 0036 A36B     		ldr	r3, [r4, #56]
 3725 0038 43F08043 		orr	r3, r3, #1073741824
 3726 003c A363     		str	r3, [r4, #56]
2171:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if((CardState == HAL_MMC_CARD_RECEIVING) || (CardState == HAL_MMC_CARD_SENDING))
 3727              		.loc 1 2171 0
 3728 003e 2046     		mov	r0, r4
 3729 0040 FFF7FEFF 		bl	HAL_MMC_GetCardState
 3730              	.LVL438:
2172:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 3731              		.loc 1 2172 0
 3732 0044 0538     		subs	r0, r0, #5
 3733              	.LVL439:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 121


 3734 0046 C0B2     		uxtb	r0, r0
 3735 0048 0128     		cmp	r0, #1
 3736 004a 03D9     		bls	.L245
 3737              	.L243:
2177:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 3738              		.loc 1 2177 0
 3739 004c 0123     		movs	r3, #1
 3740 004e 84F83430 		strb	r3, [r4, #52]
 3741 0052 E3E7     		b	.L242
 3742              	.L245:
2174:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 3743              		.loc 1 2174 0
 3744 0054 2068     		ldr	r0, [r4]
 3745 0056 FFF7FEFF 		bl	SDMMC_CmdStopTransfer
 3746              	.LVL440:
 3747 005a A36B     		ldr	r3, [r4, #56]
 3748 005c 1843     		orrs	r0, r0, r3
 3749 005e A063     		str	r0, [r4, #56]
 3750 0060 F4E7     		b	.L243
 3751              		.cfi_endproc
 3752              	.LFE166:
 3754              		.section	.text.MMC_DMATxAbort,"ax",%progbits
 3755              		.align	1
 3756              		.syntax unified
 3757              		.thumb
 3758              		.thumb_func
 3759              		.fpu fpv5-sp-d16
 3761              	MMC_DMATxAbort:
 3762              	.LFB167:
2190:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   MMC_HandleTypeDef* hmmc = (MMC_HandleTypeDef* )(hdma->Parent);
 3763              		.loc 1 2190 0
 3764              		.cfi_startproc
 3765              		@ args = 0, pretend = 0, frame = 0
 3766              		@ frame_needed = 0, uses_anonymous_args = 0
 3767              	.LVL441:
 3768 0000 10B5     		push	{r4, lr}
 3769              	.LCFI56:
 3770              		.cfi_def_cfa_offset 8
 3771              		.cfi_offset 4, -8
 3772              		.cfi_offset 14, -4
2191:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardStateTypeDef CardState;
 3773              		.loc 1 2191 0
 3774 0002 846B     		ldr	r4, [r0, #56]
 3775              	.LVL442:
2194:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3776              		.loc 1 2194 0
 3777 0004 236C     		ldr	r3, [r4, #64]
 3778 0006 0BB1     		cbz	r3, .L247
2196:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3779              		.loc 1 2196 0
 3780 0008 0023     		movs	r3, #0
 3781 000a 2364     		str	r3, [r4, #64]
 3782              	.L247:
2200:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3783              		.loc 1 2200 0
 3784 000c E36B     		ldr	r3, [r4, #60]
 3785 000e 03B1     		cbz	r3, .L251
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 122


 3786              	.LVL443:
 3787              	.L246:
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3788              		.loc 1 2219 0
 3789 0010 10BD     		pop	{r4, pc}
 3790              	.LVL444:
 3791              	.L251:
2202:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode = HAL_MMC_ERROR_NONE;
 3792              		.loc 1 2202 0
 3793 0012 2046     		mov	r0, r4
 3794              	.LVL445:
 3795 0014 FFF7FEFF 		bl	HAL_MMC_GetCardState
 3796              	.LVL446:
2203:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_READY;
 3797              		.loc 1 2203 0
 3798 0018 0023     		movs	r3, #0
 3799 001a A363     		str	r3, [r4, #56]
2204:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((CardState == HAL_MMC_CARD_RECEIVING) || (CardState == HAL_MMC_CARD_SENDING))
 3800              		.loc 1 2204 0
 3801 001c 0123     		movs	r3, #1
 3802 001e 84F83430 		strb	r3, [r4, #52]
2205:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 3803              		.loc 1 2205 0
 3804 0022 0538     		subs	r0, r0, #5
 3805              	.LVL447:
 3806 0024 C0B2     		uxtb	r0, r0
 3807 0026 9842     		cmp	r0, r3
 3808 0028 F2D8     		bhi	.L246
2207:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 3809              		.loc 1 2207 0
 3810 002a 2068     		ldr	r0, [r4]
 3811 002c FFF7FEFF 		bl	SDMMC_CmdStopTransfer
 3812              	.LVL448:
 3813 0030 A36B     		ldr	r3, [r4, #56]
 3814 0032 1843     		orrs	r0, r0, r3
 3815 0034 A063     		str	r0, [r4, #56]
2209:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 3816              		.loc 1 2209 0
 3817 0036 A36B     		ldr	r3, [r4, #56]
 3818 0038 1BB9     		cbnz	r3, .L252
2215:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 3819              		.loc 1 2215 0
 3820 003a 2046     		mov	r0, r4
 3821 003c FFF7FEFF 		bl	HAL_MMC_ErrorCallback
 3822              	.LVL449:
2219:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3823              		.loc 1 2219 0
 3824 0040 E6E7     		b	.L246
 3825              	.L252:
2211:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 3826              		.loc 1 2211 0
 3827 0042 2046     		mov	r0, r4
 3828 0044 FFF7FEFF 		bl	HAL_MMC_AbortCallback
 3829              	.LVL450:
 3830 0048 E2E7     		b	.L246
 3831              		.cfi_endproc
 3832              	.LFE167:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 123


 3834              		.section	.text.MMC_DMARxAbort,"ax",%progbits
 3835              		.align	1
 3836              		.syntax unified
 3837              		.thumb
 3838              		.thumb_func
 3839              		.fpu fpv5-sp-d16
 3841              	MMC_DMARxAbort:
 3842              	.LFB168:
2227:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   MMC_HandleTypeDef* hmmc = (MMC_HandleTypeDef* )(hdma->Parent);
 3843              		.loc 1 2227 0
 3844              		.cfi_startproc
 3845              		@ args = 0, pretend = 0, frame = 0
 3846              		@ frame_needed = 0, uses_anonymous_args = 0
 3847              	.LVL451:
 3848 0000 10B5     		push	{r4, lr}
 3849              	.LCFI57:
 3850              		.cfi_def_cfa_offset 8
 3851              		.cfi_offset 4, -8
 3852              		.cfi_offset 14, -4
2228:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardStateTypeDef CardState;
 3853              		.loc 1 2228 0
 3854 0002 846B     		ldr	r4, [r0, #56]
 3855              	.LVL452:
2231:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3856              		.loc 1 2231 0
 3857 0004 E36B     		ldr	r3, [r4, #60]
 3858 0006 0BB1     		cbz	r3, .L254
2233:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 3859              		.loc 1 2233 0
 3860 0008 0023     		movs	r3, #0
 3861 000a E363     		str	r3, [r4, #60]
 3862              	.L254:
2237:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3863              		.loc 1 2237 0
 3864 000c 236C     		ldr	r3, [r4, #64]
 3865 000e 03B1     		cbz	r3, .L258
 3866              	.LVL453:
 3867              	.L253:
2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3868              		.loc 1 2256 0
 3869 0010 10BD     		pop	{r4, pc}
 3870              	.LVL454:
 3871              	.L258:
2239:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->ErrorCode = HAL_MMC_ERROR_NONE;
 3872              		.loc 1 2239 0
 3873 0012 2046     		mov	r0, r4
 3874              	.LVL455:
 3875 0014 FFF7FEFF 		bl	HAL_MMC_GetCardState
 3876              	.LVL456:
2240:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_READY;
 3877              		.loc 1 2240 0
 3878 0018 0023     		movs	r3, #0
 3879 001a A363     		str	r3, [r4, #56]
2241:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((CardState == HAL_MMC_CARD_RECEIVING) || (CardState == HAL_MMC_CARD_SENDING))
 3880              		.loc 1 2241 0
 3881 001c 0123     		movs	r3, #1
 3882 001e 84F83430 		strb	r3, [r4, #52]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 124


2242:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 3883              		.loc 1 2242 0
 3884 0022 0538     		subs	r0, r0, #5
 3885              	.LVL457:
 3886 0024 C0B2     		uxtb	r0, r0
 3887 0026 9842     		cmp	r0, r3
 3888 0028 F2D8     		bhi	.L253
2244:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 3889              		.loc 1 2244 0
 3890 002a 2068     		ldr	r0, [r4]
 3891 002c FFF7FEFF 		bl	SDMMC_CmdStopTransfer
 3892              	.LVL458:
 3893 0030 A36B     		ldr	r3, [r4, #56]
 3894 0032 1843     		orrs	r0, r0, r3
 3895 0034 A063     		str	r0, [r4, #56]
2246:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 3896              		.loc 1 2246 0
 3897 0036 A36B     		ldr	r3, [r4, #56]
 3898 0038 1BB9     		cbnz	r3, .L259
2252:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 3899              		.loc 1 2252 0
 3900 003a 2046     		mov	r0, r4
 3901 003c FFF7FEFF 		bl	HAL_MMC_ErrorCallback
 3902              	.LVL459:
2256:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3903              		.loc 1 2256 0
 3904 0040 E6E7     		b	.L253
 3905              	.L259:
2248:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 3906              		.loc 1 2248 0
 3907 0042 2046     		mov	r0, r4
 3908 0044 FFF7FEFF 		bl	HAL_MMC_AbortCallback
 3909              	.LVL460:
 3910 0048 E2E7     		b	.L253
 3911              		.cfi_endproc
 3912              	.LFE168:
 3914              		.section	.text.HAL_MMC_IRQHandler,"ax",%progbits
 3915              		.align	1
 3916              		.global	HAL_MMC_IRQHandler
 3917              		.syntax unified
 3918              		.thumb
 3919              		.thumb_func
 3920              		.fpu fpv5-sp-d16
 3922              	HAL_MMC_IRQHandler:
 3923              	.LFB150:
1363:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   uint32_t errorstate = HAL_MMC_ERROR_NONE;
 3924              		.loc 1 1363 0
 3925              		.cfi_startproc
 3926              		@ args = 0, pretend = 0, frame = 0
 3927              		@ frame_needed = 0, uses_anonymous_args = 0
 3928              	.LVL461:
 3929 0000 10B5     		push	{r4, lr}
 3930              	.LCFI58:
 3931              		.cfi_def_cfa_offset 8
 3932              		.cfi_offset 4, -8
 3933              		.cfi_offset 14, -4
 3934 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 125


 3935              	.LVL462:
1367:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 3936              		.loc 1 1367 0
 3937 0004 0368     		ldr	r3, [r0]
 3938 0006 5A6B     		ldr	r2, [r3, #52]
 3939 0008 12F4807F 		tst	r2, #256
 3940 000c 5FD0     		beq	.L261
1369:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 3941              		.loc 1 1369 0
 3942 000e 4FF48072 		mov	r2, #256
 3943 0012 9A63     		str	r2, [r3, #56]
1371:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                              SDMMC_IT_TXUNDERR| SDMMC_IT_RXOVERR);
 3944              		.loc 1 1371 0
 3945 0014 0268     		ldr	r2, [r0]
 3946 0016 D36B     		ldr	r3, [r2, #60]
 3947 0018 23F49D73 		bic	r3, r3, #314
 3948 001c D363     		str	r3, [r2, #60]
1374:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 3949              		.loc 1 1374 0
 3950 001e 036B     		ldr	r3, [r0, #48]
 3951 0020 13F0080F 		tst	r3, #8
 3952 0024 2AD0     		beq	.L262
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 3953              		.loc 1 1376 0
 3954 0026 036B     		ldr	r3, [r0, #48]
 3955 0028 13F0020F 		tst	r3, #2
 3956 002c 03D1     		bne	.L263
1376:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 3957              		.loc 1 1376 0 is_stmt 0 discriminator 1
 3958 002e 036B     		ldr	r3, [r0, #48]
 3959 0030 13F0200F 		tst	r3, #32
 3960 0034 04D0     		beq	.L264
 3961              	.L263:
1378:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         if(errorstate != HAL_MMC_ERROR_NONE)
 3962              		.loc 1 1378 0 is_stmt 1
 3963 0036 2068     		ldr	r0, [r4]
 3964              	.LVL463:
 3965 0038 FFF7FEFF 		bl	SDMMC_CmdStopTransfer
 3966              	.LVL464:
1379:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
 3967              		.loc 1 1379 0
 3968 003c 0346     		mov	r3, r0
 3969 003e 90B9     		cbnz	r0, .L279
 3970              	.LVL465:
 3971              	.L264:
1387:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       
 3972              		.loc 1 1387 0
 3973 0040 2368     		ldr	r3, [r4]
 3974 0042 40F2FF52 		movw	r2, #1535
 3975 0046 9A63     		str	r2, [r3, #56]
1389:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(((hmmc->Context & MMC_CONTEXT_READ_SINGLE_BLOCK) != RESET) || ((hmmc->Context & MMC_CONTEX
 3976              		.loc 1 1389 0
 3977 0048 0123     		movs	r3, #1
 3978 004a 84F83430 		strb	r3, [r4, #52]
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 3979              		.loc 1 1390 0
 3980 004e 236B     		ldr	r3, [r4, #48]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 126


 3981 0050 13F0010F 		tst	r3, #1
 3982 0054 03D1     		bne	.L265
1390:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 3983              		.loc 1 1390 0 is_stmt 0 discriminator 1
 3984 0056 236B     		ldr	r3, [r4, #48]
 3985 0058 13F0020F 		tst	r3, #2
 3986 005c 0AD0     		beq	.L266
 3987              	.L265:
1392:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 3988              		.loc 1 1392 0 is_stmt 1
 3989 005e 2046     		mov	r0, r4
 3990 0060 FFF7FEFF 		bl	HAL_MMC_RxCpltCallback
 3991              	.LVL466:
 3992              	.L260:
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 3993              		.loc 1 1501 0
 3994 0064 10BD     		pop	{r4, pc}
 3995              	.LVL467:
 3996              	.L279:
1381:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****           HAL_MMC_ErrorCallback(hmmc);
 3997              		.loc 1 1381 0
 3998 0066 A26B     		ldr	r2, [r4, #56]
 3999 0068 1343     		orrs	r3, r3, r2
 4000 006a A363     		str	r3, [r4, #56]
1382:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         }
 4001              		.loc 1 1382 0
 4002 006c 2046     		mov	r0, r4
 4003              	.LVL468:
 4004 006e FFF7FEFF 		bl	HAL_MMC_ErrorCallback
 4005              	.LVL469:
 4006 0072 E5E7     		b	.L264
 4007              	.L266:
1396:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 4008              		.loc 1 1396 0
 4009 0074 2046     		mov	r0, r4
 4010 0076 FFF7FEFF 		bl	HAL_MMC_TxCpltCallback
 4011              	.LVL470:
 4012 007a F3E7     		b	.L260
 4013              	.LVL471:
 4014              	.L262:
1399:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 4015              		.loc 1 1399 0
 4016 007c 036B     		ldr	r3, [r0, #48]
 4017 007e 13F0800F 		tst	r3, #128
 4018 0082 EFD0     		beq	.L260
1401:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 4019              		.loc 1 1401 0
 4020 0084 036B     		ldr	r3, [r0, #48]
 4021 0086 13F0200F 		tst	r3, #32
 4022 008a 13D1     		bne	.L280
 4023              	.LVL472:
 4024              	.L268:
1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 4025              		.loc 1 1410 0
 4026 008c 236B     		ldr	r3, [r4, #48]
 4027 008e 13F0010F 		tst	r3, #1
 4028 0092 E7D1     		bne	.L260
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 127


1410:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 4029              		.loc 1 1410 0 is_stmt 0 discriminator 1
 4030 0094 236B     		ldr	r3, [r4, #48]
 4031 0096 13F0020F 		tst	r3, #2
 4032 009a E3D1     		bne	.L260
1414:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         
 4033              		.loc 1 1414 0 is_stmt 1
 4034 009c 2268     		ldr	r2, [r4]
 4035 009e D36A     		ldr	r3, [r2, #44]
 4036 00a0 23F00803 		bic	r3, r3, #8
 4037 00a4 D362     		str	r3, [r2, #44]
1416:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         
 4038              		.loc 1 1416 0
 4039 00a6 0123     		movs	r3, #1
 4040 00a8 84F83430 		strb	r3, [r4, #52]
1418:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 4041              		.loc 1 1418 0
 4042 00ac 2046     		mov	r0, r4
 4043 00ae FFF7FEFF 		bl	HAL_MMC_TxCpltCallback
 4044              	.LVL473:
 4045 00b2 D7E7     		b	.L260
 4046              	.LVL474:
 4047              	.L280:
1403:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         if(errorstate != HAL_MMC_ERROR_NONE)
 4048              		.loc 1 1403 0
 4049 00b4 0068     		ldr	r0, [r0]
 4050              	.LVL475:
 4051 00b6 FFF7FEFF 		bl	SDMMC_CmdStopTransfer
 4052              	.LVL476:
1404:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
 4053              		.loc 1 1404 0
 4054 00ba 0346     		mov	r3, r0
 4055 00bc 0028     		cmp	r0, #0
 4056 00be E5D0     		beq	.L268
1406:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****           HAL_MMC_ErrorCallback(hmmc);
 4057              		.loc 1 1406 0
 4058 00c0 A26B     		ldr	r2, [r4, #56]
 4059 00c2 1343     		orrs	r3, r3, r2
 4060 00c4 A363     		str	r3, [r4, #56]
1407:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         }
 4061              		.loc 1 1407 0
 4062 00c6 2046     		mov	r0, r4
 4063              	.LVL477:
 4064 00c8 FFF7FEFF 		bl	HAL_MMC_ErrorCallback
 4065              	.LVL478:
 4066 00cc DEE7     		b	.L268
 4067              	.LVL479:
 4068              	.L261:
1423:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 4069              		.loc 1 1423 0
 4070 00ce 5A6B     		ldr	r2, [r3, #52]
 4071 00d0 12F4804F 		tst	r2, #16384
 4072 00d4 40D1     		bne	.L281
1430:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 4073              		.loc 1 1430 0
 4074 00d6 5A6B     		ldr	r2, [r3, #52]
 4075 00d8 12F4004F 		tst	r2, #32768
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 128


 4076 00dc 42D1     		bne	.L282
1437:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 4077              		.loc 1 1437 0
 4078 00de 5A6B     		ldr	r2, [r3, #52]
 4079 00e0 12F03A0F 		tst	r2, #58
 4080 00e4 BED0     		beq	.L260
1440:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 4081              		.loc 1 1440 0
 4082 00e6 5A6B     		ldr	r2, [r3, #52]
 4083 00e8 12F0020F 		tst	r2, #2
 4084 00ec 03D0     		beq	.L271
1442:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 4085              		.loc 1 1442 0
 4086 00ee 826B     		ldr	r2, [r0, #56]
 4087 00f0 42F00202 		orr	r2, r2, #2
 4088 00f4 8263     		str	r2, [r0, #56]
 4089              	.L271:
1444:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 4090              		.loc 1 1444 0
 4091 00f6 5A6B     		ldr	r2, [r3, #52]
 4092 00f8 12F0080F 		tst	r2, #8
 4093 00fc 03D0     		beq	.L272
1446:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 4094              		.loc 1 1446 0
 4095 00fe A26B     		ldr	r2, [r4, #56]
 4096 0100 42F00802 		orr	r2, r2, #8
 4097 0104 A263     		str	r2, [r4, #56]
 4098              	.L272:
1448:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 4099              		.loc 1 1448 0
 4100 0106 5A6B     		ldr	r2, [r3, #52]
 4101 0108 12F0200F 		tst	r2, #32
 4102 010c 03D0     		beq	.L273
1450:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 4103              		.loc 1 1450 0
 4104 010e A26B     		ldr	r2, [r4, #56]
 4105 0110 42F02002 		orr	r2, r2, #32
 4106 0114 A263     		str	r2, [r4, #56]
 4107              	.L273:
1452:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 4108              		.loc 1 1452 0
 4109 0116 5A6B     		ldr	r2, [r3, #52]
 4110 0118 12F0100F 		tst	r2, #16
 4111 011c 03D0     		beq	.L274
1454:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 4112              		.loc 1 1454 0
 4113 011e A26B     		ldr	r2, [r4, #56]
 4114 0120 42F01002 		orr	r2, r2, #16
 4115 0124 A263     		str	r2, [r4, #56]
 4116              	.L274:
1458:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 4117              		.loc 1 1458 0
 4118 0126 40F2FF52 		movw	r2, #1535
 4119 012a 9A63     		str	r2, [r3, #56]
1461:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                              SDMMC_IT_TXUNDERR| SDMMC_IT_RXOVERR);
 4120              		.loc 1 1461 0
 4121 012c 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 129


 4122 012e D36B     		ldr	r3, [r2, #60]
 4123 0130 23F49D73 		bic	r3, r3, #314
 4124 0134 D363     		str	r3, [r2, #60]
1464:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 4125              		.loc 1 1464 0
 4126 0136 236B     		ldr	r3, [r4, #48]
 4127 0138 13F0800F 		tst	r3, #128
 4128 013c 2FD0     		beq	.L275
1467:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 4129              		.loc 1 1467 0
 4130 013e 236C     		ldr	r3, [r4, #64]
 4131 0140 B3B1     		cbz	r3, .L276
1470:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Abort DMA in IT mode */
 4132              		.loc 1 1470 0
 4133 0142 1D4A     		ldr	r2, .L283
 4134 0144 1A65     		str	r2, [r3, #80]
1472:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
 4135              		.loc 1 1472 0
 4136 0146 206C     		ldr	r0, [r4, #64]
 4137              	.LVL480:
 4138 0148 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4139              	.LVL481:
 4140 014c 0028     		cmp	r0, #0
 4141 014e 89D0     		beq	.L260
1474:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         }
 4142              		.loc 1 1474 0
 4143 0150 206C     		ldr	r0, [r4, #64]
 4144 0152 FFF7FEFF 		bl	MMC_DMATxAbort
 4145              	.LVL482:
 4146 0156 85E7     		b	.L260
 4147              	.LVL483:
 4148              	.L281:
1425:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 4149              		.loc 1 1425 0
 4150 0158 4FF48042 		mov	r2, #16384
 4151 015c 9A63     		str	r2, [r3, #56]
1427:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 4152              		.loc 1 1427 0
 4153 015e FFF7FEFF 		bl	MMC_Write_IT
 4154              	.LVL484:
 4155 0162 7FE7     		b	.L260
 4156              	.LVL485:
 4157              	.L282:
1432:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 4158              		.loc 1 1432 0
 4159 0164 4FF40042 		mov	r2, #32768
 4160 0168 9A63     		str	r2, [r3, #56]
1434:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 4161              		.loc 1 1434 0
 4162 016a FFF7FEFF 		bl	MMC_Read_IT
 4163              	.LVL486:
 4164 016e 79E7     		b	.L260
 4165              	.LVL487:
 4166              	.L276:
1477:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 4167              		.loc 1 1477 0
 4168 0170 E36B     		ldr	r3, [r4, #60]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 130


 4169 0172 5BB1     		cbz	r3, .L277
1480:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         /* Abort DMA in IT mode */
 4170              		.loc 1 1480 0
 4171 0174 114A     		ldr	r2, .L283+4
 4172 0176 1A65     		str	r2, [r3, #80]
1482:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         {
 4173              		.loc 1 1482 0
 4174 0178 E06B     		ldr	r0, [r4, #60]
 4175              	.LVL488:
 4176 017a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4177              	.LVL489:
 4178 017e 0028     		cmp	r0, #0
 4179 0180 3FF470AF 		beq	.L260
1484:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         }
 4180              		.loc 1 1484 0
 4181 0184 E06B     		ldr	r0, [r4, #60]
 4182 0186 FFF7FEFF 		bl	MMC_DMARxAbort
 4183              	.LVL490:
 4184 018a 6BE7     		b	.L260
 4185              	.LVL491:
 4186              	.L277:
1489:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         hmmc->State = HAL_MMC_STATE_READY;
 4187              		.loc 1 1489 0
 4188 018c 0023     		movs	r3, #0
 4189 018e A363     		str	r3, [r4, #56]
1490:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****         HAL_MMC_AbortCallback(hmmc);
 4190              		.loc 1 1490 0
 4191 0190 0123     		movs	r3, #1
 4192 0192 84F83430 		strb	r3, [r4, #52]
1491:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 4193              		.loc 1 1491 0
 4194 0196 2046     		mov	r0, r4
 4195              	.LVL492:
 4196 0198 FFF7FEFF 		bl	HAL_MMC_AbortCallback
 4197              	.LVL493:
 4198 019c 62E7     		b	.L260
 4199              	.LVL494:
 4200              	.L275:
1494:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 4201              		.loc 1 1494 0
 4202 019e 236B     		ldr	r3, [r4, #48]
 4203 01a0 13F0080F 		tst	r3, #8
 4204 01a4 3FF45EAF 		beq	.L260
1497:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       HAL_MMC_ErrorCallback(hmmc);
 4205              		.loc 1 1497 0
 4206 01a8 0123     		movs	r3, #1
 4207 01aa 84F83430 		strb	r3, [r4, #52]
1498:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 4208              		.loc 1 1498 0
 4209 01ae 2046     		mov	r0, r4
 4210              	.LVL495:
 4211 01b0 FFF7FEFF 		bl	HAL_MMC_ErrorCallback
 4212              	.LVL496:
1501:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 4213              		.loc 1 1501 0
 4214 01b4 56E7     		b	.L260
 4215              	.L284:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 131


 4216 01b6 00BF     		.align	2
 4217              	.L283:
 4218 01b8 00000000 		.word	MMC_DMATxAbort
 4219 01bc 00000000 		.word	MMC_DMARxAbort
 4220              		.cfi_endproc
 4221              	.LFE150:
 4223              		.section	.text.HAL_MMC_Abort,"ax",%progbits
 4224              		.align	1
 4225              		.global	HAL_MMC_Abort
 4226              		.syntax unified
 4227              		.thumb
 4228              		.thumb_func
 4229              		.fpu fpv5-sp-d16
 4231              	HAL_MMC_Abort:
 4232              	.LFB162:
1985:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardStateTypeDef CardState;
 4233              		.loc 1 1985 0
 4234              		.cfi_startproc
 4235              		@ args = 0, pretend = 0, frame = 0
 4236              		@ frame_needed = 0, uses_anonymous_args = 0
 4237              	.LVL497:
 4238 0000 10B5     		push	{r4, lr}
 4239              	.LCFI59:
 4240              		.cfi_def_cfa_offset 8
 4241              		.cfi_offset 4, -8
 4242              		.cfi_offset 14, -4
 4243 0002 0446     		mov	r4, r0
1989:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                            SDMMC_IT_TXUNDERR| SDMMC_IT_RXOVERR);
 4244              		.loc 1 1989 0
 4245 0004 0268     		ldr	r2, [r0]
 4246 0006 D36B     		ldr	r3, [r2, #60]
 4247 0008 23F49D73 		bic	r3, r3, #314
 4248 000c D363     		str	r3, [r2, #60]
1993:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 4249              		.loc 1 1993 0
 4250 000e 0368     		ldr	r3, [r0]
 4251 0010 40F2FF52 		movw	r2, #1535
 4252 0014 9A63     		str	r2, [r3, #56]
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 4253              		.loc 1 1995 0
 4254 0016 036C     		ldr	r3, [r0, #64]
 4255 0018 D3B1     		cbz	r3, .L293
 4256              	.L286:
1998:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 4257              		.loc 1 1998 0
 4258 001a 2268     		ldr	r2, [r4]
 4259 001c D36A     		ldr	r3, [r2, #44]
 4260 001e 23F00803 		bic	r3, r3, #8
 4261 0022 D362     		str	r3, [r2, #44]
2001:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 4262              		.loc 1 2001 0
 4263 0024 206C     		ldr	r0, [r4, #64]
 4264              	.LVL498:
 4265 0026 08B1     		cbz	r0, .L288
2003:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 4266              		.loc 1 2003 0
 4267 0028 FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 132


 4268              	.LVL499:
 4269              	.L288:
2006:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 4270              		.loc 1 2006 0
 4271 002c E06B     		ldr	r0, [r4, #60]
 4272 002e 08B1     		cbz	r0, .L287
2008:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 4273              		.loc 1 2008 0
 4274 0030 FFF7FEFF 		bl	HAL_DMA_Abort
 4275              	.LVL500:
 4276              	.L287:
2012:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   CardState = HAL_MMC_GetCardState(hmmc);
 4277              		.loc 1 2012 0
 4278 0034 0123     		movs	r3, #1
 4279 0036 84F83430 		strb	r3, [r4, #52]
2013:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   if((CardState == HAL_MMC_CARD_RECEIVING) || (CardState == HAL_MMC_CARD_SENDING))
 4280              		.loc 1 2013 0
 4281 003a 2046     		mov	r0, r4
 4282 003c FFF7FEFF 		bl	HAL_MMC_GetCardState
 4283              	.LVL501:
2014:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 4284              		.loc 1 2014 0
 4285 0040 0538     		subs	r0, r0, #5
 4286              	.LVL502:
 4287 0042 C0B2     		uxtb	r0, r0
 4288 0044 0128     		cmp	r0, #1
 4289 0046 07D9     		bls	.L294
 4290              	.L289:
2018:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 4291              		.loc 1 2018 0
 4292 0048 A36B     		ldr	r3, [r4, #56]
 4293 004a 53B9     		cbnz	r3, .L295
2022:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 4294              		.loc 1 2022 0
 4295 004c 0020     		movs	r0, #0
 4296              	.L290:
2023:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 4297              		.loc 1 2023 0
 4298 004e 10BD     		pop	{r4, pc}
 4299              	.LVL503:
 4300              	.L293:
1995:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 4301              		.loc 1 1995 0 discriminator 1
 4302 0050 C36B     		ldr	r3, [r0, #60]
 4303 0052 002B     		cmp	r3, #0
 4304 0054 E1D1     		bne	.L286
 4305 0056 EDE7     		b	.L287
 4306              	.LVL504:
 4307              	.L294:
2016:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 4308              		.loc 1 2016 0
 4309 0058 2068     		ldr	r0, [r4]
 4310 005a FFF7FEFF 		bl	SDMMC_CmdStopTransfer
 4311              	.LVL505:
 4312 005e A063     		str	r0, [r4, #56]
 4313 0060 F2E7     		b	.L289
 4314              	.L295:
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 133


2020:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   }
 4315              		.loc 1 2020 0
 4316 0062 0120     		movs	r0, #1
 4317 0064 F3E7     		b	.L290
 4318              		.cfi_endproc
 4319              	.LFE162:
 4321              		.section	.text.HAL_MMC_Abort_IT,"ax",%progbits
 4322              		.align	1
 4323              		.global	HAL_MMC_Abort_IT
 4324              		.syntax unified
 4325              		.thumb
 4326              		.thumb_func
 4327              		.fpu fpv5-sp-d16
 4329              	HAL_MMC_Abort_IT:
 4330              	.LFB163:
2032:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   HAL_MMC_CardStateTypeDef CardState;
 4331              		.loc 1 2032 0
 4332              		.cfi_startproc
 4333              		@ args = 0, pretend = 0, frame = 0
 4334              		@ frame_needed = 0, uses_anonymous_args = 0
 4335              	.LVL506:
 4336 0000 10B5     		push	{r4, lr}
 4337              	.LCFI60:
 4338              		.cfi_def_cfa_offset 8
 4339              		.cfi_offset 4, -8
 4340              		.cfi_offset 14, -4
 4341 0002 0446     		mov	r4, r0
2036:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****                            SDMMC_IT_TXUNDERR| SDMMC_IT_RXOVERR);
 4342              		.loc 1 2036 0
 4343 0004 0268     		ldr	r2, [r0]
 4344 0006 D36B     		ldr	r3, [r2, #60]
 4345 0008 23F49D73 		bic	r3, r3, #314
 4346 000c D363     		str	r3, [r2, #60]
2040:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   
 4347              		.loc 1 2040 0
 4348 000e 0368     		ldr	r3, [r0]
 4349 0010 40F2FF52 		movw	r2, #1535
 4350 0014 9A63     		str	r2, [r3, #56]
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 4351              		.loc 1 2042 0
 4352 0016 036C     		ldr	r3, [r0, #64]
 4353 0018 E3B1     		cbz	r3, .L306
 4354              	.L297:
2045:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     
 4355              		.loc 1 2045 0
 4356 001a 2268     		ldr	r2, [r4]
 4357 001c D36A     		ldr	r3, [r2, #44]
 4358 001e 23F00803 		bic	r3, r3, #8
 4359 0022 D362     		str	r3, [r2, #44]
2048:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 4360              		.loc 1 2048 0
 4361 0024 236C     		ldr	r3, [r4, #64]
 4362 0026 3BB1     		cbz	r3, .L299
2050:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(HAL_DMA_Abort_IT(hmmc->hdmatx) != HAL_OK)
 4363              		.loc 1 2050 0
 4364 0028 1A4A     		ldr	r2, .L311
 4365 002a 1A65     		str	r2, [r3, #80]
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 134


2051:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 4366              		.loc 1 2051 0
 4367 002c 206C     		ldr	r0, [r4, #64]
 4368              	.LVL507:
 4369 002e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4370              	.LVL508:
 4371 0032 08B1     		cbz	r0, .L299
2053:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 4372              		.loc 1 2053 0
 4373 0034 0023     		movs	r3, #0
 4374 0036 2364     		str	r3, [r4, #64]
 4375              	.L299:
2057:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 4376              		.loc 1 2057 0
 4377 0038 E36B     		ldr	r3, [r4, #60]
 4378 003a 3BB1     		cbz	r3, .L298
2059:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       if(HAL_DMA_Abort_IT(hmmc->hdmarx) != HAL_OK)
 4379              		.loc 1 2059 0
 4380 003c 164A     		ldr	r2, .L311+4
 4381 003e 1A65     		str	r2, [r3, #80]
2060:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       {
 4382              		.loc 1 2060 0
 4383 0040 E06B     		ldr	r0, [r4, #60]
 4384 0042 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4385              	.LVL509:
 4386 0046 08B1     		cbz	r0, .L298
2062:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****       }
 4387              		.loc 1 2062 0
 4388 0048 0023     		movs	r3, #0
 4389 004a E363     		str	r3, [r4, #60]
 4390              	.L298:
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 4391              		.loc 1 2068 0
 4392 004c 236C     		ldr	r3, [r4, #64]
 4393 004e 2BB1     		cbz	r3, .L307
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 4394              		.loc 1 2086 0
 4395 0050 0020     		movs	r0, #0
 4396              	.L300:
2087:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** 
 4397              		.loc 1 2087 0
 4398 0052 10BD     		pop	{r4, pc}
 4399              	.LVL510:
 4400              	.L306:
2042:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 4401              		.loc 1 2042 0 discriminator 1
 4402 0054 C36B     		ldr	r3, [r0, #60]
 4403 0056 002B     		cmp	r3, #0
 4404 0058 DFD1     		bne	.L297
 4405 005a F7E7     		b	.L298
 4406              	.LVL511:
 4407              	.L307:
2068:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****   {
 4408              		.loc 1 2068 0 discriminator 1
 4409 005c E36B     		ldr	r3, [r4, #60]
 4410 005e 0BB1     		cbz	r3, .L308
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 135


 4411              		.loc 1 2086 0
 4412 0060 0020     		movs	r0, #0
 4413 0062 F6E7     		b	.L300
 4414              	.L308:
2070:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     hmmc->State = HAL_MMC_STATE_READY;
 4415              		.loc 1 2070 0
 4416 0064 2046     		mov	r0, r4
 4417 0066 FFF7FEFF 		bl	HAL_MMC_GetCardState
 4418              	.LVL512:
2071:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     if((CardState == HAL_MMC_CARD_RECEIVING) || (CardState == HAL_MMC_CARD_SENDING))
 4419              		.loc 1 2071 0
 4420 006a 0123     		movs	r3, #1
 4421 006c 84F83430 		strb	r3, [r4, #52]
2072:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 4422              		.loc 1 2072 0
 4423 0070 0538     		subs	r0, r0, #5
 4424              	.LVL513:
 4425 0072 C0B2     		uxtb	r0, r0
 4426 0074 9842     		cmp	r0, r3
 4427 0076 03D9     		bls	.L309
 4428              	.L301:
2076:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     {
 4429              		.loc 1 2076 0
 4430 0078 A36B     		ldr	r3, [r4, #56]
 4431 007a 33B1     		cbz	r3, .L310
2078:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 4432              		.loc 1 2078 0
 4433 007c 0120     		movs	r0, #1
 4434 007e E8E7     		b	.L300
 4435              	.L309:
2074:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 4436              		.loc 1 2074 0
 4437 0080 2068     		ldr	r0, [r4]
 4438 0082 FFF7FEFF 		bl	SDMMC_CmdStopTransfer
 4439              	.LVL514:
 4440 0086 A063     		str	r0, [r4, #56]
 4441 0088 F6E7     		b	.L301
 4442              	.L310:
2082:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c ****     }
 4443              		.loc 1 2082 0
 4444 008a 2046     		mov	r0, r4
 4445 008c FFF7FEFF 		bl	HAL_MMC_AbortCallback
 4446              	.LVL515:
2086:Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_mmc.c **** }
 4447              		.loc 1 2086 0
 4448 0090 0020     		movs	r0, #0
 4449 0092 DEE7     		b	.L300
 4450              	.L312:
 4451              		.align	2
 4452              	.L311:
 4453 0094 00000000 		.word	MMC_DMATxAbort
 4454 0098 00000000 		.word	MMC_DMARxAbort
 4455              		.cfi_endproc
 4456              	.LFE163:
 4458              		.text
 4459              	.Letext0:
 4460              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 136


 4461              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 4462              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 4463              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 4464              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f756xx.h"
 4465              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 4466              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 4467              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 4468              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\includ
 4469              		.file 11 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 4470              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 4471              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 4472              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_sdmmc.h"
 4473              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_mmc.h"
 4474              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 137


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_hal_mmc.c
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:18     .text.MMC_DMATransmitCplt:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:24     .text.MMC_DMATransmitCplt:00000000 MMC_DMATransmitCplt
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:49     .text.MMC_PowerON:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:55     .text.MMC_PowerON:00000000 MMC_PowerON
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:155    .text.MMC_PowerON:00000064 $d
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:161    .text.MMC_PowerOFF:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:167    .text.MMC_PowerOFF:00000000 MMC_PowerOFF
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:191    .text.MMC_Read_IT:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:197    .text.MMC_Read_IT:00000000 MMC_Read_IT
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:244    .text.MMC_Write_IT:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:250    .text.MMC_Write_IT:00000000 MMC_Write_IT
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:297    .text.MMC_SendStatus:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:303    .text.MMC_SendStatus:00000000 MMC_SendStatus
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:358    .text.HAL_MMC_MspInit:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:365    .text.HAL_MMC_MspInit:00000000 HAL_MMC_MspInit
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:379    .text.HAL_MMC_MspDeInit:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:386    .text.HAL_MMC_MspDeInit:00000000 HAL_MMC_MspDeInit
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:400    .text.HAL_MMC_DeInit:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:407    .text.HAL_MMC_DeInit:00000000 HAL_MMC_DeInit
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:455    .text.HAL_MMC_ReadBlocks:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:462    .text.HAL_MMC_ReadBlocks:00000000 HAL_MMC_ReadBlocks
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:842    .text.HAL_MMC_WriteBlocks:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:849    .text.HAL_MMC_WriteBlocks:00000000 HAL_MMC_WriteBlocks
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:1197   .text.HAL_MMC_ReadBlocks_IT:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:1204   .text.HAL_MMC_ReadBlocks_IT:00000000 HAL_MMC_ReadBlocks_IT
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:1407   .text.HAL_MMC_WriteBlocks_IT:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:1414   .text.HAL_MMC_WriteBlocks_IT:00000000 HAL_MMC_WriteBlocks_IT
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:1614   .text.HAL_MMC_ReadBlocks_DMA:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:1621   .text.HAL_MMC_ReadBlocks_DMA:00000000 HAL_MMC_ReadBlocks_DMA
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:1839   .text.HAL_MMC_ReadBlocks_DMA:00000108 $d
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2409   .text.MMC_DMAReceiveCplt:00000000 MMC_DMAReceiveCplt
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3674   .text.MMC_DMAError:00000000 MMC_DMAError
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:1845   .text.HAL_MMC_WriteBlocks_DMA:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:1852   .text.HAL_MMC_WriteBlocks_DMA:00000000 HAL_MMC_WriteBlocks_DMA
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2070   .text.HAL_MMC_WriteBlocks_DMA:00000108 $d
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2076   .text.HAL_MMC_Erase:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2083   .text.HAL_MMC_Erase:00000000 HAL_MMC_Erase
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2292   .text.HAL_MMC_GetState:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2299   .text.HAL_MMC_GetState:00000000 HAL_MMC_GetState
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2316   .text.HAL_MMC_GetError:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2323   .text.HAL_MMC_GetError:00000000 HAL_MMC_GetError
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2340   .text.HAL_MMC_TxCpltCallback:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2347   .text.HAL_MMC_TxCpltCallback:00000000 HAL_MMC_TxCpltCallback
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2361   .text.HAL_MMC_RxCpltCallback:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2368   .text.HAL_MMC_RxCpltCallback:00000000 HAL_MMC_RxCpltCallback
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2382   .text.HAL_MMC_ErrorCallback:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2389   .text.HAL_MMC_ErrorCallback:00000000 HAL_MMC_ErrorCallback
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2403   .text.MMC_DMAReceiveCplt:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2473   .text.HAL_MMC_AbortCallback:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2480   .text.HAL_MMC_AbortCallback:00000000 HAL_MMC_AbortCallback
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2494   .text.HAL_MMC_GetCardCID:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2501   .text.HAL_MMC_GetCardCID:00000000 HAL_MMC_GetCardCID
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2658   .text.HAL_MMC_GetCardCSD:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2665   .text.HAL_MMC_GetCardCSD:00000000 HAL_MMC_GetCardCSD
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2922   .text.MMC_InitCard:00000000 $t
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 138


C:\Users\micha\AppData\Local\Temp\ccyWq778.s:2928   .text.MMC_InitCard:00000000 MMC_InitCard
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3090   .text.HAL_MMC_InitCard:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3097   .text.HAL_MMC_InitCard:00000000 HAL_MMC_InitCard
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3211   .text.HAL_MMC_Init:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3218   .text.HAL_MMC_Init:00000000 HAL_MMC_Init
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3279   .text.HAL_MMC_GetCardInfo:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3286   .text.HAL_MMC_GetCardInfo:00000000 HAL_MMC_GetCardInfo
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3323   .text.HAL_MMC_ConfigWideBusOperation:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3330   .text.HAL_MMC_ConfigWideBusOperation:00000000 HAL_MMC_ConfigWideBusOperation
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3608   .text.HAL_MMC_ConfigWideBusOperation:00000168 $d
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3615   .text.HAL_MMC_GetCardState:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3622   .text.HAL_MMC_GetCardState:00000000 HAL_MMC_GetCardState
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3668   .text.MMC_DMAError:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3755   .text.MMC_DMATxAbort:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3761   .text.MMC_DMATxAbort:00000000 MMC_DMATxAbort
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3835   .text.MMC_DMARxAbort:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3841   .text.MMC_DMARxAbort:00000000 MMC_DMARxAbort
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3915   .text.HAL_MMC_IRQHandler:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:3922   .text.HAL_MMC_IRQHandler:00000000 HAL_MMC_IRQHandler
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:4218   .text.HAL_MMC_IRQHandler:000001b8 $d
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:4224   .text.HAL_MMC_Abort:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:4231   .text.HAL_MMC_Abort:00000000 HAL_MMC_Abort
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:4322   .text.HAL_MMC_Abort_IT:00000000 $t
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:4329   .text.HAL_MMC_Abort_IT:00000000 HAL_MMC_Abort_IT
C:\Users\micha\AppData\Local\Temp\ccyWq778.s:4453   .text.HAL_MMC_Abort_IT:00000094 $d

UNDEFINED SYMBOLS
SDMMC_CmdGoIdleState
SDMMC_CmdOpCondition
SDMMC_GetResponse
SDMMC_PowerState_OFF
SDMMC_ReadFIFO
SDMMC_WriteFIFO
SDMMC_CmdSendStatus
HAL_GetTick
SDMMC_CmdBlockLength
SDMMC_ConfigData
SDMMC_CmdReadMultiBlock
SDMMC_CmdReadSingleBlock
SDMMC_CmdStopTransfer
SDMMC_CmdWriteMultiBlock
SDMMC_CmdWriteSingleBlock
HAL_DMA_Start_IT
SDMMC_CmdEraseStartAdd
SDMMC_CmdEraseEndAdd
SDMMC_CmdErase
SDMMC_GetPowerState
SDMMC_CmdSendCID
SDMMC_CmdSetRelAdd
SDMMC_CmdSendCSD
SDMMC_CmdSelDesel
SDMMC_Init
SDMMC_PowerState_ON
HAL_Delay
SDMMC_CmdSwitch
HAL_DMA_GetError
HAL_DMA_Abort_IT
ARM GAS  C:\Users\micha\AppData\Local\Temp\ccyWq778.s 			page 139


HAL_DMA_Abort
